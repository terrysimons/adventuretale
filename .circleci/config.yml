# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# TODO:  Turn hard coded version strings into variables


orbs:
  win: circleci/windows@5.0
  macos: circleci/macos@2.3.6
  jira: circleci/jira@1.3.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test-linux:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.11.5
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps

    resource_class: large

    steps:
      - checkout

      - run:
          name: "Build and Test Linux"
          command: |
            # rm -rf ~/.pyenv
            # git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            # cd ~/.pyenv && src/configure && make -C src
            # echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
            # echo 'PATH="$HOME/.pyenv/shims:$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc
            # echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            # source ~/.bashrc

            echo "Path: $PATH"
            echo "Pyenv: "
            echo $(which pyenv)
            echo "Building Python 3.11.5, 3.10.13, 3.9.18"

            PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install -f 3.11.5 3.10.13 3.9.18 && pyenv global 3.11.5 3.11.5 3.10.13 3.9.18
            python --version
            pyenv versions
            pip install nox nox-poetry ruff
            cd ~/project
            nox

  build-and-test-macos:
    macos:
      xcode: 14.3.1

    resource_class: medium

    steps:
      # Commands will execute in macOS container
      # with Xcode 14.3.1 installed
      - checkout
      - run:
          name: "Build and Test macOS"
          command: |
            rm -rf ~/.pyenv
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            cd ~/.pyenv && src/configure && make -C src
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
            echo 'PATH="$HOME/.pyenv/shims:$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc
            source ~/.bashrc
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo $(which pyenv)
            PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install -f 3.11.5 3.10.13 3.9.18 && pyenv global 3.11.5 3.11.5 3.10.13 3.9.18
            python --version
            pyenv versions
            pip install nox nox-poetry ruff
            cd ~/project
            nox

      # - run: echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
      # - run: echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
      # - run: echo 'eval "$(pyenv init -)"' >> ~/.zshrc
      # - run: source ~/.zshrc

  build-and-test-windows:
    executor:
      name: win/default
      size: large

    steps:
      - checkout

      - run:
          name: "Build and Test Windows"
          command: |
            choco install -y python3 --version=3.11.5
            Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
            (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
            set PATH=%PATH%;%USERPROFILE%\AppData\Roaming\pypoetry\venv\Scripts
            refreshenv
            pip install nox nox-poetry poetry ruff
            nox


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test:
    jobs:
      - build-and-test-linux
      - build-and-test-macos
      - build-and-test-windows


