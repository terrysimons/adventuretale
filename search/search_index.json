{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"index"},{"location":"about/","text":"Vulnus orbem ante cum facti tantae Amantis nervo iactatis Lorem markdownum vivitur idem, requirit solidaque imagine parentum, belli. Commissus quia. Ille texerat: subiit coniuge ramus; Agenorides qui tantis Alcidae fila splendidior lecti Athin eveniunt delicuit tempore. Presserat greges Cytherea Antandro tela nam superis inde. Mitescere nec ad mea ponto mergis caelataeque Quae sonumque illis capellas agit Aram mihi concepit esse esse expalluit Typhoea Miserum niveae ingratus in bis erit quia somnus. Ubi fata fatalia, ligamina Cytherea! Ac deorum nisi, non locum, et plectrumque haut, et Acrota reddant aliisque. Ne petiit, patrio, omnem facto somnia. Par aquas nudorum Summa tertia est melius flebat locus relinquunt Montis quoque vides primusque per sparsum videbar Conplexibus frustraque hunc Ita tepidi quam lumina pennis Veretur et veniet Lumina Demoleonta procubuit Circe Est forte vixque, dixit eris vidi corpore posset usque, contractus replet. Ima patrios pendat vitiantes ignes. Haerebat sceleri. Famulus altior amante esse sontem cadunt mella, terrasque tetigere miserisque forma Philyreia vestras. Iacta quidem illa dum; capiti, clam serpit sorores, rectoque Palladaque aurata. Educta flectitque maior: quercus canae laedor agrestibus bella fingant. Fortibus umoribus factis vimque, mihi est aut limite cetera perfida. Enim nebula magni haud parvo frons, maris exanimi; tribuisse principiis. Manat insequitur , positis quid piasque, qui tantum, quisquis vana Cephalus velamina. Fert dictaque dolor, ira vel; ut densa si servor viscera bracchia, linquit est servat ictus anguipedum. Modo telae sic extemplo Venulus nomen vires dubitare, mollirique, aetas? Iter attolle omnia ripae vivaci plurima, media labique lacrimis Siculis ut litora sospite. Disiecta obruor meritum in aequore precor pedibusque pendentis.","title":"Vulnus orbem ante cum facti tantae"},{"location":"about/#vulnus-orbem-ante-cum-facti-tantae","text":"","title":"Vulnus orbem ante cum facti tantae"},{"location":"about/#amantis-nervo-iactatis","text":"Lorem markdownum vivitur idem, requirit solidaque imagine parentum, belli. Commissus quia. Ille texerat: subiit coniuge ramus; Agenorides qui tantis Alcidae fila splendidior lecti Athin eveniunt delicuit tempore. Presserat greges Cytherea Antandro tela nam superis inde. Mitescere nec ad mea ponto mergis caelataeque Quae sonumque illis capellas agit Aram mihi concepit esse esse expalluit Typhoea Miserum niveae ingratus in bis erit quia somnus. Ubi fata fatalia, ligamina Cytherea! Ac deorum nisi, non locum, et plectrumque haut, et Acrota reddant aliisque. Ne petiit, patrio, omnem facto somnia. Par aquas nudorum Summa tertia est melius flebat locus relinquunt Montis quoque vides primusque per sparsum videbar Conplexibus frustraque hunc Ita tepidi quam lumina pennis Veretur et veniet","title":"Amantis nervo iactatis"},{"location":"about/#lumina-demoleonta-procubuit-circe","text":"Est forte vixque, dixit eris vidi corpore posset usque, contractus replet. Ima patrios pendat vitiantes ignes. Haerebat sceleri. Famulus altior amante esse sontem cadunt mella, terrasque tetigere miserisque forma Philyreia vestras. Iacta quidem illa dum; capiti, clam serpit sorores, rectoque Palladaque aurata. Educta flectitque maior: quercus canae laedor agrestibus bella fingant. Fortibus umoribus factis vimque, mihi est aut limite cetera perfida. Enim nebula magni haud parvo frons, maris exanimi; tribuisse principiis. Manat insequitur , positis quid piasque, qui tantum, quisquis vana Cephalus velamina. Fert dictaque dolor, ira vel; ut densa si servor viscera bracchia, linquit est servat ictus anguipedum. Modo telae sic extemplo Venulus nomen vires dubitare, mollirique, aetas? Iter attolle omnia ripae vivaci plurima, media labique lacrimis Siculis ut litora sospite. Disiecta obruor meritum in aequore precor pedibusque pendentis.","title":"Lumina Demoleonta procubuit Circe"},{"location":"reference/","text":"","title":"Index"},{"location":"reference/SUMMARY/","text":"glitchygames api color palette engine events audio controller drop joystick keyboard midi mouse touch window examples dt_demo joystick_demo paddleslap text_input_demo fonts game_objects ball paddle sounds interfaces interfaces movement horizontal speed vertical pixels scenes sprites templates tools bitmappy ui","title":"SUMMARY"},{"location":"reference/glitchygames/api/","text":"glitchygames.api Glitchygames plugin API.","title":"api"},{"location":"reference/glitchygames/api/#glitchygames.api","text":"Glitchygames plugin API.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;api"},{"location":"reference/glitchygames/color/","text":"glitchygames.color Color constants and palette helpers. This module contains color constants and palette helpers. Attributes glitchygames.color.NES module-attribute NES = 'nes' glitchygames.color.SYSTEM module-attribute SYSTEM = 'system' glitchygames.color.VGA module-attribute VGA = 'vga' glitchygames.color.__all__ module-attribute __all__ = [ 'NES' , 'SYSTEM' , 'VGA' , 'Default' ] glitchygames.color._default_colors module-attribute _default_colors : Default = Default () glitchygames.color.YELLOW module-attribute YELLOW = YELLOW glitchygames.color.PURPLE module-attribute PURPLE = PURPLE glitchygames.color.BLUE module-attribute BLUE = BLUE glitchygames.color.GREEN module-attribute GREEN = GREEN glitchygames.color.WHITE module-attribute WHITE = WHITE glitchygames.color.BLACK module-attribute BLACK = BLACK glitchygames.color.BLACKLUCENT module-attribute BLACKLUCENT = BLACKLUCENT glitchygames.color.BLUELUCENT module-attribute BLUELUCENT = BLUELUCENT glitchygames.color.RED module-attribute RED = RED Classes glitchygames.color.Default Bases: ColorPalette A default set of colors used for Glitchy Games Examples. Attributes glitchygames.color.Default.YELLOW instance-attribute YELLOW = get_color ( 0 ) glitchygames.color.Default.PURPLE instance-attribute PURPLE = get_color ( 1 ) glitchygames.color.Default.BLUE instance-attribute BLUE = get_color ( 2 ) glitchygames.color.Default.GREEN instance-attribute GREEN = get_color ( 3 ) glitchygames.color.Default.WHITE instance-attribute WHITE = get_color ( 4 ) glitchygames.color.Default.BLACK instance-attribute BLACK = get_color ( 5 ) glitchygames.color.Default.BLACKLUCENT instance-attribute BLACKLUCENT = get_color ( 6 ) glitchygames.color.Default.BLUELUCENT instance-attribute BLUELUCENT = get_color ( 7 ) glitchygames.color.Default.RED instance-attribute RED = get_color ( 8 ) Functions glitchygames.color.Default.get_color get_color ( palette_index : int ) -> tuple [ int , int , int ] Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames.color.Default.set_color set_color ( palette_index : int , new_color : tuple ) -> None Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames.color.Default.__init__ __init__ () -> None Create a default color palette object. Returns: None \u2013 None","title":"color"},{"location":"reference/glitchygames/color/#glitchygames.color","text":"Color constants and palette helpers. This module contains color constants and palette helpers.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;color"},{"location":"reference/glitchygames/color/#glitchygames.color-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/color/#glitchygames.color.NES","text":"NES = 'nes'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;NES"},{"location":"reference/glitchygames/color/#glitchygames.color.SYSTEM","text":"SYSTEM = 'system'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SYSTEM"},{"location":"reference/glitchygames/color/#glitchygames.color.VGA","text":"VGA = 'vga'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;VGA"},{"location":"reference/glitchygames/color/#glitchygames.color.__all__","text":"__all__ = [ 'NES' , 'SYSTEM' , 'VGA' , 'Default' ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__all__"},{"location":"reference/glitchygames/color/#glitchygames.color._default_colors","text":"_default_colors : Default = Default ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;_default_colors"},{"location":"reference/glitchygames/color/#glitchygames.color.YELLOW","text":"YELLOW = YELLOW","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;YELLOW"},{"location":"reference/glitchygames/color/#glitchygames.color.PURPLE","text":"PURPLE = PURPLE","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PURPLE"},{"location":"reference/glitchygames/color/#glitchygames.color.BLUE","text":"BLUE = BLUE","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLUE"},{"location":"reference/glitchygames/color/#glitchygames.color.GREEN","text":"GREEN = GREEN","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;GREEN"},{"location":"reference/glitchygames/color/#glitchygames.color.WHITE","text":"WHITE = WHITE","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;WHITE"},{"location":"reference/glitchygames/color/#glitchygames.color.BLACK","text":"BLACK = BLACK","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACK"},{"location":"reference/glitchygames/color/#glitchygames.color.BLACKLUCENT","text":"BLACKLUCENT = BLACKLUCENT","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACKLUCENT"},{"location":"reference/glitchygames/color/#glitchygames.color.BLUELUCENT","text":"BLUELUCENT = BLUELUCENT","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLUELUCENT"},{"location":"reference/glitchygames/color/#glitchygames.color.RED","text":"RED = RED","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;RED"},{"location":"reference/glitchygames/color/#glitchygames.color-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/color/#glitchygames.color.Default","text":"Bases: ColorPalette A default set of colors used for Glitchy Games Examples.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Default"},{"location":"reference/glitchygames/color/#glitchygames.color.Default-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.YELLOW","text":"YELLOW = get_color ( 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;YELLOW"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.PURPLE","text":"PURPLE = get_color ( 1 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PURPLE"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.BLUE","text":"BLUE = get_color ( 2 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLUE"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.GREEN","text":"GREEN = get_color ( 3 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;GREEN"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.WHITE","text":"WHITE = get_color ( 4 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;WHITE"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.BLACK","text":"BLACK = get_color ( 5 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACK"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.BLACKLUCENT","text":"BLACKLUCENT = get_color ( 6 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACKLUCENT"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.BLUELUCENT","text":"BLUELUCENT = get_color ( 7 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLUELUCENT"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.RED","text":"RED = get_color ( 8 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;RED"},{"location":"reference/glitchygames/color/#glitchygames.color.Default-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.get_color","text":"get_color ( palette_index : int ) -> tuple [ int , int , int ] Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;get_color"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.set_color","text":"set_color ( palette_index : int , new_color : tuple ) -> None Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;set_color"},{"location":"reference/glitchygames/color/#glitchygames.color.Default.__init__","text":"__init__ () -> None Create a default color palette object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/","text":"glitchygames.engine Contains GameEngine and helper classes for building a game. Attributes glitchygames.engine.PURPLE module-attribute PURPLE = PURPLE glitchygames.engine.LOG module-attribute LOG : Logger = getLogger ( 'game.engine' ) glitchygames.engine.PACKAGE_PATH module-attribute PACKAGE_PATH : str = parent glitchygames.engine.ASSET_PATH module-attribute ASSET_PATH : str = parent / 'assets' glitchygames.engine.TEST_MODE module-attribute TEST_MODE = False Classes glitchygames.engine.HashableEvent Bases: dict Attributes glitchygames.engine.HashableEvent.type instance-attribute type = type glitchygames.engine.HashableEvent.__hash instance-attribute __hash = hash (( type , tuple ( keys ()))) glitchygames.engine.HashableEvent.dict property dict Functions glitchygames.engine.HashableEvent.__init__ __init__ ( type , * args , ** attributes ) glitchygames.engine.HashableEvent.__setitem__ __setitem__ ( key , item ) glitchygames.engine.HashableEvent.__getitem__ __getitem__ ( key ) glitchygames.engine.HashableEvent.__repr__ __repr__ () glitchygames.engine.HashableEvent.__len__ __len__ () glitchygames.engine.HashableEvent.__delitem__ __delitem__ ( key ) glitchygames.engine.HashableEvent.clear clear () glitchygames.engine.HashableEvent.copy copy () glitchygames.engine.HashableEvent.has_key has_key ( k ) glitchygames.engine.HashableEvent.update update ( * args , ** kwargs ) glitchygames.engine.HashableEvent.keys keys () glitchygames.engine.HashableEvent.values values () glitchygames.engine.HashableEvent.__hash__ __hash__ () glitchygames.engine.HashableEvent.__eq__ __eq__ ( other ) glitchygames.engine.HashableEvent.__ne__ __ne__ ( other ) glitchygames.engine.HashableEvent.__str__ __str__ () glitchygames.engine.HashableEvent.__copy__ __copy__ () glitchygames.engine.HashableEvent.__deepcopy__ __deepcopy__ ( memo ) glitchygames.engine.HashableEvent.__reduce__ __reduce__ () glitchygames.engine.HashableEvent.__setstate__ __setstate__ ( state ) glitchygames.engine.AudioManager Bases: ResourceManager Manage pygame audio events. Attributes glitchygames.engine.AudioManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.AudioManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.AudioManager.proxies instance-attribute proxies = [ AudioProxy ( game = game )] Classes glitchygames.engine.AudioManager.AudioProxy Bases: AudioEvents , ResourceManager Pygame audio event proxy. Attributes glitchygames.engine.AudioManager.AudioProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.AudioManager.AudioProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.AudioManager.AudioProxy.game instance-attribute game = game glitchygames.engine.AudioManager.AudioProxy.proxies instance-attribute proxies = [ game , mixer ] Functions glitchygames.engine.AudioManager.AudioProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.AudioManager.AudioProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.AudioManager.AudioProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.AudioManager.AudioProxy.__init__ __init__ ( game : object = None ) -> None Initialize the audio proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.AudioManager.AudioProxy.on_audio_device_added_event on_audio_device_added_event ( event : Event ) -> None Handle audio device added event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.AudioManager.AudioProxy.on_audio_device_removed_event on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames.engine.AudioManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.AudioManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.AudioManager.__init__ __init__ ( game : object = None ) -> None Initialize the audio manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.AudioManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser. glitchygames.engine.ControllerManager Bases: ControllerEvents , ResourceManager Manage controller events. Attributes glitchygames.engine.ControllerManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.ControllerManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.ControllerManager.controllers instance-attribute controllers = {} glitchygames.engine.ControllerManager.proxies instance-attribute proxies = [ game ] glitchygames.engine.ControllerManager.game instance-attribute game = game Classes glitchygames.engine.ControllerManager.ControllerProxy Bases: ControllerEvents , ResourceManager Proxy class for controller events. Attributes glitchygames.engine.ControllerManager.ControllerProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.ControllerManager.ControllerProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.ControllerManager.ControllerProxy.AXIS class-attribute instance-attribute AXIS : ClassVar = [ CONTROLLER_AXIS_LEFTX , CONTROLLER_AXIS_LEFTY , CONTROLLER_AXIS_RIGHTX , CONTROLLER_AXIS_RIGHTY , CONTROLLER_AXIS_TRIGGERLEFT , CONTROLLER_AXIS_TRIGGERRIGHT , ] glitchygames.engine.ControllerManager.ControllerProxy.BUTTONS class-attribute instance-attribute BUTTONS : ClassVar = [ CONTROLLER_BUTTON_A , CONTROLLER_BUTTON_B , CONTROLLER_BUTTON_X , CONTROLLER_BUTTON_Y , CONTROLLER_BUTTON_DPAD_UP , CONTROLLER_BUTTON_DPAD_DOWN , CONTROLLER_BUTTON_DPAD_LEFT , CONTROLLER_BUTTON_DPAD_RIGHT , CONTROLLER_BUTTON_LEFTSHOULDER , CONTROLLER_BUTTON_RIGHTSHOULDER , CONTROLLER_BUTTON_LEFTSTICK , CONTROLLER_BUTTON_RIGHTSTICK , CONTROLLER_BUTTON_BACK , CONTROLLER_BUTTON_GUIDE , CONTROLLER_BUTTON_START , ] glitchygames.engine.ControllerManager.ControllerProxy.controller instance-attribute controller = Controller ( _id ) glitchygames.engine.ControllerManager.ControllerProxy.game instance-attribute game = game glitchygames.engine.ControllerManager.ControllerProxy.proxies instance-attribute proxies = [ game , controller ] Functions glitchygames.engine.ControllerManager.ControllerProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.ControllerManager.ControllerProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.ControllerManager.ControllerProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.ControllerManager.ControllerProxy.__init__ __init__ ( game : object = None , controller_id : int = - 1 ) -> None Initialize the controller proxy. Parameters: game ( object , default: None ) \u2013 The game object. controller_id ( int , default: -1 ) \u2013 The controller id. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_axis_motion_event on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_button_down_event on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_button_up_event on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_added_event on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_remapped_event on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_removed_event on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_down_event on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_motion_event on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_up_event on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.__str__ __str__ () -> LiteralString Return a string representation of the controller. Returns: str ( LiteralString ) \u2013 A string representation of the controller. glitchygames.engine.ControllerManager.ControllerProxy.__repr__ __repr__ () -> str Return a string representation of the controller object. Returns: str ( str ) \u2013 A string representation of the controller object. Functions glitchygames.engine.ControllerManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.ControllerManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.ControllerManager.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.ControllerManager.__init__ __init__ ( game : object = None ) -> None Initialize the ControllerManager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.ControllerManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add controller options to the parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser: The argument parser. glitchygames.engine.ControllerManager.on_controller_axis_motion_event on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_button_down_event on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_button_up_event on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_device_added_event on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_device_remapped_event on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_device_removed_event on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_touchpad_down_event on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_touchpad_motion_event on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.on_controller_touchpad_up_event on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.DropManager Bases: ResourceManager Manage drop events. Attributes glitchygames.engine.DropManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.DropManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.DropManager.proxies instance-attribute proxies = [ DropProxy ( game = game )] Classes glitchygames.engine.DropManager.DropProxy Bases: DropEvents , ResourceManager Proxy class for drop events. Attributes glitchygames.engine.DropManager.DropProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.DropManager.DropProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.DropManager.DropProxy.game instance-attribute game = game glitchygames.engine.DropManager.DropProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.DropManager.DropProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.DropManager.DropProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.DropManager.DropProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.DropManager.DropProxy.__init__ __init__ ( game : object = None ) -> None Initialize the drop proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_begin_event on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_complete_event on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_file_event on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_text_event on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames.engine.DropManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.DropManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.DropManager.__init__ __init__ ( game : object = None ) -> None Initialize the drop manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.DropManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser. glitchygames.engine.JoystickManager Bases: JoystickEvents , ResourceManager Manage joystick events. Attributes glitchygames.engine.JoystickManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.JoystickManager.log class-attribute instance-attribute log = LOG glitchygames.engine.JoystickManager.joysticks instance-attribute joysticks = {} glitchygames.engine.JoystickManager.game instance-attribute game = game glitchygames.engine.JoystickManager.proxies instance-attribute proxies = [ game ] Classes glitchygames.engine.JoystickManager.JoystickProxy Bases: JoystickEvents , ResourceManager Joystick event proxy. Attributes glitchygames.engine.JoystickManager.JoystickProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.JoystickManager.JoystickProxy.log class-attribute instance-attribute log = LOG glitchygames.engine.JoystickManager.JoystickProxy.joystick instance-attribute joystick = Joystick ( _id ) glitchygames.engine.JoystickManager.JoystickProxy.game instance-attribute game = game glitchygames.engine.JoystickManager.JoystickProxy.proxies instance-attribute proxies = [ game , joystick ] Functions glitchygames.engine.JoystickManager.JoystickProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.JoystickManager.JoystickProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.JoystickManager.JoystickProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.JoystickManager.JoystickProxy.__init__ __init__ ( game : object = None , joystick_id : int = - 1 ) -> None Initialize the joystick event proxy. Parameters: game ( object , default: None ) \u2013 The game object. joystick_id ( int , default: -1 ) \u2013 The joystick id. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_device_added_event on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_device_removed_event on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.get_name get_name () -> str Get the joystick name. Returns: str ( str ) \u2013 The joystick name. glitchygames.engine.JoystickManager.JoystickProxy.get_init get_init () -> bool Get the joystick init status. Returns: bool ( bool ) \u2013 The joystick init status. glitchygames.engine.JoystickManager.JoystickProxy.get_numaxes get_numaxes () -> int Get the number of axes. Returns: int ( int ) \u2013 The number of axes. glitchygames.engine.JoystickManager.JoystickProxy.get_numballs get_numballs () -> int Get the number of trackballs. Returns: int ( int ) \u2013 The number of trackballs. glitchygames.engine.JoystickManager.JoystickProxy.get_numbuttons get_numbuttons () -> int Get the number of buttons. Returns: int ( int ) \u2013 The number of buttons. glitchygames.engine.JoystickManager.JoystickProxy.get_numhats get_numhats () -> int Get the number of hats. Returns: int ( int ) \u2013 The number of hats. glitchygames.engine.JoystickManager.JoystickProxy.__str__ __str__ () -> str Get the joystick info. Returns: str ( str ) \u2013 The joystick info. glitchygames.engine.JoystickManager.JoystickProxy.__repr__ __repr__ () -> str Get the joystick representation. Returns: str ( str ) \u2013 The joystick representation. Functions glitchygames.engine.JoystickManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.JoystickManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.JoystickManager.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.JoystickManager.__init__ __init__ ( game : object = None ) -> None Initialize the joystick event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.JoystickManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add joystick-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.engine.JoystickManager.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_device_added_event on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.on_joy_device_removed_event on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.KeyboardManager Bases: ResourceManager Manage keyboard events. Attributes glitchygames.engine.KeyboardManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.KeyboardManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.KeyboardManager.proxies instance-attribute proxies = [ KeyboardProxy ( game = game )] Classes glitchygames.engine.KeyboardManager.KeyboardProxy Bases: KeyboardEvents , ResourceManager Keyboard event proxy. Attributes glitchygames.engine.KeyboardManager.KeyboardProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.KeyboardManager.KeyboardProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.KeyboardManager.KeyboardProxy.keys instance-attribute keys = {} glitchygames.engine.KeyboardManager.KeyboardProxy.game instance-attribute game = game glitchygames.engine.KeyboardManager.KeyboardProxy.proxies instance-attribute proxies = [ game , key ] Functions glitchygames.engine.KeyboardManager.KeyboardProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.KeyboardManager.KeyboardProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.KeyboardManager.KeyboardProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.KeyboardManager.KeyboardProxy.__init__ __init__ ( game : object = None ) -> None Initialize the keyboard event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_down_event on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_chord_down_event on_key_chord_down_event ( event : Event ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys_down ( list ) \u2013 The keys that are currently down. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_chord_up_event on_key_chord_up_event ( event : Event ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames.engine.KeyboardManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.KeyboardManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.KeyboardManager.__init__ __init__ ( game : object = None ) -> None Initialize the keyboard event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.KeyboardManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add keyboard-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.engine.MidiManager Bases: ResourceManager Manage midi events. Attributes glitchygames.engine.MidiManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.MidiManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.MidiManager.proxies instance-attribute proxies = [] Functions glitchygames.engine.MidiManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.MidiManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.MidiManager.__init__ __init__ ( game : object = None ) -> None Initialize the midi event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.MidiManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add midi-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.engine.MouseManager Bases: ResourceManager Mouse manager event handler. Attributes glitchygames.engine.MouseManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.MouseManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.MouseManager.proxies instance-attribute proxies = [ MouseProxy ( game = game )] Classes glitchygames.engine.MouseManager.MouseProxy Bases: MouseEvents , ResourceManager Mouse manager event proxy. Attributes glitchygames.engine.MouseManager.MouseProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.MouseManager.MouseProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.MouseManager.MouseProxy.mouse_state instance-attribute mouse_state = {} glitchygames.engine.MouseManager.MouseProxy.mouse_dragging instance-attribute mouse_dragging = False glitchygames.engine.MouseManager.MouseProxy.mouse_dropping instance-attribute mouse_dropping = False glitchygames.engine.MouseManager.MouseProxy.current_focus instance-attribute current_focus = None glitchygames.engine.MouseManager.MouseProxy.previous_focus instance-attribute previous_focus = None glitchygames.engine.MouseManager.MouseProxy.focus_locked instance-attribute focus_locked = False glitchygames.engine.MouseManager.MouseProxy.game instance-attribute game = game glitchygames.engine.MouseManager.MouseProxy.proxies instance-attribute proxies = [ game , mouse ] Functions glitchygames.engine.MouseManager.MouseProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.MouseManager.MouseProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.MouseManager.MouseProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.MouseManager.MouseProxy.__init__ __init__ ( game : object = None ) -> None Initialize the mouse manager event proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle the mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_focus_event on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle the mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object entering focus. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle the mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object leaving focus. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle the mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle the middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle the mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle the middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle the right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle the mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle the mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_wheel_event on_mouse_wheel_event ( event : Event ) -> None Handle the mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames.engine.MouseManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.MouseManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.MouseManager.__init__ __init__ ( game : object = None ) -> None Initialize the mouse manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.MouseManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.engine.TouchManager Bases: ResourceManager Touch event manager. Attributes glitchygames.engine.TouchManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.TouchManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.TouchManager.proxies instance-attribute proxies = [ TouchProxy ( game = game )] Classes glitchygames.engine.TouchManager.TouchProxy Bases: TouchEvents , ResourceManager Touch event proxy. Attributes glitchygames.engine.TouchManager.TouchProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.TouchManager.TouchProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.TouchManager.TouchProxy.fingers instance-attribute fingers : dict = {} glitchygames.engine.TouchManager.TouchProxy.game instance-attribute game : object = game glitchygames.engine.TouchManager.TouchProxy.proxies instance-attribute proxies : list = [ game , touch ] Functions glitchygames.engine.TouchManager.TouchProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.TouchManager.TouchProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.TouchManager.TouchProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.TouchManager.TouchProxy.__init__ __init__ ( game : object = None ) -> None Initialize the finger event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_down_event on_touch_down_event ( event : Event ) -> None Handle finger down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_motion_event on_touch_motion_event ( event : Event ) -> None Handle finger motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_up_event on_touch_up_event ( event : Event ) -> None Handle finger up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_down_event on_multi_touch_down_event ( event : Event ) -> None Handle multi-touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_motion_event on_multi_touch_motion_event ( event : Event ) -> None Handle multi-touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_up_event on_multi_touch_up_event ( event : Event ) -> None Handle multi-touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames.engine.TouchManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.TouchManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.TouchManager.__init__ __init__ ( game : object = None ) -> None Initialize the touch event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.WindowManager Bases: ResourceManager Window manager event handler. Attributes glitchygames.engine.WindowManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.WindowManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.WindowManager.proxies instance-attribute proxies = [ WindowManagerProxy ( game = game )] Classes glitchygames.engine.WindowManager.WindowManagerProxy Bases: WindowEvents , ResourceManager Window manager event proxy. Attributes glitchygames.engine.WindowManager.WindowManagerProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.WindowManager.WindowManagerProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.WindowManager.WindowManagerProxy.game instance-attribute game = game glitchygames.engine.WindowManager.WindowManagerProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.WindowManager.WindowManagerProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.WindowManager.WindowManagerProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.WindowManager.WindowManagerProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.WindowManager.WindowManagerProxy.__init__ __init__ ( game : object = None ) -> None Initialize the window manager proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_close_event on_window_close_event ( event : Event ) -> None Handle the window close event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_enter_event on_window_enter_event ( event : Event ) -> None Handle the window enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_exposed_event on_window_exposed_event ( event : Event ) -> None Handle the window exposed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_focus_gained_event on_window_focus_gained_event ( event : Event ) -> None Handle the window focus gained event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_focus_lost_event on_window_focus_lost_event ( event : Event ) -> None Handle the window focus lost event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_hidden_event on_window_hidden_event ( event : Event ) -> None Handle the window hidden event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_hit_test_event on_window_hit_test_event ( event : Event ) -> None Handle the window hit test event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_leave_event on_window_leave_event ( event : Event ) -> None Handle the window leave event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_maximized_event on_window_maximized_event ( event : Event ) -> None Handle the window maximized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_minimized_event on_window_minimized_event ( event : Event ) -> None Handle the window minimized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_moved_event on_window_moved_event ( event : Event ) -> None Handle the window moved event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_resized_event on_window_resized_event ( event : Event ) -> None Handle the window resized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_restored_event on_window_restored_event ( event : Event ) -> None Handle the window restored event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_shown_event on_window_shown_event ( event : Event ) -> None Handle the window shown event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_size_changed_event on_window_size_changed_event ( event : Event ) -> None Handle the window size changed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_take_focus_event on_window_take_focus_event ( event : Event ) -> None Handle the window take focus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames.engine.WindowManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.WindowManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.WindowManager.__init__ __init__ ( game : object = None ) -> None Initialize the window event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.WindowManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add window-specific arguments to the global parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.engine.FontManager Bases: ResourceManager A font manager. Attributes glitchygames.engine.FontManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.FontManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.FontManager.proxies instance-attribute proxies = [] glitchygames.engine.FontManager.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = {} glitchygames.engine.FontManager.RENDER_CACHE class-attribute instance-attribute RENDER_CACHE : ClassVar = {} Classes glitchygames.engine.FontManager.FontProxy Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.engine.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.FontManager.FontProxy.game instance-attribute game = game glitchygames.engine.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.engine.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None Functions glitchygames.engine.FontManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.FontManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.FontManager.__init__ __init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.FontManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.engine.FontManager.font classmethod font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont glitchygames.engine.Scene Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically. Attributes glitchygames.engine.Scene.log class-attribute instance-attribute log = LOG glitchygames.engine.Scene.FPS class-attribute instance-attribute FPS = 0 glitchygames.engine.Scene.NAME class-attribute instance-attribute NAME = 'Unnamed Scene' glitchygames.engine.Scene.VERSION class-attribute instance-attribute VERSION = '0.0' glitchygames.engine.Scene.target_fps instance-attribute target_fps = 0 glitchygames.engine.Scene.fps instance-attribute fps = 0 glitchygames.engine.Scene.dt instance-attribute dt = 0 glitchygames.engine.Scene.dt_timer instance-attribute dt_timer = 0 glitchygames.engine.Scene.dirty instance-attribute dirty = 1 glitchygames.engine.Scene.options instance-attribute options = options glitchygames.engine.Scene.scene_manager instance-attribute scene_manager = SceneManager () glitchygames.engine.Scene.name instance-attribute name = type ( self ) glitchygames.engine.Scene.next_scene instance-attribute next_scene = self glitchygames.engine.Scene.rects instance-attribute rects = None glitchygames.engine.Scene.screen instance-attribute screen = get_surface () glitchygames.engine.Scene.screen_width instance-attribute screen_width = get_width () glitchygames.engine.Scene.screen_height instance-attribute screen_height = get_height () glitchygames.engine.Scene.all_sprites instance-attribute all_sprites = groups glitchygames.engine.Scene.background instance-attribute background = Surface ( get_size ()) glitchygames.engine.Scene.background_color property writable background_color : Color Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames.engine.Scene.image instance-attribute image = screen glitchygames.engine.Scene.rect instance-attribute rect = get_rect () glitchygames.engine.Scene.screenshot property screenshot : Surface Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames.engine.Scene.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.Scene.on_mouse_motion_event cached on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_focus_event cached on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_unfocus_event cached on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_button_up_event cached on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_button_down_event cached on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_scroll_down_event cached on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_scroll_up_event cached on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_wheel_event cached on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_key_down_event cached on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_key_chord_up_event cached on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.engine.Scene.on_key_chord_down_event cached on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_axis_motion_event cached on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_hat_motion_event cached on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_ball_motion_event cached on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_device_added_event cached on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_device_removed_event cached on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_active_event cached on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_game_event cached on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_menu_item_event cached on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_font_changed_event cached on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_multi_touch_down_event cached on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_multi_touch_motion_event cached on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_multi_touch_up_event cached on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_drop_begin_event cached on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_drop_file_event cached on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_drop_text_event cached on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_drop_complete_event cached on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_axis_motion_event cached on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_device_added_event cached on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_device_remapped_event cached on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_device_removed_event cached on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_touchpad_down_event cached on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_touchpad_motion_event cached on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_touchpad_up_event cached on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_audio_device_added_event cached on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_audio_device_removed_event cached on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.__init__ __init__ ( options : dict | None = None , groups : LayeredDirty | None = None ) -> None Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.engine.Scene.setup setup () -> None Setup the scene. Returns: None \u2013 None glitchygames.engine.Scene.cleanup cleanup () -> None Cleanup the scene. Returns: None \u2013 None glitchygames.engine.Scene.dt_tick dt_tick ( dt : float ) -> None Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames.engine.Scene.update update () -> None Update the active scene. Returns: None \u2013 None glitchygames.engine.Scene.render render ( screen : Surface ) -> None Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames.engine.Scene.sprites_at_position sprites_at_position ( pos : tuple ) -> list [ Sprite ] | None Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames.engine.Scene.on_controller_button_down_event on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_controller_button_up_event on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.engine.Scene.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_text_editing_event on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_text_input_event on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_touch_down_event on_touch_down_event ( event : Event ) -> None Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_touch_motion_event on_touch_motion_event ( event : Event ) -> None Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_touch_up_event on_touch_up_event ( event : Event ) -> None Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_user_event on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_close_event on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_enter_event on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_exposed_event on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_focus_gained_event on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_focus_lost_event on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_hidden_event on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_hit_test_event on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_leave_event on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_maximized_event on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_minimized_event on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_moved_event on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_resized_event on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_restored_event on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_shown_event on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_size_changed_event on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_window_take_focus_event on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_quit_event on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.on_fps_event on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Scene.load_resources load_resources () -> None Load the scene's resources. Returns: None \u2013 None glitchygames.engine.SceneManager Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events. Attributes glitchygames.engine.SceneManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.SceneManager.proxies instance-attribute proxies = [ EventProxy ( event_source = self )] glitchygames.engine.SceneManager.log class-attribute instance-attribute log : ClassVar = LOG glitchygames.engine.SceneManager.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = {} glitchygames.engine.SceneManager.screen instance-attribute screen = get_surface () glitchygames.engine.SceneManager.update_type instance-attribute update_type = 'update' glitchygames.engine.SceneManager.fps_refresh_rate instance-attribute fps_refresh_rate = 1000 glitchygames.engine.SceneManager.target_fps instance-attribute target_fps = 0 glitchygames.engine.SceneManager.dt instance-attribute dt = 0 glitchygames.engine.SceneManager.timer instance-attribute timer = 0 glitchygames.engine.SceneManager.active_scene instance-attribute active_scene = None glitchygames.engine.SceneManager.next_scene instance-attribute next_scene = active_scene glitchygames.engine.SceneManager.previous_scene instance-attribute previous_scene = active_scene glitchygames.engine.SceneManager.quit_requested instance-attribute quit_requested = False glitchygames.engine.SceneManager.clock instance-attribute clock = Clock () glitchygames.engine.SceneManager.game_engine property writable game_engine : object Return the game engine. Returns: object ( object ) \u2013 The game engine. glitchygames.engine.SceneManager.all_sprites property all_sprites : LayeredDirty | None Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group. Classes glitchygames.engine.SceneManager.EventProxy Proxy for events. Attributes glitchygames.engine.SceneManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.SceneManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.engine.SceneManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.engine.SceneManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.engine.SceneManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.engine.SceneManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames.engine.SceneManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.SceneManager.__init__ __init__ () -> None Initialize the scene manager. Returns: None \u2013 None glitchygames.engine.SceneManager.switch_to_scene switch_to_scene ( next_scene : Scene ) -> None Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None glitchygames.engine.SceneManager.play play () -> None glitchygames.engine.SceneManager.start start () -> None Start the scene manager. Returns: None \u2013 None glitchygames.engine.SceneManager.stop stop () -> None glitchygames.engine.SceneManager.terminate terminate () -> None Terminate the scene manager. Returns: None \u2013 None glitchygames.engine.SceneManager.quit quit () -> None Quit the game. Returns: None \u2013 None glitchygames.engine.SceneManager.quit_game quit_game () -> None Quit the game. Returns: None \u2013 None glitchygames.engine.SceneManager.on_quit_event on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.SceneManager.on_fps_event on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.SceneManager.on_game_event on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.SceneManager.register_game_event register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None glitchygames.engine.SceneManager.__getattr__ __getattr__ ( attr : str ) -> Callable Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object. glitchygames.engine.Sprite Bases: RootSprite A convenience class for handling all of the common sprite behaviors. Attributes glitchygames.engine.Sprite.log class-attribute instance-attribute log = LOG glitchygames.engine.Sprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.engine.Sprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.engine.Sprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.engine.Sprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.engine.Sprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.engine.Sprite.image instance-attribute image = Surface (( width , height )) glitchygames.engine.Sprite.rect instance-attribute rect = get_rect () glitchygames.engine.Sprite.dt instance-attribute dt = 0 glitchygames.engine.Sprite.dt_timer instance-attribute dt_timer = 0 glitchygames.engine.Sprite.name instance-attribute name = name glitchygames.engine.Sprite.parent instance-attribute parent = parent glitchygames.engine.Sprite.proxies instance-attribute proxies = [ self ] glitchygames.engine.Sprite.callbacks instance-attribute callbacks = {} glitchygames.engine.Sprite.screen instance-attribute screen = get_surface () glitchygames.engine.Sprite.screen_width instance-attribute screen_width = get_width () glitchygames.engine.Sprite.screen_height instance-attribute screen_height = get_height () glitchygames.engine.Sprite.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.engine.Sprite.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames.engine.Sprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.Sprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.engine.Sprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.engine.Sprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.engine.Sprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.engine.Sprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.engine.Sprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.engine.Sprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.engine.Sprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.engine.GameManager Bases: ResourceManager Game event manager. Attributes glitchygames.engine.GameManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.GameManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameManager.proxies instance-attribute proxies : list [ GameProxy ] = [ GameProxy ( game = game )] Classes glitchygames.engine.GameManager.GameProxy Bases: ResourceManager Game event proxy. Attributes glitchygames.engine.GameManager.GameProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.GameManager.GameProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameManager.GameProxy.game instance-attribute game : object = get ( 'game' ) glitchygames.engine.GameManager.GameProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.GameManager.GameProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.GameManager.GameProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.GameManager.GameProxy.__init__ __init__ ( ** kwargs ) -> None Initialize the game proxy. Parameters: **kwargs \u2013 Keyword arguments. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_active_event on_active_event ( event : Event ) -> None Handle active event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_fps_event on_fps_event ( event : Event ) -> None Handle fps event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_game_event on_game_event ( event : Event ) -> None Handle game event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_menu_item_event on_menu_item_event ( event : Event ) -> None Handle menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle sys wm event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_user_event on_user_event ( event : Event ) -> None Handle user event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle video expose event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle video resize event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_quit_event on_quit_event ( event : Event ) -> None Handle quit event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames.engine.GameManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.GameManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.GameManager.__init__ __init__ ( game : object = None ) -> None Initialize the game event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.GameManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.engine.GameEngine Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class. Attributes glitchygames.engine.GameEngine.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.GameEngine.proxies instance-attribute proxies = [ EventProxy ( event_source = self )] glitchygames.engine.GameEngine.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameEngine.game class-attribute instance-attribute game : object = None glitchygames.engine.GameEngine.icon class-attribute instance-attribute icon : Surface = load ( Path ( ASSET_PATH ) / 'glitch.png' ) glitchygames.engine.GameEngine.NAME class-attribute instance-attribute NAME : Literal [ 'Boilerplate Adventures' ] = 'Boilerplate Adventures' glitchygames.engine.GameEngine.VERSION class-attribute instance-attribute VERSION : Literal [ '1.0' ] = '1.0' glitchygames.engine.GameEngine.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = None glitchygames.engine.GameEngine.LAST_EVENT_MISS class-attribute instance-attribute LAST_EVENT_MISS : ClassVar = None glitchygames.engine.GameEngine.MISSING_EVENTS class-attribute instance-attribute MISSING_EVENTS : ClassVar = [] glitchygames.engine.GameEngine.UNIMPLEMENTED_EVENTS class-attribute instance-attribute UNIMPLEMENTED_EVENTS : ClassVar = [] glitchygames.engine.GameEngine.USE_FASTEVENTS class-attribute instance-attribute USE_FASTEVENTS : ClassVar = False glitchygames.engine.GameEngine.EVENT_HANDLERS class-attribute instance-attribute EVENT_HANDLERS : ClassVar = {} glitchygames.engine.GameEngine.fps instance-attribute fps : float = get ( 'fps' , 0.0 ) glitchygames.engine.GameEngine.update_type instance-attribute update_type = get ( 'update_type' ) glitchygames.engine.GameEngine.use_gfxdraw instance-attribute use_gfxdraw = get ( 'use_gfxdraw' ) glitchygames.engine.GameEngine.windowed instance-attribute windowed = get ( 'windowed' ) glitchygames.engine.GameEngine.fps_refresh_rate instance-attribute fps_refresh_rate = get ( 'fps_refresh_rate' ) glitchygames.engine.GameEngine.pygame_version instance-attribute pygame_version = { 'major' : 0 , 'minor' : 0 , 'patch' : 0 } glitchygames.engine.GameEngine.scene_manager instance-attribute scene_manager : SceneManager = SceneManager () glitchygames.engine.GameEngine.mode_flags instance-attribute mode_flags : int = 0 glitchygames.engine.GameEngine.desired_resolution instance-attribute desired_resolution : tuple [ int , int ] = suggested_resolution ( desired_width , desired_height ) glitchygames.engine.GameEngine.screen_width property screen_width : int Get the screen width. Returns: int ( int ) \u2013 The screen width. glitchygames.engine.GameEngine.screen_height property screen_height : int Get the screen height. Returns: int ( int ) \u2013 The screen height. Classes glitchygames.engine.GameEngine.EventProxy Proxy for events. Attributes glitchygames.engine.GameEngine.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameEngine.EventProxy.proxies instance-attribute proxies = [] glitchygames.engine.GameEngine.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.engine.GameEngine.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.engine.GameEngine.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.engine.GameEngine.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames.engine.GameEngine.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.GameEngine.__init__ __init__ ( game : object , icon : Surface | Path | str = None ) -> None Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None glitchygames.engine.GameEngine.initialize_display initialize_display () -> None Initialize the display. Returns: None \u2013 None glitchygames.engine.GameEngine.initialize_event_handlers initialize_event_handlers () -> None Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None glitchygames.engine.GameEngine.initialize_input_event_handlers initialize_input_event_handlers () -> None Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None glitchygames.engine.GameEngine.__del__ __del__ () -> None Delete the game engine. Returns: None \u2013 None glitchygames.engine.GameEngine.print_system_info print_system_info () -> None Print system information. Returns: None \u2013 None glitchygames.engine.GameEngine.print_game_info print_game_info () -> None Print game information. Returns: None \u2013 None glitchygames.engine.GameEngine.suggested_resolution suggested_resolution ( desired_width : int = 0 , desired_height : int = 0 ) -> tuple [ int , int ] Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution. glitchygames.engine.GameEngine.set_cursor classmethod set_cursor ( cursor : list [ str ], cursor_black : str = \".\" , cursor_white : str = \"X\" , cursor_xor : str = \"o\" ) -> list [ str ] Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor. glitchygames.engine.GameEngine.initialize_system_icons initialize_system_icons () -> None Initialize system icons. Returns: None \u2013 None glitchygames.engine.GameEngine.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.engine.GameEngine.start start () -> None Start the game engine. Returns: None \u2013 None glitchygames.engine.GameEngine.quit_game classmethod quit_game () -> None Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None glitchygames.engine.GameEngine.process_events process_events () -> bool Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_audio_event process_audio_event ( event : Event ) -> bool Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_controller_event process_controller_event ( event : Event ) -> bool Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_drop_event process_drop_event ( event : Event ) -> bool Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_touch_event process_touch_event ( event : Event ) -> bool Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_midi_event process_midi_event ( event : Event ) -> bool Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_mouse_event process_mouse_event ( event : Event ) -> bool Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_keyboard_event process_keyboard_event ( event : Event ) -> bool Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_joystick_event process_joystick_event ( event : Event ) -> bool Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_text_event process_text_event ( event : Event ) -> None Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_window_focus_event process_window_focus_event ( event : Event ) -> bool Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_window_event process_window_event ( event : Event ) -> None Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_game_event process_game_event ( event : Event ) -> None Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.engine.GameEngine.process_unimplemented_event process_unimplemented_event ( event : Event ) -> None Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None glitchygames.engine.GameEngine.post_game_event post_game_event ( event_subtype : EventType , event_data : dict ) -> None Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None glitchygames.engine.GameEngine.suppress_event suppress_event ( * args , attr : str , ** kwargs ) -> None Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames.engine.GameEngine.register_game_event register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None glitchygames.engine.GameEngine.missing_event missing_event ( * args , ** kwargs ) -> None Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames.engine.GameEngine.__getattr__ __getattr__ ( attr : str ) -> Callable Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"engine"},{"location":"reference/glitchygames/engine/#glitchygames.engine","text":"Contains GameEngine and helper classes for building a game.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;engine"},{"location":"reference/glitchygames/engine/#glitchygames.engine-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.PURPLE","text":"PURPLE = PURPLE","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PURPLE"},{"location":"reference/glitchygames/engine/#glitchygames.engine.LOG","text":"LOG : Logger = getLogger ( 'game.engine' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/engine/#glitchygames.engine.PACKAGE_PATH","text":"PACKAGE_PATH : str = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PACKAGE_PATH"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ASSET_PATH","text":"ASSET_PATH : str = parent / 'assets'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;ASSET_PATH"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TEST_MODE","text":"TEST_MODE = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;TEST_MODE"},{"location":"reference/glitchygames/engine/#glitchygames.engine-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent","text":"Bases: dict","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;HashableEvent"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.type","text":"type = type","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;type"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__hash","text":"__hash = hash (( type , tuple ( keys ())))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__hash"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.dict","text":"dict","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dict"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__init__","text":"__init__ ( type , * args , ** attributes )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__setitem__","text":"__setitem__ ( key , item )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__setitem__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__getitem__","text":"__getitem__ ( key )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getitem__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__repr__","text":"__repr__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__repr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__len__","text":"__len__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__len__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__delitem__","text":"__delitem__ ( key )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__delitem__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.clear","text":"clear ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;clear"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.copy","text":"copy ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;copy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.has_key","text":"has_key ( k )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;has_key"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.update","text":"update ( * args , ** kwargs )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.keys","text":"keys ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;keys"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.values","text":"values ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;values"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__hash__","text":"__hash__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__hash__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__eq__","text":"__eq__ ( other )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__eq__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__ne__","text":"__ne__ ( other )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__ne__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__str__","text":"__str__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__copy__","text":"__copy__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__copy__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__deepcopy__","text":"__deepcopy__ ( memo )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__deepcopy__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__reduce__","text":"__reduce__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__reduce__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.HashableEvent.__setstate__","text":"__setstate__ ( state )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__setstate__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager","text":"Bases: ResourceManager Manage pygame audio events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.proxies","text":"proxies = [ AudioProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.AudioProxy","text":"Bases: AudioEvents , ResourceManager Pygame audio event proxy. Attributes glitchygames.engine.AudioManager.AudioProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.AudioManager.AudioProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.AudioManager.AudioProxy.game instance-attribute game = game glitchygames.engine.AudioManager.AudioProxy.proxies instance-attribute proxies = [ game , mixer ] Functions glitchygames.engine.AudioManager.AudioProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.AudioManager.AudioProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.AudioManager.AudioProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.AudioManager.AudioProxy.__init__ __init__ ( game : object = None ) -> None Initialize the audio proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.AudioManager.AudioProxy.on_audio_device_added_event on_audio_device_added_event ( event : Event ) -> None Handle audio device added event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.AudioManager.AudioProxy.on_audio_device_removed_event on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the audio manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.AudioManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager","text":"Bases: ControllerEvents , ResourceManager Manage controller events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.controllers","text":"controllers = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;controllers"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.proxies","text":"proxies = [ game ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.game","text":"game = game","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.ControllerProxy","text":"Bases: ControllerEvents , ResourceManager Proxy class for controller events. Attributes glitchygames.engine.ControllerManager.ControllerProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.ControllerManager.ControllerProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.ControllerManager.ControllerProxy.AXIS class-attribute instance-attribute AXIS : ClassVar = [ CONTROLLER_AXIS_LEFTX , CONTROLLER_AXIS_LEFTY , CONTROLLER_AXIS_RIGHTX , CONTROLLER_AXIS_RIGHTY , CONTROLLER_AXIS_TRIGGERLEFT , CONTROLLER_AXIS_TRIGGERRIGHT , ] glitchygames.engine.ControllerManager.ControllerProxy.BUTTONS class-attribute instance-attribute BUTTONS : ClassVar = [ CONTROLLER_BUTTON_A , CONTROLLER_BUTTON_B , CONTROLLER_BUTTON_X , CONTROLLER_BUTTON_Y , CONTROLLER_BUTTON_DPAD_UP , CONTROLLER_BUTTON_DPAD_DOWN , CONTROLLER_BUTTON_DPAD_LEFT , CONTROLLER_BUTTON_DPAD_RIGHT , CONTROLLER_BUTTON_LEFTSHOULDER , CONTROLLER_BUTTON_RIGHTSHOULDER , CONTROLLER_BUTTON_LEFTSTICK , CONTROLLER_BUTTON_RIGHTSTICK , CONTROLLER_BUTTON_BACK , CONTROLLER_BUTTON_GUIDE , CONTROLLER_BUTTON_START , ] glitchygames.engine.ControllerManager.ControllerProxy.controller instance-attribute controller = Controller ( _id ) glitchygames.engine.ControllerManager.ControllerProxy.game instance-attribute game = game glitchygames.engine.ControllerManager.ControllerProxy.proxies instance-attribute proxies = [ game , controller ] Functions glitchygames.engine.ControllerManager.ControllerProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.ControllerManager.ControllerProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.ControllerManager.ControllerProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.ControllerManager.ControllerProxy.__init__ __init__ ( game : object = None , controller_id : int = - 1 ) -> None Initialize the controller proxy. Parameters: game ( object , default: None ) \u2013 The game object. controller_id ( int , default: -1 ) \u2013 The controller id. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_axis_motion_event on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_button_down_event on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_button_up_event on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_added_event on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_remapped_event on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_device_removed_event on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_down_event on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_motion_event on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.on_controller_touchpad_up_event on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.ControllerManager.ControllerProxy.__str__ __str__ () -> LiteralString Return a string representation of the controller. Returns: str ( LiteralString ) \u2013 A string representation of the controller. glitchygames.engine.ControllerManager.ControllerProxy.__repr__ __repr__ () -> str Return a string representation of the controller object. Returns: str ( str ) \u2013 A string representation of the controller object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the ControllerManager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add controller options to the parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser: The argument parser.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_axis_motion_event","text":"on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_axis_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_button_down_event","text":"on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_button_up_event","text":"on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_device_added_event","text":"on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_added_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_device_remapped_event","text":"on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_remapped_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_device_removed_event","text":"on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_removed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_touchpad_down_event","text":"on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_touchpad_motion_event","text":"on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.ControllerManager.on_controller_touchpad_up_event","text":"on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager","text":"Bases: ResourceManager Manage drop events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.proxies","text":"proxies = [ DropProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.DropProxy","text":"Bases: DropEvents , ResourceManager Proxy class for drop events. Attributes glitchygames.engine.DropManager.DropProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.DropManager.DropProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.DropManager.DropProxy.game instance-attribute game = game glitchygames.engine.DropManager.DropProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.DropManager.DropProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.DropManager.DropProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.DropManager.DropProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.DropManager.DropProxy.__init__ __init__ ( game : object = None ) -> None Initialize the drop proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_begin_event on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_complete_event on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_file_event on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.DropManager.DropProxy.on_drop_text_event on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the drop manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.DropManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager","text":"Bases: JoystickEvents , ResourceManager Manage joystick events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.joysticks","text":"joysticks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;joysticks"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.game","text":"game = game","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.proxies","text":"proxies = [ game ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.JoystickProxy","text":"Bases: JoystickEvents , ResourceManager Joystick event proxy. Attributes glitchygames.engine.JoystickManager.JoystickProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.JoystickManager.JoystickProxy.log class-attribute instance-attribute log = LOG glitchygames.engine.JoystickManager.JoystickProxy.joystick instance-attribute joystick = Joystick ( _id ) glitchygames.engine.JoystickManager.JoystickProxy.game instance-attribute game = game glitchygames.engine.JoystickManager.JoystickProxy.proxies instance-attribute proxies = [ game , joystick ] Functions glitchygames.engine.JoystickManager.JoystickProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.JoystickManager.JoystickProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.JoystickManager.JoystickProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.JoystickManager.JoystickProxy.__init__ __init__ ( game : object = None , joystick_id : int = - 1 ) -> None Initialize the joystick event proxy. Parameters: game ( object , default: None ) \u2013 The game object. joystick_id ( int , default: -1 ) \u2013 The joystick id. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_device_added_event on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.on_joy_device_removed_event on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.JoystickManager.JoystickProxy.get_name get_name () -> str Get the joystick name. Returns: str ( str ) \u2013 The joystick name. glitchygames.engine.JoystickManager.JoystickProxy.get_init get_init () -> bool Get the joystick init status. Returns: bool ( bool ) \u2013 The joystick init status. glitchygames.engine.JoystickManager.JoystickProxy.get_numaxes get_numaxes () -> int Get the number of axes. Returns: int ( int ) \u2013 The number of axes. glitchygames.engine.JoystickManager.JoystickProxy.get_numballs get_numballs () -> int Get the number of trackballs. Returns: int ( int ) \u2013 The number of trackballs. glitchygames.engine.JoystickManager.JoystickProxy.get_numbuttons get_numbuttons () -> int Get the number of buttons. Returns: int ( int ) \u2013 The number of buttons. glitchygames.engine.JoystickManager.JoystickProxy.get_numhats get_numhats () -> int Get the number of hats. Returns: int ( int ) \u2013 The number of hats. glitchygames.engine.JoystickManager.JoystickProxy.__str__ __str__ () -> str Get the joystick info. Returns: str ( str ) \u2013 The joystick info. glitchygames.engine.JoystickManager.JoystickProxy.__repr__ __repr__ () -> str Get the joystick representation. Returns: str ( str ) \u2013 The joystick representation.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the joystick event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add joystick-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_device_added_event","text":"on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_added_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.JoystickManager.on_joy_device_removed_event","text":"on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_removed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager","text":"Bases: ResourceManager Manage keyboard events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.proxies","text":"proxies = [ KeyboardProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.KeyboardProxy","text":"Bases: KeyboardEvents , ResourceManager Keyboard event proxy. Attributes glitchygames.engine.KeyboardManager.KeyboardProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.KeyboardManager.KeyboardProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.KeyboardManager.KeyboardProxy.keys instance-attribute keys = {} glitchygames.engine.KeyboardManager.KeyboardProxy.game instance-attribute game = game glitchygames.engine.KeyboardManager.KeyboardProxy.proxies instance-attribute proxies = [ game , key ] Functions glitchygames.engine.KeyboardManager.KeyboardProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.KeyboardManager.KeyboardProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.KeyboardManager.KeyboardProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.KeyboardManager.KeyboardProxy.__init__ __init__ ( game : object = None ) -> None Initialize the keyboard event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_down_event on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_chord_down_event on_key_chord_down_event ( event : Event ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys_down ( list ) \u2013 The keys that are currently down. Returns: None \u2013 None glitchygames.engine.KeyboardManager.KeyboardProxy.on_key_chord_up_event on_key_chord_up_event ( event : Event ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the keyboard event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.KeyboardManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add keyboard-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager","text":"Bases: ResourceManager Manage midi events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MidiManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the midi event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MidiManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add midi-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager","text":"Bases: ResourceManager Mouse manager event handler.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.proxies","text":"proxies = [ MouseProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.MouseProxy","text":"Bases: MouseEvents , ResourceManager Mouse manager event proxy. Attributes glitchygames.engine.MouseManager.MouseProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.MouseManager.MouseProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.MouseManager.MouseProxy.mouse_state instance-attribute mouse_state = {} glitchygames.engine.MouseManager.MouseProxy.mouse_dragging instance-attribute mouse_dragging = False glitchygames.engine.MouseManager.MouseProxy.mouse_dropping instance-attribute mouse_dropping = False glitchygames.engine.MouseManager.MouseProxy.current_focus instance-attribute current_focus = None glitchygames.engine.MouseManager.MouseProxy.previous_focus instance-attribute previous_focus = None glitchygames.engine.MouseManager.MouseProxy.focus_locked instance-attribute focus_locked = False glitchygames.engine.MouseManager.MouseProxy.game instance-attribute game = game glitchygames.engine.MouseManager.MouseProxy.proxies instance-attribute proxies = [ game , mouse ] Functions glitchygames.engine.MouseManager.MouseProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.MouseManager.MouseProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.MouseManager.MouseProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.MouseManager.MouseProxy.__init__ __init__ ( game : object = None ) -> None Initialize the mouse manager event proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle the mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : Event ) -> None Handle the right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : Event ) -> None Handle the right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_focus_event on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle the mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object entering focus. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle the mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object leaving focus. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle the mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle the middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle the mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle the middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle the right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle the mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle the mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.MouseManager.MouseProxy.on_mouse_wheel_event on_mouse_wheel_event ( event : Event ) -> None Handle the mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the mouse manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.MouseManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager","text":"Bases: ResourceManager Touch event manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.proxies","text":"proxies = [ TouchProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.TouchProxy","text":"Bases: TouchEvents , ResourceManager Touch event proxy. Attributes glitchygames.engine.TouchManager.TouchProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.TouchManager.TouchProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.TouchManager.TouchProxy.fingers instance-attribute fingers : dict = {} glitchygames.engine.TouchManager.TouchProxy.game instance-attribute game : object = game glitchygames.engine.TouchManager.TouchProxy.proxies instance-attribute proxies : list = [ game , touch ] Functions glitchygames.engine.TouchManager.TouchProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.TouchManager.TouchProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.TouchManager.TouchProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.TouchManager.TouchProxy.__init__ __init__ ( game : object = None ) -> None Initialize the finger event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_down_event on_touch_down_event ( event : Event ) -> None Handle finger down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_motion_event on_touch_motion_event ( event : Event ) -> None Handle finger motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_touch_up_event on_touch_up_event ( event : Event ) -> None Handle finger up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_down_event on_multi_touch_down_event ( event : Event ) -> None Handle multi-touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_motion_event on_multi_touch_motion_event ( event : Event ) -> None Handle multi-touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.TouchManager.TouchProxy.on_multi_touch_up_event on_multi_touch_up_event ( event : Event ) -> None Handle multi-touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.TouchManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the touch event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager","text":"Bases: ResourceManager Window manager event handler.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.proxies","text":"proxies = [ WindowManagerProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.WindowManagerProxy","text":"Bases: WindowEvents , ResourceManager Window manager event proxy. Attributes glitchygames.engine.WindowManager.WindowManagerProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.WindowManager.WindowManagerProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.WindowManager.WindowManagerProxy.game instance-attribute game = game glitchygames.engine.WindowManager.WindowManagerProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.WindowManager.WindowManagerProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.WindowManager.WindowManagerProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.WindowManager.WindowManagerProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.WindowManager.WindowManagerProxy.__init__ __init__ ( game : object = None ) -> None Initialize the window manager proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_close_event on_window_close_event ( event : Event ) -> None Handle the window close event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_enter_event on_window_enter_event ( event : Event ) -> None Handle the window enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_exposed_event on_window_exposed_event ( event : Event ) -> None Handle the window exposed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_focus_gained_event on_window_focus_gained_event ( event : Event ) -> None Handle the window focus gained event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_focus_lost_event on_window_focus_lost_event ( event : Event ) -> None Handle the window focus lost event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_hidden_event on_window_hidden_event ( event : Event ) -> None Handle the window hidden event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_hit_test_event on_window_hit_test_event ( event : Event ) -> None Handle the window hit test event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_leave_event on_window_leave_event ( event : Event ) -> None Handle the window leave event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_maximized_event on_window_maximized_event ( event : Event ) -> None Handle the window maximized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_minimized_event on_window_minimized_event ( event : Event ) -> None Handle the window minimized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_moved_event on_window_moved_event ( event : Event ) -> None Handle the window moved event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_resized_event on_window_resized_event ( event : Event ) -> None Handle the window resized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_restored_event on_window_restored_event ( event : Event ) -> None Handle the window restored event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_shown_event on_window_shown_event ( event : Event ) -> None Handle the window shown event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_size_changed_event on_window_size_changed_event ( event : Event ) -> None Handle the window size changed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.WindowManager.WindowManagerProxy.on_window_take_focus_event on_window_take_focus_event ( event : Event ) -> None Handle the window take focus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowManagerProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the window event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.WindowManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add window-specific arguments to the global parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager","text":"Bases: ResourceManager A font manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.OPTIONS","text":"OPTIONS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.RENDER_CACHE","text":"RENDER_CACHE : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;RENDER_CACHE"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.FontProxy","text":"Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.engine.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.FontManager.FontProxy.game instance-attribute game = game glitchygames.engine.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.engine.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.engine.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.engine.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.FontManager.font","text":"font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;font"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene","text":"Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.FPS","text":"FPS = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;FPS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.NAME","text":"NAME = 'Unnamed Scene'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;NAME"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.VERSION","text":"VERSION = '0.0'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;VERSION"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.target_fps","text":"target_fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;target_fps"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.fps","text":"fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.dirty","text":"dirty = 1","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dirty"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.options","text":"options = options","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;options"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.scene_manager","text":"scene_manager = SceneManager ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;scene_manager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.name","text":"name = type ( self )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.next_scene","text":"next_scene = self","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;next_scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.rects","text":"rects = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rects"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.all_sprites","text":"all_sprites = groups","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.background","text":"background = Surface ( get_size ())","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.background_color","text":"background_color : Color Return the background color. Returns: Color \u2013 pygame.Color: The background color.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.image","text":"image = screen","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.screenshot","text":"screenshot : Surface Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screenshot"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_device_added_event","text":"on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_added_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_device_removed_event","text":"on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_removed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_active_event","text":"on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_menu_item_event","text":"on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_menu_item_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_font_changed_event","text":"on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_font_changed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_multi_touch_down_event","text":"on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_multi_touch_motion_event","text":"on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_multi_touch_up_event","text":"on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_drop_begin_event","text":"on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_begin_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_drop_file_event","text":"on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_file_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_drop_text_event","text":"on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_text_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_drop_complete_event","text":"on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_complete_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_axis_motion_event","text":"on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_axis_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_device_added_event","text":"on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_added_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_device_remapped_event","text":"on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_remapped_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_device_removed_event","text":"on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_removed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_touchpad_down_event","text":"on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_touchpad_motion_event","text":"on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_touchpad_up_event","text":"on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_audio_device_added_event","text":"on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_added_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_audio_device_removed_event","text":"on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_removed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.__init__","text":"__init__ ( options : dict | None = None , groups : LayeredDirty | None = None ) -> None Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.setup","text":"setup () -> None Setup the scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;setup"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.cleanup","text":"cleanup () -> None Cleanup the scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;cleanup"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.dt_tick","text":"dt_tick ( dt : float ) -> None Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.update","text":"update () -> None Update the active scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.render","text":"render ( screen : Surface ) -> None Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;render"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.sprites_at_position","text":"sprites_at_position ( pos : tuple ) -> list [ Sprite ] | None Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;sprites_at_position"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_button_down_event","text":"on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_controller_button_up_event","text":"on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_text_editing_event","text":"on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_editing_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_text_input_event","text":"on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_input_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_touch_down_event","text":"on_touch_down_event ( event : Event ) -> None Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_touch_motion_event","text":"on_touch_motion_event ( event : Event ) -> None Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_touch_up_event","text":"on_touch_up_event ( event : Event ) -> None Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_user_event","text":"on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_close_event","text":"on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_close_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_enter_event","text":"on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_enter_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_exposed_event","text":"on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_exposed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_focus_gained_event","text":"on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_gained_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_focus_lost_event","text":"on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_lost_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_hidden_event","text":"on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hidden_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_hit_test_event","text":"on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hit_test_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_leave_event","text":"on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_leave_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_maximized_event","text":"on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_maximized_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_minimized_event","text":"on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_minimized_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_moved_event","text":"on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_moved_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_resized_event","text":"on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_resized_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_restored_event","text":"on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_restored_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_shown_event","text":"on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_shown_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_size_changed_event","text":"on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_size_changed_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_window_take_focus_event","text":"on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_take_focus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Scene.load_resources","text":"load_resources () -> None Load the scene's resources. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load_resources"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager","text":"Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SceneManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.proxies","text":"proxies = [ EventProxy ( event_source = self )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.log","text":"log : ClassVar = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.OPTIONS","text":"OPTIONS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.update_type","text":"update_type = 'update'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;update_type"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.fps_refresh_rate","text":"fps_refresh_rate = 1000","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps_refresh_rate"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.target_fps","text":"target_fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;target_fps"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.timer","text":"timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;timer"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.active_scene","text":"active_scene = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.next_scene","text":"next_scene = active_scene","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;next_scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.previous_scene","text":"previous_scene = active_scene","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;previous_scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.quit_requested","text":"quit_requested = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;quit_requested"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.clock","text":"clock = Clock ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;clock"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.game_engine","text":"game_engine : object Return the game engine. Returns: object ( object ) \u2013 The game engine.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game_engine"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.all_sprites","text":"all_sprites : LayeredDirty | None Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.EventProxy","text":"Proxy for events. Attributes glitchygames.engine.SceneManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.SceneManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.engine.SceneManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.engine.SceneManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.engine.SceneManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.engine.SceneManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.__init__","text":"__init__ () -> None Initialize the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.switch_to_scene","text":"switch_to_scene ( next_scene : Scene ) -> None Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;switch_to_scene"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.play","text":"play () -> None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;play"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.start","text":"start () -> None Start the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;start"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.stop","text":"stop () -> None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;stop"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.terminate","text":"terminate () -> None Terminate the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;terminate"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.quit","text":"quit () -> None Quit the game. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.quit_game","text":"quit_game () -> None Quit the game. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit_game"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.register_game_event","text":"register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;register_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.SceneManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite","text":"Bases: RootSprite A convenience class for handling all of the common sprite behaviors.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Sprite"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.proxies","text":"proxies = [ self ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.width","text":"width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.height","text":"height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.Sprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager","text":"Bases: ResourceManager Game event manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameManager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.proxies","text":"proxies : list [ GameProxy ] = [ GameProxy ( game = game )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.GameProxy","text":"Bases: ResourceManager Game event proxy. Attributes glitchygames.engine.GameManager.GameProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.engine.GameManager.GameProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameManager.GameProxy.game instance-attribute game : object = get ( 'game' ) glitchygames.engine.GameManager.GameProxy.proxies instance-attribute proxies = [ game ] Functions glitchygames.engine.GameManager.GameProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.engine.GameManager.GameProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.engine.GameManager.GameProxy.__init__ __init__ ( ** kwargs ) -> None Initialize the game proxy. Parameters: **kwargs \u2013 Keyword arguments. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_active_event on_active_event ( event : Event ) -> None Handle active event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_fps_event on_fps_event ( event : Event ) -> None Handle fps event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_game_event on_game_event ( event : Event ) -> None Handle game event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_menu_item_event on_menu_item_event ( event : Event ) -> None Handle menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle sys wm event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_user_event on_user_event ( event : Event ) -> None Handle user event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle video expose event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle video resize event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.engine.GameManager.GameProxy.on_quit_event on_quit_event ( event : Event ) -> None Handle quit event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the game event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine","text":"Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEngine"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.proxies","text":"proxies = [ EventProxy ( event_source = self )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.game","text":"game : object = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.icon","text":"icon : Surface = load ( Path ( ASSET_PATH ) / 'glitch.png' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;icon"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.NAME","text":"NAME : Literal [ 'Boilerplate Adventures' ] = 'Boilerplate Adventures'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;NAME"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.VERSION","text":"VERSION : Literal [ '1.0' ] = '1.0'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;VERSION"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.OPTIONS","text":"OPTIONS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.LAST_EVENT_MISS","text":"LAST_EVENT_MISS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LAST_EVENT_MISS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.MISSING_EVENTS","text":"MISSING_EVENTS : ClassVar = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;MISSING_EVENTS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.UNIMPLEMENTED_EVENTS","text":"UNIMPLEMENTED_EVENTS : ClassVar = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;UNIMPLEMENTED_EVENTS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.USE_FASTEVENTS","text":"USE_FASTEVENTS : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_FASTEVENTS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.EVENT_HANDLERS","text":"EVENT_HANDLERS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;EVENT_HANDLERS"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.fps","text":"fps : float = get ( 'fps' , 0.0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.update_type","text":"update_type = get ( 'update_type' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;update_type"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.use_gfxdraw","text":"use_gfxdraw = get ( 'use_gfxdraw' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;use_gfxdraw"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.windowed","text":"windowed = get ( 'windowed' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;windowed"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.fps_refresh_rate","text":"fps_refresh_rate = get ( 'fps_refresh_rate' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps_refresh_rate"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.pygame_version","text":"pygame_version = { 'major' : 0 , 'minor' : 0 , 'patch' : 0 }","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;pygame_version"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.scene_manager","text":"scene_manager : SceneManager = SceneManager ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;scene_manager"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.mode_flags","text":"mode_flags : int = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;mode_flags"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.desired_resolution","text":"desired_resolution : tuple [ int , int ] = suggested_resolution ( desired_width , desired_height )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;desired_resolution"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.screen_width","text":"screen_width : int Get the screen width. Returns: int ( int ) \u2013 The screen width.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.screen_height","text":"screen_height : int Get the screen height. Returns: int ( int ) \u2013 The screen height.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.EventProxy","text":"Proxy for events. Attributes glitchygames.engine.GameEngine.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.engine.GameEngine.EventProxy.proxies instance-attribute proxies = [] glitchygames.engine.GameEngine.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.engine.GameEngine.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.engine.GameEngine.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.engine.GameEngine.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventProxy"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.__init__","text":"__init__ ( game : object , icon : Surface | Path | str = None ) -> None Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.initialize_display","text":"initialize_display () -> None Initialize the display. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_display"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.initialize_event_handlers","text":"initialize_event_handlers () -> None Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_event_handlers"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.initialize_input_event_handlers","text":"initialize_input_event_handlers () -> None Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_input_event_handlers"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.__del__","text":"__del__ () -> None Delete the game engine. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__del__"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.print_system_info","text":"print_system_info () -> None Print system information. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;print_system_info"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.print_game_info","text":"print_game_info () -> None Print game information. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;print_game_info"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.suggested_resolution","text":"suggested_resolution ( desired_width : int = 0 , desired_height : int = 0 ) -> tuple [ int , int ] Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;suggested_resolution"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.set_cursor","text":"set_cursor ( cursor : list [ str ], cursor_black : str = \".\" , cursor_white : str = \"X\" , cursor_xor : str = \"o\" ) -> list [ str ] Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;set_cursor"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.initialize_system_icons","text":"initialize_system_icons () -> None Initialize system icons. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_system_icons"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.start","text":"start () -> None Start the game engine. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;start"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.quit_game","text":"quit_game () -> None Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit_game"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_events","text":"process_events () -> bool Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_events"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_audio_event","text":"process_audio_event ( event : Event ) -> bool Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_audio_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_controller_event","text":"process_controller_event ( event : Event ) -> bool Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_controller_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_drop_event","text":"process_drop_event ( event : Event ) -> bool Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_drop_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_touch_event","text":"process_touch_event ( event : Event ) -> bool Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_touch_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_midi_event","text":"process_midi_event ( event : Event ) -> bool Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_midi_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_mouse_event","text":"process_mouse_event ( event : Event ) -> bool Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_mouse_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_keyboard_event","text":"process_keyboard_event ( event : Event ) -> bool Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_keyboard_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_joystick_event","text":"process_joystick_event ( event : Event ) -> bool Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_joystick_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_text_event","text":"process_text_event ( event : Event ) -> None Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_text_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_window_focus_event","text":"process_window_focus_event ( event : Event ) -> bool Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_window_focus_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_window_event","text":"process_window_event ( event : Event ) -> None Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_window_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_game_event","text":"process_game_event ( event : Event ) -> None Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.process_unimplemented_event","text":"process_unimplemented_event ( event : Event ) -> None Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_unimplemented_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.post_game_event","text":"post_game_event ( event_subtype : EventType , event_data : dict ) -> None Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;post_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.suppress_event","text":"suppress_event ( * args , attr : str , ** kwargs ) -> None Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;suppress_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.register_game_event","text":"register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;register_game_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.missing_event","text":"missing_event ( * args , ** kwargs ) -> None Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;missing_event"},{"location":"reference/glitchygames/engine/#glitchygames.engine.GameEngine.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/events/","text":"glitchygames.events Glitchy Games event module. This module contains the event substrate for handling higher level events in the game engine. Many events are 1:1 with pygame events, but some are synthesized. For example, a mouse drop event is a synthesized event that is triggered by a mouse button down event followed by a mouse motion event followed by a mouse button up event. Attributes glitchygames.events.LOG module-attribute LOG : Logger = getLogger ( 'game.events' ) glitchygames.events.FPSEVENT module-attribute FPSEVENT = USEREVENT + 1 glitchygames.events.GAMEEVENT module-attribute GAMEEVENT = USEREVENT + 2 glitchygames.events.MENUEVENT module-attribute MENUEVENT = USEREVENT + 3 glitchygames.events.AUDIO_EVENTS module-attribute AUDIO_EVENTS = supported_events ( like = 'AUDIO.*?' ) glitchygames.events.CONTROLLER_EVENTS module-attribute CONTROLLER_EVENTS = supported_events ( like = 'CONTROLLER.*?' ) glitchygames.events.DROP_EVENTS module-attribute DROP_EVENTS = supported_events ( like = 'DROP.*?' ) glitchygames.events.TOUCH_EVENTS module-attribute TOUCH_EVENTS = supported_events ( like = '(FINGER|MULTI).*?' ) glitchygames.events.JOYSTICK_EVENTS module-attribute JOYSTICK_EVENTS = supported_events ( like = 'JOY.*?' ) glitchygames.events.KEYBOARD_EVENTS module-attribute KEYBOARD_EVENTS = supported_events ( like = 'KEY.*?' ) glitchygames.events.MIDI_EVENTS module-attribute MIDI_EVENTS = supported_events ( like = 'MIDI.*?' ) glitchygames.events.MOUSE_EVENTS module-attribute MOUSE_EVENTS = supported_events ( like = 'MOUSE.*?' ) glitchygames.events.TEXT_EVENTS module-attribute TEXT_EVENTS = supported_events ( like = 'TEXT.*?' ) glitchygames.events.WINDOW_EVENTS module-attribute WINDOW_EVENTS = supported_events ( like = 'WINDOW.*?' ) glitchygames.events.ALL_EVENTS module-attribute ALL_EVENTS = supported_events () glitchygames.events.GAME_EVENTS module-attribute GAME_EVENTS = list ( set ( ALL_EVENTS ) - set ( AUDIO_EVENTS ) - set ( CONTROLLER_EVENTS ) - set ( DROP_EVENTS ) - set ( TOUCH_EVENTS ) - set ( JOYSTICK_EVENTS ) - set ( KEYBOARD_EVENTS ) - set ( MIDI_EVENTS ) - set ( MOUSE_EVENTS ) - set ( TEXT_EVENTS ) - set ( WINDOW_EVENTS ) ) Classes glitchygames.events.ResourceManager Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton. Attributes glitchygames.events.ResourceManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.events.ResourceManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.events.ResourceManager.proxies instance-attribute proxies = [] Functions glitchygames.events.ResourceManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.events.ResourceManager.__init__ __init__ ( game : object ) -> None Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None glitchygames.events.ResourceManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.events.HashableEvent Bases: dict Attributes glitchygames.events.HashableEvent.type instance-attribute type = type glitchygames.events.HashableEvent.__hash instance-attribute __hash = hash (( type , tuple ( keys ()))) glitchygames.events.HashableEvent.dict property dict Functions glitchygames.events.HashableEvent.__init__ __init__ ( type , * args , ** attributes ) glitchygames.events.HashableEvent.__setitem__ __setitem__ ( key , item ) glitchygames.events.HashableEvent.__getitem__ __getitem__ ( key ) glitchygames.events.HashableEvent.__len__ __len__ () glitchygames.events.HashableEvent.__delitem__ __delitem__ ( key ) glitchygames.events.HashableEvent.clear clear () glitchygames.events.HashableEvent.copy copy () glitchygames.events.HashableEvent.has_key has_key ( k ) glitchygames.events.HashableEvent.update update ( * args , ** kwargs ) glitchygames.events.HashableEvent.keys keys () glitchygames.events.HashableEvent.values values () glitchygames.events.HashableEvent.__hash__ __hash__ () glitchygames.events.HashableEvent.__eq__ __eq__ ( other ) glitchygames.events.HashableEvent.__ne__ __ne__ ( other ) glitchygames.events.HashableEvent.__repr__ __repr__ () glitchygames.events.HashableEvent.__str__ __str__ () glitchygames.events.HashableEvent.__copy__ __copy__ () glitchygames.events.HashableEvent.__deepcopy__ __deepcopy__ ( memo ) glitchygames.events.HashableEvent.__reduce__ __reduce__ () glitchygames.events.HashableEvent.__setstate__ __setstate__ ( state ) glitchygames.events.EventInterface Abstract base class for event interfaces. Functions glitchygames.events.EventInterface.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.AudioEvents Bases: EventInterface Mixin for audio events. Functions glitchygames.events.AudioEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.AudioEvents.on_audio_device_added_event abstractmethod on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AudioEvents.on_audio_device_removed_event abstractmethod on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AudioEventStubs Bases: AudioEvents Mixin for audio events. Functions glitchygames.events.AudioEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.AudioEventStubs.on_audio_device_added_event cached on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AudioEventStubs.on_audio_device_removed_event cached on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents Bases: EventInterface Mixin for controller events. Functions glitchygames.events.ControllerEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.ControllerEvents.on_controller_axis_motion_event abstractmethod on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_button_down_event abstractmethod on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_button_up_event abstractmethod on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_device_added_event abstractmethod on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_device_remapped_event abstractmethod on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_device_removed_event abstractmethod on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_touchpad_down_event abstractmethod on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_touchpad_motion_event abstractmethod on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents.on_controller_touchpad_up_event abstractmethod on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs Bases: ControllerEvents Mixin for controller events. Functions glitchygames.events.ControllerEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.ControllerEventStubs.on_controller_axis_motion_event cached on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_button_down_event cached on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_button_up_event cached on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_device_added_event cached on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_device_remapped_event cached on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_device_removed_event cached on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_touchpad_down_event cached on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_touchpad_motion_event cached on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs.on_controller_touchpad_up_event cached on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.DropEvents Bases: EventInterface Mixin for drop events. Functions glitchygames.events.DropEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.DropEvents.on_drop_begin_event abstractmethod on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEvents.on_drop_file_event abstractmethod on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEvents.on_drop_text_event abstractmethod on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEvents.on_drop_complete_event abstractmethod on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEventStubs Bases: EventInterface Mixin for drop events. Functions glitchygames.events.DropEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.DropEventStubs.on_drop_begin_event cached on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEventStubs.on_drop_file_event cached on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEventStubs.on_drop_text_event cached on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEventStubs.on_drop_complete_event cached on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents Bases: EventInterface Mixin for touch events. Functions glitchygames.events.TouchEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.TouchEvents.on_touch_down_event abstractmethod on_touch_down_event ( event : Event ) -> None Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents.on_touch_motion_event abstractmethod on_touch_motion_event ( event : Event ) -> None Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents.on_touch_up_event abstractmethod on_touch_up_event ( event : Event ) -> None Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents.on_multi_touch_down_event abstractmethod on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents.on_multi_touch_motion_event abstractmethod on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents.on_multi_touch_up_event abstractmethod on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs Bases: EventInterface Mixin for touch events. Functions glitchygames.events.TouchEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.TouchEventStubs.on_touch_down_event cached on_touch_down_event ( event : Event ) -> None Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs.on_touch_motion_event cached on_touch_motion_event ( event : Event ) -> None Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs.on_touch_up_event cached on_touch_up_event ( event : Event ) -> None Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs.on_multi_touch_down_event cached on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs.on_multi_touch_motion_event cached on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs.on_multi_touch_up_event cached on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.GameEvents Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames.events.GameEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.GameEvents.on_active_event abstractmethod on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_fps_event abstractmethod on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_game_event abstractmethod on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_menu_item_event abstractmethod on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_sys_wm_event abstractmethod on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_user_event abstractmethod on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_video_expose_event abstractmethod on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_video_resize_event abstractmethod on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEvents.on_quit_event abstractmethod on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames.events.GameEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.GameEventStubs.on_active_event cached on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_fps_event cached on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_game_event cached on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_menu_item_event cached on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_sys_wm_event cached on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_user_event cached on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_video_expose_event cached on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_video_resize_event cached on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs.on_quit_event cached on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.FontEvents Bases: EventInterface Mixin for font events. Functions glitchygames.events.FontEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.FontEvents.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.FontEventStubs Bases: EventInterface Mixin for font events. Functions glitchygames.events.FontEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.FontEventStubs.on_font_changed_event cached on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.KeyboardEvents Bases: EventInterface Mixin for keyboard events. glitchygames.events.KeyboardEventStubs Bases: EventInterface Mixin for keyboard events. Functions glitchygames.events.KeyboardEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.KeyboardEventStubs.on_key_down_event cached on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.KeyboardEventStubs.on_key_up_event cached on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.KeyboardEventStubs.on_key_chord_up_event cached on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.events.KeyboardEventStubs.on_key_chord_down_event cached on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.events.JoystickEvents Bases: EventInterface Mixin for joystick events. Functions glitchygames.events.JoystickEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.JoystickEvents.on_joy_axis_motion_event abstractmethod on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_button_down_event abstractmethod on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_button_up_event abstractmethod on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_hat_motion_event abstractmethod on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_ball_motion_event abstractmethod on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_device_added_event abstractmethod on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEvents.on_joy_device_removed_event abstractmethod on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs Bases: EventInterface Mixin for joystick events. Functions glitchygames.events.JoystickEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.JoystickEventStubs.on_joy_axis_motion_event cached on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_button_down_event cached on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_button_up_event cached on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_hat_motion_event cached on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_ball_motion_event cached on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_device_added_event cached on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs.on_joy_device_removed_event cached on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MidiEvents Bases: EventInterface Mixin for midi events. glitchygames.events.MidiEventStubs Bases: EventInterface Mixin for midi events. glitchygames.events.MouseEvents Bases: EventInterface Mixin for mouse events. Functions glitchygames.events.MouseEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.MouseEvents.on_mouse_motion_event abstractmethod on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_drag_event abstractmethod on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_drop_event abstractmethod on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_left_mouse_drag_event abstractmethod on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_left_mouse_drop_event abstractmethod on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_middle_mouse_drag_event abstractmethod on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_middle_mouse_drop_event abstractmethod on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_right_mouse_drag_event abstractmethod on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_right_mouse_drop_event abstractmethod on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_focus_event abstractmethod on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_unfocus_event abstractmethod on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_button_up_event abstractmethod on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_left_mouse_button_up_event abstractmethod on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_middle_mouse_button_up_event abstractmethod on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_right_mouse_button_up_event abstractmethod on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_button_down_event abstractmethod on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_left_mouse_button_down_event abstractmethod on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_middle_mouse_button_down_event abstractmethod on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_right_mouse_button_down_event abstractmethod on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_scroll_down_event abstractmethod on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_scroll_up_event abstractmethod on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEvents.on_mouse_wheel_event abstractmethod on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs Bases: EventInterface Mixin for mouse events. Functions glitchygames.events.MouseEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.MouseEventStubs.on_mouse_motion_event cached on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_drag_event cached on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_drop_event cached on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_left_mouse_drag_event cached on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_left_mouse_drop_event cached on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_middle_mouse_drag_event cached on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_middle_mouse_drop_event cached on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_right_mouse_drag_event cached on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_right_mouse_drop_event cached on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_focus_event cached on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_unfocus_event cached on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_button_up_event cached on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_left_mouse_button_up_event cached on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_middle_mouse_button_up_event cached on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_right_mouse_button_up_event cached on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_button_down_event cached on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_left_mouse_button_down_event cached on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_middle_mouse_button_down_event cached on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_right_mouse_button_down_event cached on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_scroll_down_event cached on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_scroll_up_event cached on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs.on_mouse_wheel_event cached on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEvents Bases: EventInterface Mixin for text events. Functions glitchygames.events.TextEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.TextEvents.on_text_editing_event abstractmethod on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEvents.on_text_input_event abstractmethod on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEventStubs Bases: EventInterface Mixin for text events. Functions glitchygames.events.TextEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.TextEventStubs.on_text_editing_event cached on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEventStubs.on_text_input_event cached on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents Bases: EventInterface Mixin for window events. Functions glitchygames.events.WindowEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.WindowEvents.on_window_close_event abstractmethod on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_enter_event abstractmethod on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_exposed_event abstractmethod on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_focus_gained_event abstractmethod on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_focus_lost_event abstractmethod on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_hidden_event abstractmethod on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_hit_test_event abstractmethod on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_leave_event abstractmethod on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_maximized_event abstractmethod on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_minimized_event abstractmethod on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_moved_event abstractmethod on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_resized_event abstractmethod on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_restored_event abstractmethod on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_shown_event abstractmethod on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_size_changed_event abstractmethod on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents.on_window_take_focus_event abstractmethod on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs Bases: EventInterface Mixin for window events. Functions glitchygames.events.WindowEventStubs.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.events.WindowEventStubs.on_window_close_event cached on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_enter_event cached on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_exposed_event cached on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_focus_gained_event cached on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_focus_lost_event cached on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_hidden_event cached on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_hit_test_event cached on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_leave_event cached on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_maximized_event cached on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_minimized_event cached on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_moved_event cached on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_resized_event cached on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_restored_event cached on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_shown_event cached on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_size_changed_event cached on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs.on_window_take_focus_event cached on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AllEvents Bases: AudioEvents , ControllerEvents , DropEvents , TouchEvents , FontEvents , GameEvents , JoystickEvents , KeyboardEvents , MidiEvents , MouseEvents , TextEvents , WindowEvents Mixin for all events. glitchygames.events.AllEventStubs Bases: AudioEventStubs , ControllerEventStubs , DropEventStubs , TouchEventStubs , FontEventStubs , GameEventStubs , JoystickEventStubs , KeyboardEventStubs , MidiEventStubs , MouseEventStubs , TextEventStubs , WindowEventStubs Mixin for all event stubs. glitchygames.events.EventManager Bases: ResourceManager Root event manager. Attributes glitchygames.events.EventManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.events.EventManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.events.EventManager.proxies instance-attribute proxies = [ EventProxy ( event_source = self )] Classes glitchygames.events.EventManager.EventProxy Proxy for events. Attributes glitchygames.events.EventManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.events.EventManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.events.EventManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.events.EventManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.events.EventManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.events.EventManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames.events.EventManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.events.EventManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.events.EventManager.__init__ __init__ ( game : object = None ) -> None Initialize the event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None Functions glitchygames.events.supported_events supported_events ( like : str = '.*' ) -> list Return a list of supported events. This method is crucial for allowing the game engine to support both older versions of pygame and newer versions. It allows us to enumerate supported pygame events and initialize them dynamically. This ensures that the game engine will work with many versions of pygame. We enumerate all pygame event IDs and then use the pygame.event.event_name() method to get the event name. We then use a regular expression to match the event name against the like parameter. Parameters: like ( str , default: '.*' ) \u2013 A regular expression to match against the event names. Returns: list \u2013 A list of pygame events whose names match the regular expression. glitchygames.events.dump_cache_info dump_cache_info ( func , * args , ** kwargs ) glitchygames.events.unhandled_event cached unhandled_event ( game , event , * args , ** kwargs ) -> NoReturn Handle unhandled events. This method is called when an event is not handled by any of the event handlers. This is helpful for us to debug events that we haven't implemented yet. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: NoReturn \u2013 None Raises: AttributeError \u2013 If the event is not handled.","title":"events"},{"location":"reference/glitchygames/events/#glitchygames.events","text":"Glitchy Games event module. This module contains the event substrate for handling higher level events in the game engine. Many events are 1:1 with pygame events, but some are synthesized. For example, a mouse drop event is a synthesized event that is triggered by a mouse button down event followed by a mouse motion event followed by a mouse button up event.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;events"},{"location":"reference/glitchygames/events/#glitchygames.events-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/events/#glitchygames.events.LOG","text":"LOG : Logger = getLogger ( 'game.events' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/events/#glitchygames.events.FPSEVENT","text":"FPSEVENT = USEREVENT + 1","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;FPSEVENT"},{"location":"reference/glitchygames/events/#glitchygames.events.GAMEEVENT","text":"GAMEEVENT = USEREVENT + 2","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;GAMEEVENT"},{"location":"reference/glitchygames/events/#glitchygames.events.MENUEVENT","text":"MENUEVENT = USEREVENT + 3","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;MENUEVENT"},{"location":"reference/glitchygames/events/#glitchygames.events.AUDIO_EVENTS","text":"AUDIO_EVENTS = supported_events ( like = 'AUDIO.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;AUDIO_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.CONTROLLER_EVENTS","text":"CONTROLLER_EVENTS = supported_events ( like = 'CONTROLLER.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;CONTROLLER_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.DROP_EVENTS","text":"DROP_EVENTS = supported_events ( like = 'DROP.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DROP_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.TOUCH_EVENTS","text":"TOUCH_EVENTS = supported_events ( like = '(FINGER|MULTI).*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;TOUCH_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.JOYSTICK_EVENTS","text":"JOYSTICK_EVENTS = supported_events ( like = 'JOY.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;JOYSTICK_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.KEYBOARD_EVENTS","text":"KEYBOARD_EVENTS = supported_events ( like = 'KEY.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;KEYBOARD_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.MIDI_EVENTS","text":"MIDI_EVENTS = supported_events ( like = 'MIDI.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;MIDI_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.MOUSE_EVENTS","text":"MOUSE_EVENTS = supported_events ( like = 'MOUSE.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;MOUSE_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.TEXT_EVENTS","text":"TEXT_EVENTS = supported_events ( like = 'TEXT.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;TEXT_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.WINDOW_EVENTS","text":"WINDOW_EVENTS = supported_events ( like = 'WINDOW.*?' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;WINDOW_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.ALL_EVENTS","text":"ALL_EVENTS = supported_events ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;ALL_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events.GAME_EVENTS","text":"GAME_EVENTS = list ( set ( ALL_EVENTS ) - set ( AUDIO_EVENTS ) - set ( CONTROLLER_EVENTS ) - set ( DROP_EVENTS ) - set ( TOUCH_EVENTS ) - set ( JOYSTICK_EVENTS ) - set ( KEYBOARD_EVENTS ) - set ( MIDI_EVENTS ) - set ( MOUSE_EVENTS ) - set ( TEXT_EVENTS ) - set ( WINDOW_EVENTS ) )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;GAME_EVENTS"},{"location":"reference/glitchygames/events/#glitchygames.events-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager","text":"Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ResourceManager"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.__init__","text":"__init__ ( game : object ) -> None Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/events/#glitchygames.events.ResourceManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent","text":"Bases: dict","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;HashableEvent"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.type","text":"type = type","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;type"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__hash","text":"__hash = hash (( type , tuple ( keys ())))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__hash"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.dict","text":"dict","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dict"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__init__","text":"__init__ ( type , * args , ** attributes )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__setitem__","text":"__setitem__ ( key , item )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__setitem__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__getitem__","text":"__getitem__ ( key )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getitem__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__len__","text":"__len__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__len__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__delitem__","text":"__delitem__ ( key )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__delitem__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.clear","text":"clear ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;clear"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.copy","text":"copy ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;copy"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.has_key","text":"has_key ( k )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;has_key"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.update","text":"update ( * args , ** kwargs )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.keys","text":"keys ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;keys"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.values","text":"values ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;values"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__hash__","text":"__hash__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__hash__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__eq__","text":"__eq__ ( other )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__eq__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__ne__","text":"__ne__ ( other )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__ne__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__repr__","text":"__repr__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__repr__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__str__","text":"__str__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__copy__","text":"__copy__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__copy__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__deepcopy__","text":"__deepcopy__ ( memo )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__deepcopy__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__reduce__","text":"__reduce__ ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__reduce__"},{"location":"reference/glitchygames/events/#glitchygames.events.HashableEvent.__setstate__","text":"__setstate__ ( state )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__setstate__"},{"location":"reference/glitchygames/events/#glitchygames.events.EventInterface","text":"Abstract base class for event interfaces.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventInterface"},{"location":"reference/glitchygames/events/#glitchygames.events.EventInterface-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.EventInterface.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEvents","text":"Bases: EventInterface Mixin for audio events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEvents.on_audio_device_added_event","text":"on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEvents.on_audio_device_removed_event","text":"on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEventStubs","text":"Bases: AudioEvents Mixin for audio events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEventStubs.on_audio_device_added_event","text":"on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.AudioEventStubs.on_audio_device_removed_event","text":"on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents","text":"Bases: EventInterface Mixin for controller events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_axis_motion_event","text":"on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_axis_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_button_down_event","text":"on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_button_up_event","text":"on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_device_added_event","text":"on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_device_remapped_event","text":"on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_remapped_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_device_removed_event","text":"on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_touchpad_down_event","text":"on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_touchpad_motion_event","text":"on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEvents.on_controller_touchpad_up_event","text":"on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs","text":"Bases: ControllerEvents Mixin for controller events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_axis_motion_event","text":"on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_axis_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_button_down_event","text":"on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_button_up_event","text":"on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_device_added_event","text":"on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_device_remapped_event","text":"on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_remapped_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_device_removed_event","text":"on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_touchpad_down_event","text":"on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_touchpad_motion_event","text":"on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.ControllerEventStubs.on_controller_touchpad_up_event","text":"on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents","text":"Bases: EventInterface Mixin for drop events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents.on_drop_begin_event","text":"on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_begin_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents.on_drop_file_event","text":"on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_file_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents.on_drop_text_event","text":"on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_text_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEvents.on_drop_complete_event","text":"on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_complete_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs","text":"Bases: EventInterface Mixin for drop events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs.on_drop_begin_event","text":"on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_begin_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs.on_drop_file_event","text":"on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_file_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs.on_drop_text_event","text":"on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_text_event"},{"location":"reference/glitchygames/events/#glitchygames.events.DropEventStubs.on_drop_complete_event","text":"on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_complete_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents","text":"Bases: EventInterface Mixin for touch events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_touch_down_event","text":"on_touch_down_event ( event : Event ) -> None Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_touch_motion_event","text":"on_touch_motion_event ( event : Event ) -> None Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_touch_up_event","text":"on_touch_up_event ( event : Event ) -> None Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_multi_touch_down_event","text":"on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_multi_touch_motion_event","text":"on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEvents.on_multi_touch_up_event","text":"on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs","text":"Bases: EventInterface Mixin for touch events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_touch_down_event","text":"on_touch_down_event ( event : Event ) -> None Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_touch_motion_event","text":"on_touch_motion_event ( event : Event ) -> None Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_touch_up_event","text":"on_touch_up_event ( event : Event ) -> None Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_multi_touch_down_event","text":"on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_multi_touch_motion_event","text":"on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TouchEventStubs.on_multi_touch_up_event","text":"on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents","text":"Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_active_event","text":"on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_menu_item_event","text":"on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_menu_item_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_user_event","text":"on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEvents.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs","text":"Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_active_event","text":"on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_menu_item_event","text":"on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_menu_item_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_user_event","text":"on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/events/#glitchygames.events.GameEventStubs.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEvents","text":"Bases: EventInterface Mixin for font events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEvents.on_font_changed_event","text":"on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_font_changed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEventStubs","text":"Bases: EventInterface Mixin for font events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.FontEventStubs.on_font_changed_event","text":"on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_font_changed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEvents","text":"Bases: EventInterface Mixin for keyboard events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs","text":"Bases: EventInterface Mixin for keyboard events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.KeyboardEventStubs.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents","text":"Bases: EventInterface Mixin for joystick events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_device_added_event","text":"on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEvents.on_joy_device_removed_event","text":"on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs","text":"Bases: EventInterface Mixin for joystick events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_device_added_event","text":"on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_added_event"},{"location":"reference/glitchygames/events/#glitchygames.events.JoystickEventStubs.on_joy_device_removed_event","text":"on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_removed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MidiEvents","text":"Bases: EventInterface Mixin for midi events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MidiEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.MidiEventStubs","text":"Bases: EventInterface Mixin for midi events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MidiEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents","text":"Bases: EventInterface Mixin for mouse events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEvents.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs","text":"Bases: EventInterface Mixin for mouse events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/events/#glitchygames.events.MouseEventStubs.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEvents","text":"Bases: EventInterface Mixin for text events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEvents.on_text_editing_event","text":"on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_editing_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEvents.on_text_input_event","text":"on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_input_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEventStubs","text":"Bases: EventInterface Mixin for text events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEventStubs.on_text_editing_event","text":"on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_editing_event"},{"location":"reference/glitchygames/events/#glitchygames.events.TextEventStubs.on_text_input_event","text":"on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_input_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents","text":"Bases: EventInterface Mixin for window events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_close_event","text":"on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_close_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_enter_event","text":"on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_enter_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_exposed_event","text":"on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_exposed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_focus_gained_event","text":"on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_gained_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_focus_lost_event","text":"on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_lost_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_hidden_event","text":"on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hidden_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_hit_test_event","text":"on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hit_test_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_leave_event","text":"on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_leave_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_maximized_event","text":"on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_maximized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_minimized_event","text":"on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_minimized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_moved_event","text":"on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_moved_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_resized_event","text":"on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_resized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_restored_event","text":"on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_restored_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_shown_event","text":"on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_shown_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_size_changed_event","text":"on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_size_changed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEvents.on_window_take_focus_event","text":"on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_take_focus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs","text":"Bases: EventInterface Mixin for window events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_close_event","text":"on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_close_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_enter_event","text":"on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_enter_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_exposed_event","text":"on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_exposed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_focus_gained_event","text":"on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_gained_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_focus_lost_event","text":"on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_lost_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_hidden_event","text":"on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hidden_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_hit_test_event","text":"on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hit_test_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_leave_event","text":"on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_leave_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_maximized_event","text":"on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_maximized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_minimized_event","text":"on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_minimized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_moved_event","text":"on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_moved_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_resized_event","text":"on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_resized_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_restored_event","text":"on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_restored_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_shown_event","text":"on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_shown_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_size_changed_event","text":"on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_size_changed_event"},{"location":"reference/glitchygames/events/#glitchygames.events.WindowEventStubs.on_window_take_focus_event","text":"on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_take_focus_event"},{"location":"reference/glitchygames/events/#glitchygames.events.AllEvents","text":"Bases: AudioEvents , ControllerEvents , DropEvents , TouchEvents , FontEvents , GameEvents , JoystickEvents , KeyboardEvents , MidiEvents , MouseEvents , TextEvents , WindowEvents Mixin for all events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AllEvents"},{"location":"reference/glitchygames/events/#glitchygames.events.AllEventStubs","text":"Bases: AudioEventStubs , ControllerEventStubs , DropEventStubs , TouchEventStubs , FontEventStubs , GameEventStubs , JoystickEventStubs , KeyboardEventStubs , MidiEventStubs , MouseEventStubs , TextEventStubs , WindowEventStubs Mixin for all event stubs.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AllEventStubs"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager","text":"Bases: ResourceManager Root event manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventManager"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.proxies","text":"proxies = [ EventProxy ( event_source = self )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.EventProxy","text":"Proxy for events. Attributes glitchygames.events.EventManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.events.EventManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.events.EventManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.events.EventManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.events.EventManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.events.EventManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventProxy"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/events/#glitchygames.events.EventManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/events/#glitchygames.events-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/events/#glitchygames.events.supported_events","text":"supported_events ( like : str = '.*' ) -> list Return a list of supported events. This method is crucial for allowing the game engine to support both older versions of pygame and newer versions. It allows us to enumerate supported pygame events and initialize them dynamically. This ensures that the game engine will work with many versions of pygame. We enumerate all pygame event IDs and then use the pygame.event.event_name() method to get the event name. We then use a regular expression to match the event name against the like parameter. Parameters: like ( str , default: '.*' ) \u2013 A regular expression to match against the event names. Returns: list \u2013 A list of pygame events whose names match the regular expression.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;supported_events"},{"location":"reference/glitchygames/events/#glitchygames.events.dump_cache_info","text":"dump_cache_info ( func , * args , ** kwargs )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;dump_cache_info"},{"location":"reference/glitchygames/events/#glitchygames.events.unhandled_event","text":"unhandled_event ( game , event , * args , ** kwargs ) -> NoReturn Handle unhandled events. This method is called when an event is not handled by any of the event handlers. This is helpful for us to debug events that we haven't implemented yet. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: NoReturn \u2013 None Raises: AttributeError \u2013 If the event is not handled.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;unhandled_event"},{"location":"reference/glitchygames/examples/","text":"glitchygames.examples","title":"examples"},{"location":"reference/glitchygames/examples/#glitchygames.examples","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;examples"},{"location":"reference/glitchygames/fonts/","text":"glitchygames.fonts Fonts. This is a simple font manager that can be used to load fonts. Attributes glitchygames.fonts.log module-attribute log = getLogger ( 'game.fonts' ) Classes glitchygames.fonts.FontEvents Bases: EventInterface Mixin for font events. Functions glitchygames.fonts.FontEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.fonts.FontEvents.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.fonts.ResourceManager Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton. Attributes glitchygames.fonts.ResourceManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.fonts.ResourceManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.fonts.ResourceManager.proxies instance-attribute proxies = [] Functions glitchygames.fonts.ResourceManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.fonts.ResourceManager.__init__ __init__ ( game : object ) -> None Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None glitchygames.fonts.ResourceManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.fonts.FontManager Bases: ResourceManager A font manager. Attributes glitchygames.fonts.FontManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.fonts.FontManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.fonts.FontManager.proxies instance-attribute proxies = [] glitchygames.fonts.FontManager.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = {} glitchygames.fonts.FontManager.RENDER_CACHE class-attribute instance-attribute RENDER_CACHE : ClassVar = {} Classes glitchygames.fonts.FontManager.FontProxy Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.fonts.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.fonts.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.fonts.FontManager.FontProxy.game instance-attribute game = game glitchygames.fonts.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.fonts.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.fonts.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.fonts.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.fonts.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.fonts.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None Functions glitchygames.fonts.FontManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.fonts.FontManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.fonts.FontManager.__init__ __init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.fonts.FontManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.fonts.FontManager.font classmethod font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont","title":"fonts"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts","text":"Fonts. This is a simple font manager that can be used to load fonts.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;fonts"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.log","text":"log = getLogger ( 'game.fonts' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontEvents","text":"Bases: EventInterface Mixin for font events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontEvents"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontEvents.on_font_changed_event","text":"on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_font_changed_event"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager","text":"Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ResourceManager"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.__init__","text":"__init__ ( game : object ) -> None Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.ResourceManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager","text":"Bases: ResourceManager A font manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontManager"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.OPTIONS","text":"OPTIONS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.RENDER_CACHE","text":"RENDER_CACHE : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;RENDER_CACHE"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.FontProxy","text":"Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.fonts.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.fonts.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.fonts.FontManager.FontProxy.game instance-attribute game = game glitchygames.fonts.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.fonts.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.fonts.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.fonts.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.fonts.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.fonts.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontProxy"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/fonts/#glitchygames.fonts.FontManager.font","text":"font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;font"},{"location":"reference/glitchygames/game_objects/","text":"glitchygames.game_objects Functions glitchygames.game_objects.load_sound load_sound ( snd_file : str , volume : float = 0.25 ) -> Sound Load a sound file. Parameters: snd_file ( str ) \u2013 The sound file to load. volume ( float , default: 0.25 ) \u2013 The volume to set the sound to. Returns: Sound \u2013 pygame.mixer.Sound: The sound object.","title":"game_objects"},{"location":"reference/glitchygames/game_objects/#glitchygames.game_objects","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;game_objects"},{"location":"reference/glitchygames/game_objects/#glitchygames.game_objects-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/game_objects/#glitchygames.game_objects.load_sound","text":"load_sound ( snd_file : str , volume : float = 0.25 ) -> Sound Load a sound file. Parameters: snd_file ( str ) \u2013 The sound file to load. volume ( float , default: 0.25 ) \u2013 The volume to set the sound to. Returns: Sound \u2013 pygame.mixer.Sound: The sound object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;load_sound"},{"location":"reference/glitchygames/movement/","text":"glitchygames.movement","title":"movement"},{"location":"reference/glitchygames/movement/#glitchygames.movement","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;movement"},{"location":"reference/glitchygames/pixels/","text":"glitchygames.pixels Pixel data handling. Attributes glitchygames.pixels.LOG module-attribute LOG = getLogger ( 'game.pixels' ) Functions glitchygames.pixels.indexed_rgb_triplet_generator indexed_rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) pixel tuples from a buffer of pixel tuples. glitchygames.pixels.rgb_555_triplet_generator rgb_555_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) pixel tuples for 555 formated color data. glitchygames.pixels.rgb_565_triplet_generator rgb_565_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for 565 formatted color data. glitchygames.pixels.rgb_triplet_generator rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for the provided pixel data. glitchygames.pixels.image_from_pixels image_from_pixels ( pixels : list , width : int , height : int ) -> Surface Produce a pygame.image object for the specified [(R, G, B), ...] pixel data. glitchygames.pixels.pixels_from_data pixels_from_data ( pixel_data : list ) -> list Expand raw pixel data into [(R, G, B), ...] triplets. glitchygames.pixels.pixels_from_path pixels_from_path ( path : str ) -> list Expand raw pixel data from file into [(R, G, B), ...] triplets.","title":"pixels"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels","text":"Pixel data handling.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;pixels"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.LOG","text":"LOG = getLogger ( 'game.pixels' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.indexed_rgb_triplet_generator","text":"indexed_rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) pixel tuples from a buffer of pixel tuples.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;indexed_rgb_triplet_generator"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.rgb_555_triplet_generator","text":"rgb_555_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) pixel tuples for 555 formated color data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_555_triplet_generator"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.rgb_565_triplet_generator","text":"rgb_565_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for 565 formatted color data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_565_triplet_generator"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.rgb_triplet_generator","text":"rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for the provided pixel data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_triplet_generator"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.image_from_pixels","text":"image_from_pixels ( pixels : list , width : int , height : int ) -> Surface Produce a pygame.image object for the specified [(R, G, B), ...] pixel data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;image_from_pixels"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.pixels_from_data","text":"pixels_from_data ( pixel_data : list ) -> list Expand raw pixel data into [(R, G, B), ...] triplets.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;pixels_from_data"},{"location":"reference/glitchygames/pixels/#glitchygames.pixels.pixels_from_path","text":"pixels_from_path ( path : str ) -> list Expand raw pixel data from file into [(R, G, B), ...] triplets.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;pixels_from_path"},{"location":"reference/glitchygames/scenes/","text":"glitchygames.scenes Glitchy Games Engine scenes module. Attributes glitchygames.scenes.BLACK module-attribute BLACK = BLACK glitchygames.scenes.LOG module-attribute LOG = getLogger ( 'game.scenes' ) Classes glitchygames.scenes.MousePointer Mouse pointer sprite. Attributes glitchygames.scenes.MousePointer.pos instance-attribute pos = pos glitchygames.scenes.MousePointer.size instance-attribute size = size glitchygames.scenes.MousePointer.rect instance-attribute rect = Rect ( pos , size ) glitchygames.scenes.MousePointer.x property writable x : int Get the x coordinate of the mouse pointer. Returns: int \u2013 int glitchygames.scenes.MousePointer.y property writable y : int Get the y coordinate of the mouse pointer. Returns: int \u2013 int Functions glitchygames.scenes.MousePointer.__init__ __init__ ( pos : tuple , size : tuple = ( 1 , 1 )) -> None Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None glitchygames.scenes.SceneManager Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events. Attributes glitchygames.scenes.SceneManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.scenes.SceneManager.proxies instance-attribute proxies = [ EventProxy ( event_source = self )] glitchygames.scenes.SceneManager.log class-attribute instance-attribute log : ClassVar = LOG glitchygames.scenes.SceneManager.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = {} glitchygames.scenes.SceneManager.screen instance-attribute screen = get_surface () glitchygames.scenes.SceneManager.update_type instance-attribute update_type = 'update' glitchygames.scenes.SceneManager.fps_refresh_rate instance-attribute fps_refresh_rate = 1000 glitchygames.scenes.SceneManager.target_fps instance-attribute target_fps = 0 glitchygames.scenes.SceneManager.dt instance-attribute dt = 0 glitchygames.scenes.SceneManager.timer instance-attribute timer = 0 glitchygames.scenes.SceneManager.active_scene instance-attribute active_scene = None glitchygames.scenes.SceneManager.next_scene instance-attribute next_scene = active_scene glitchygames.scenes.SceneManager.previous_scene instance-attribute previous_scene = active_scene glitchygames.scenes.SceneManager.quit_requested instance-attribute quit_requested = False glitchygames.scenes.SceneManager.clock instance-attribute clock = Clock () glitchygames.scenes.SceneManager.game_engine property writable game_engine : object Return the game engine. Returns: object ( object ) \u2013 The game engine. glitchygames.scenes.SceneManager.all_sprites property all_sprites : LayeredDirty | None Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group. Classes glitchygames.scenes.SceneManager.EventProxy Proxy for events. Attributes glitchygames.scenes.SceneManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.scenes.SceneManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.scenes.SceneManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.scenes.SceneManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.scenes.SceneManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.scenes.SceneManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames.scenes.SceneManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.scenes.SceneManager.__init__ __init__ () -> None Initialize the scene manager. Returns: None \u2013 None glitchygames.scenes.SceneManager.switch_to_scene switch_to_scene ( next_scene : Scene ) -> None Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None glitchygames.scenes.SceneManager.play play () -> None glitchygames.scenes.SceneManager.start start () -> None Start the scene manager. Returns: None \u2013 None glitchygames.scenes.SceneManager.stop stop () -> None glitchygames.scenes.SceneManager.terminate terminate () -> None Terminate the scene manager. Returns: None \u2013 None glitchygames.scenes.SceneManager.quit quit () -> None Quit the game. Returns: None \u2013 None glitchygames.scenes.SceneManager.quit_game quit_game () -> None Quit the game. Returns: None \u2013 None glitchygames.scenes.SceneManager.on_quit_event on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.SceneManager.on_fps_event on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.SceneManager.on_game_event on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.SceneManager.register_game_event register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None glitchygames.scenes.SceneManager.__getattr__ __getattr__ ( attr : str ) -> Callable Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object. glitchygames.scenes.Scene Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically. Attributes glitchygames.scenes.Scene.log class-attribute instance-attribute log = LOG glitchygames.scenes.Scene.FPS class-attribute instance-attribute FPS = 0 glitchygames.scenes.Scene.NAME class-attribute instance-attribute NAME = 'Unnamed Scene' glitchygames.scenes.Scene.VERSION class-attribute instance-attribute VERSION = '0.0' glitchygames.scenes.Scene.target_fps instance-attribute target_fps = 0 glitchygames.scenes.Scene.fps instance-attribute fps = 0 glitchygames.scenes.Scene.dt instance-attribute dt = 0 glitchygames.scenes.Scene.dt_timer instance-attribute dt_timer = 0 glitchygames.scenes.Scene.options instance-attribute options = options glitchygames.scenes.Scene.scene_manager instance-attribute scene_manager = SceneManager () glitchygames.scenes.Scene.name instance-attribute name = type ( self ) glitchygames.scenes.Scene.next_scene instance-attribute next_scene = self glitchygames.scenes.Scene.rects instance-attribute rects = None glitchygames.scenes.Scene.screen_width instance-attribute screen_width = get_width () glitchygames.scenes.Scene.screen_height instance-attribute screen_height = get_height () glitchygames.scenes.Scene.all_sprites instance-attribute all_sprites = groups glitchygames.scenes.Scene.screen instance-attribute screen = get_surface () glitchygames.scenes.Scene.background instance-attribute background = Surface ( get_size ()) glitchygames.scenes.Scene.image instance-attribute image = screen glitchygames.scenes.Scene.rect instance-attribute rect = get_rect () glitchygames.scenes.Scene.dirty instance-attribute dirty = 1 glitchygames.scenes.Scene.screenshot property screenshot : Surface Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. glitchygames.scenes.Scene.background_color property writable background_color : Color Return the background color. Returns: Color \u2013 pygame.Color: The background color. Functions glitchygames.scenes.Scene.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.scenes.Scene.on_mouse_motion_event cached on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_focus_event cached on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_unfocus_event cached on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_button_up_event cached on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_button_down_event cached on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_scroll_down_event cached on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_scroll_up_event cached on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_wheel_event cached on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_key_down_event cached on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_key_chord_up_event cached on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.scenes.Scene.on_key_chord_down_event cached on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_axis_motion_event cached on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_hat_motion_event cached on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_ball_motion_event cached on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_device_added_event cached on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_device_removed_event cached on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_active_event cached on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_game_event cached on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_menu_item_event cached on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_font_changed_event cached on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_multi_touch_down_event cached on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_multi_touch_motion_event cached on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_multi_touch_up_event cached on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_drop_begin_event cached on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_drop_file_event cached on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_drop_text_event cached on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_drop_complete_event cached on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_axis_motion_event cached on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_device_added_event cached on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_device_remapped_event cached on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_device_removed_event cached on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_touchpad_down_event cached on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_touchpad_motion_event cached on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_touchpad_up_event cached on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_audio_device_added_event cached on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_audio_device_removed_event cached on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.__init__ __init__ ( options : dict | None = None , groups : LayeredDirty | None = None ) -> None Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.scenes.Scene.setup setup () -> None Setup the scene. Returns: None \u2013 None glitchygames.scenes.Scene.cleanup cleanup () -> None Cleanup the scene. Returns: None \u2013 None glitchygames.scenes.Scene.dt_tick dt_tick ( dt : float ) -> None Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames.scenes.Scene.update update () -> None Update the active scene. Returns: None \u2013 None glitchygames.scenes.Scene.render render ( screen : Surface ) -> None Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames.scenes.Scene.sprites_at_position sprites_at_position ( pos : tuple ) -> list [ Sprite ] | None Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames.scenes.Scene.on_controller_button_down_event on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_controller_button_up_event on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames.scenes.Scene.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_text_editing_event on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_text_input_event on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_touch_down_event on_touch_down_event ( event : Event ) -> None Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_touch_motion_event on_touch_motion_event ( event : Event ) -> None Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_touch_up_event on_touch_up_event ( event : Event ) -> None Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_user_event on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_close_event on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_enter_event on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_exposed_event on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_focus_gained_event on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_focus_lost_event on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_hidden_event on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_hit_test_event on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_leave_event on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_maximized_event on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_minimized_event on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_moved_event on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_resized_event on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_restored_event on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_shown_event on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_size_changed_event on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_window_take_focus_event on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_quit_event on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.on_fps_event on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.scenes.Scene.load_resources load_resources () -> None Load the scene's resources. Returns: None \u2013 None","title":"scenes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes","text":"Glitchy Games Engine scenes module.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;scenes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.BLACK","text":"BLACK = BLACK","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACK"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.LOG","text":"LOG = getLogger ( 'game.scenes' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer","text":"Mouse pointer sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MousePointer"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.pos","text":"pos = pos","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;pos"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.size","text":"size = size","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;size"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.rect","text":"rect = Rect ( pos , size )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.x","text":"x : int Get the x coordinate of the mouse pointer. Returns: int \u2013 int","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.y","text":"y : int Get the y coordinate of the mouse pointer. Returns: int \u2013 int","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.MousePointer.__init__","text":"__init__ ( pos : tuple , size : tuple = ( 1 , 1 )) -> None Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager","text":"Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SceneManager"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.proxies","text":"proxies = [ EventProxy ( event_source = self )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.log","text":"log : ClassVar = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.OPTIONS","text":"OPTIONS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.update_type","text":"update_type = 'update'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;update_type"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.fps_refresh_rate","text":"fps_refresh_rate = 1000","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps_refresh_rate"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.target_fps","text":"target_fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;target_fps"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.timer","text":"timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;timer"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.active_scene","text":"active_scene = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.next_scene","text":"next_scene = active_scene","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;next_scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.previous_scene","text":"previous_scene = active_scene","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;previous_scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.quit_requested","text":"quit_requested = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;quit_requested"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.clock","text":"clock = Clock ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;clock"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.game_engine","text":"game_engine : object Return the game engine. Returns: object ( object ) \u2013 The game engine.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game_engine"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.all_sprites","text":"all_sprites : LayeredDirty | None Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.EventProxy","text":"Proxy for events. Attributes glitchygames.scenes.SceneManager.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.scenes.SceneManager.EventProxy.proxies instance-attribute proxies = [] glitchygames.scenes.SceneManager.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.scenes.SceneManager.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.scenes.SceneManager.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.scenes.SceneManager.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventProxy"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.__init__","text":"__init__ () -> None Initialize the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.switch_to_scene","text":"switch_to_scene ( next_scene : Scene ) -> None Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;switch_to_scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.play","text":"play () -> None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;play"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.start","text":"start () -> None Start the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;start"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.stop","text":"stop () -> None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;stop"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.terminate","text":"terminate () -> None Terminate the scene manager. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;terminate"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.quit","text":"quit () -> None Quit the game. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.quit_game","text":"quit_game () -> None Quit the game. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit_game"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.register_game_event","text":"register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;register_game_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.SceneManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene","text":"Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.FPS","text":"FPS = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;FPS"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.NAME","text":"NAME = 'Unnamed Scene'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;NAME"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.VERSION","text":"VERSION = '0.0'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;VERSION"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.target_fps","text":"target_fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;target_fps"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.fps","text":"fps = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.options","text":"options = options","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;options"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.scene_manager","text":"scene_manager = SceneManager ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;scene_manager"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.name","text":"name = type ( self )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.next_scene","text":"next_scene = self","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;next_scene"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.rects","text":"rects = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rects"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.all_sprites","text":"all_sprites = groups","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.background","text":"background = Surface ( get_size ())","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.image","text":"image = screen","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.dirty","text":"dirty = 1","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dirty"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.screenshot","text":"screenshot : Surface Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screenshot"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.background_color","text":"background_color : Color Return the background color. Returns: Color \u2013 pygame.Color: The background color.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_device_added_event","text":"on_joy_device_added_event ( event : Event ) -> None Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_added_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_device_removed_event","text":"on_joy_device_removed_event ( event : Event ) -> None Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_device_removed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_active_event","text":"on_active_event ( event : Event ) -> None Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_game_event","text":"on_game_event ( event : Event ) -> None Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_game_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_menu_item_event","text":"on_menu_item_event ( event : Event ) -> None Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_menu_item_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_font_changed_event","text":"on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_font_changed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_multi_touch_down_event","text":"on_multi_touch_down_event ( event : Event ) -> None Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_multi_touch_motion_event","text":"on_multi_touch_motion_event ( event : Event ) -> None Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_multi_touch_up_event","text":"on_multi_touch_up_event ( event : Event ) -> None Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_multi_touch_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_drop_begin_event","text":"on_drop_begin_event ( event : Event ) -> None Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_begin_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_drop_file_event","text":"on_drop_file_event ( event : Event ) -> None Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_file_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_drop_text_event","text":"on_drop_text_event ( event : Event ) -> None Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_text_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_drop_complete_event","text":"on_drop_complete_event ( event : Event ) -> None Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_drop_complete_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_axis_motion_event","text":"on_controller_axis_motion_event ( event : Event ) -> None Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_axis_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_device_added_event","text":"on_controller_device_added_event ( event : Event ) -> None Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_added_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_device_remapped_event","text":"on_controller_device_remapped_event ( event : Event ) -> None Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_remapped_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_device_removed_event","text":"on_controller_device_removed_event ( event : Event ) -> None Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_device_removed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_touchpad_down_event","text":"on_controller_touchpad_down_event ( event : Event ) -> None Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_touchpad_motion_event","text":"on_controller_touchpad_motion_event ( event : Event ) -> None Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_touchpad_up_event","text":"on_controller_touchpad_up_event ( event : Event ) -> None Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_touchpad_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_audio_device_added_event","text":"on_audio_device_added_event ( event : Event ) -> None Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_added_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_audio_device_removed_event","text":"on_audio_device_removed_event ( event : Event ) -> None Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_audio_device_removed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.__init__","text":"__init__ ( options : dict | None = None , groups : LayeredDirty | None = None ) -> None Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.setup","text":"setup () -> None Setup the scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;setup"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.cleanup","text":"cleanup () -> None Cleanup the scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;cleanup"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.dt_tick","text":"dt_tick ( dt : float ) -> None Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.update","text":"update () -> None Update the active scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.render","text":"render ( screen : Surface ) -> None Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;render"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.sprites_at_position","text":"sprites_at_position ( pos : tuple ) -> list [ Sprite ] | None Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;sprites_at_position"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_button_down_event","text":"on_controller_button_down_event ( event : Event ) -> None Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_controller_button_up_event","text":"on_controller_button_up_event ( event : Event ) -> None Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_controller_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_text_editing_event","text":"on_text_editing_event ( event : Event ) -> None Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_editing_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_text_input_event","text":"on_text_input_event ( event : Event ) -> None Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_text_input_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_touch_down_event","text":"on_touch_down_event ( event : Event ) -> None Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_down_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_touch_motion_event","text":"on_touch_motion_event ( event : Event ) -> None Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_motion_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_touch_up_event","text":"on_touch_up_event ( event : Event ) -> None Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_touch_up_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_user_event","text":"on_user_event ( event : Event ) -> None Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_close_event","text":"on_window_close_event ( event : Event ) -> None Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_close_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_enter_event","text":"on_window_enter_event ( event : Event ) -> None Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_enter_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_exposed_event","text":"on_window_exposed_event ( event : Event ) -> None Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_exposed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_focus_gained_event","text":"on_window_focus_gained_event ( event : Event ) -> None Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_gained_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_focus_lost_event","text":"on_window_focus_lost_event ( event : Event ) -> None Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_focus_lost_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_hidden_event","text":"on_window_hidden_event ( event : Event ) -> None Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hidden_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_hit_test_event","text":"on_window_hit_test_event ( event : Event ) -> None Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_hit_test_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_leave_event","text":"on_window_leave_event ( event : Event ) -> None Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_leave_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_maximized_event","text":"on_window_maximized_event ( event : Event ) -> None Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_maximized_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_minimized_event","text":"on_window_minimized_event ( event : Event ) -> None Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_minimized_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_moved_event","text":"on_window_moved_event ( event : Event ) -> None Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_moved_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_resized_event","text":"on_window_resized_event ( event : Event ) -> None Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_resized_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_restored_event","text":"on_window_restored_event ( event : Event ) -> None Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_restored_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_shown_event","text":"on_window_shown_event ( event : Event ) -> None Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_shown_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_size_changed_event","text":"on_window_size_changed_event ( event : Event ) -> None Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_size_changed_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_window_take_focus_event","text":"on_window_take_focus_event ( event : Event ) -> None Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_window_take_focus_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.on_fps_event","text":"on_fps_event ( event : Event ) -> None Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_fps_event"},{"location":"reference/glitchygames/scenes/#glitchygames.scenes.Scene.load_resources","text":"load_resources () -> None Load the scene's resources. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load_resources"},{"location":"reference/glitchygames/sprites/","text":"glitchygames.sprites Glitchy Games Engine sprite module. Attributes glitchygames.sprites.LOG module-attribute LOG = getLogger ( 'game.sprites' ) Classes glitchygames.sprites.MouseEvents Bases: EventInterface Mixin for mouse events. Functions glitchygames.sprites.MouseEvents.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.MouseEvents.on_mouse_motion_event abstractmethod on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_drag_event abstractmethod on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_drop_event abstractmethod on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_left_mouse_drag_event abstractmethod on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_left_mouse_drop_event abstractmethod on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_middle_mouse_drag_event abstractmethod on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_middle_mouse_drop_event abstractmethod on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_right_mouse_drag_event abstractmethod on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_right_mouse_drop_event abstractmethod on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_focus_event abstractmethod on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_unfocus_event abstractmethod on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_button_up_event abstractmethod on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_left_mouse_button_up_event abstractmethod on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_middle_mouse_button_up_event abstractmethod on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_right_mouse_button_up_event abstractmethod on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_button_down_event abstractmethod on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_left_mouse_button_down_event abstractmethod on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_middle_mouse_button_down_event abstractmethod on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_right_mouse_button_down_event abstractmethod on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_scroll_down_event abstractmethod on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_scroll_up_event abstractmethod on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.MouseEvents.on_mouse_wheel_event abstractmethod on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite Bases: MouseEvents , SpriteInterface , DirtySprite A root sprite class. All Glitchy Games sprites inherit from this class. Attributes glitchygames.sprites.RootSprite.rect instance-attribute rect = Rect ( 0 , 0 , 0 , 0 ) glitchygames.sprites.RootSprite.image instance-attribute image = None Functions glitchygames.sprites.RootSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.RootSprite.on_mouse_motion_event abstractmethod on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_drag_event abstractmethod on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_drop_event abstractmethod on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_left_mouse_drag_event abstractmethod on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_left_mouse_drop_event abstractmethod on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_middle_mouse_drag_event abstractmethod on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_middle_mouse_drop_event abstractmethod on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_right_mouse_drag_event abstractmethod on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_right_mouse_drop_event abstractmethod on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_focus_event abstractmethod on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_unfocus_event abstractmethod on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_button_up_event abstractmethod on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_left_mouse_button_up_event abstractmethod on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_middle_mouse_button_up_event abstractmethod on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_right_mouse_button_up_event abstractmethod on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_button_down_event abstractmethod on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_left_mouse_button_down_event abstractmethod on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_middle_mouse_button_down_event abstractmethod on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_right_mouse_button_down_event abstractmethod on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_scroll_down_event abstractmethod on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_scroll_up_event abstractmethod on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.on_mouse_wheel_event abstractmethod on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.RootSprite.__init__ __init__ ( groups : LayeredDirty | None = None ) -> None Initialize a RootSprite. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.Sprite Bases: RootSprite A convenience class for handling all of the common sprite behaviors. Attributes glitchygames.sprites.Sprite.log class-attribute instance-attribute log = LOG glitchygames.sprites.Sprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.sprites.Sprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.sprites.Sprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.sprites.Sprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.sprites.Sprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.sprites.Sprite.image instance-attribute image = Surface (( width , height )) glitchygames.sprites.Sprite.rect instance-attribute rect = get_rect () glitchygames.sprites.Sprite.dt instance-attribute dt = 0 glitchygames.sprites.Sprite.dt_timer instance-attribute dt_timer = 0 glitchygames.sprites.Sprite.name instance-attribute name = name glitchygames.sprites.Sprite.parent instance-attribute parent = parent glitchygames.sprites.Sprite.proxies instance-attribute proxies = [ self ] glitchygames.sprites.Sprite.callbacks instance-attribute callbacks = {} glitchygames.sprites.Sprite.screen instance-attribute screen = get_surface () glitchygames.sprites.Sprite.screen_width instance-attribute screen_width = get_width () glitchygames.sprites.Sprite.screen_height instance-attribute screen_height = get_height () glitchygames.sprites.Sprite.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.sprites.Sprite.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames.sprites.Sprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.Sprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.sprites.Sprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.Sprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.sprites.Sprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.sprites.Sprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.Sprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.Sprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.Sprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.sprites.BitmappySprite Bases: Sprite A sprite that loads from a Bitmappy config file. Attributes glitchygames.sprites.BitmappySprite.log class-attribute instance-attribute log = LOG glitchygames.sprites.BitmappySprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.sprites.BitmappySprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.sprites.BitmappySprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.sprites.BitmappySprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.sprites.BitmappySprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.sprites.BitmappySprite.dt instance-attribute dt = 0 glitchygames.sprites.BitmappySprite.dt_timer instance-attribute dt_timer = 0 glitchygames.sprites.BitmappySprite.name instance-attribute name = name glitchygames.sprites.BitmappySprite.callbacks instance-attribute callbacks = {} glitchygames.sprites.BitmappySprite.screen instance-attribute screen = get_surface () glitchygames.sprites.BitmappySprite.screen_width instance-attribute screen_width = get_width () glitchygames.sprites.BitmappySprite.screen_height instance-attribute screen_height = get_height () glitchygames.sprites.BitmappySprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.sprites.BitmappySprite.filename instance-attribute filename = filename glitchygames.sprites.BitmappySprite.focusable instance-attribute focusable = focusable glitchygames.sprites.BitmappySprite.width instance-attribute width = width glitchygames.sprites.BitmappySprite.height instance-attribute height = height glitchygames.sprites.BitmappySprite.image instance-attribute image = Surface (( width , height )) glitchygames.sprites.BitmappySprite.rect instance-attribute rect = get_rect () glitchygames.sprites.BitmappySprite.parent instance-attribute parent = parent glitchygames.sprites.BitmappySprite.proxies instance-attribute proxies = [ parent ] Functions glitchygames.sprites.BitmappySprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.BitmappySprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.sprites.BitmappySprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , filename : str | None = None , focusable : bool = False , parent : object = None , groups : LayeredDirty | None = None , ) -> None Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.sprites.BitmappySprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.sprites.BitmappySprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.sprites.BitmappySprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.BitmappySprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.Singleton A generic singleton class. Attributes glitchygames.sprites.Singleton.__instance__ class-attribute instance-attribute __instance__ = None Functions glitchygames.sprites.Singleton.__new__ __new__ ( * args , ** kwargs ) -> Self Create a new instance of the Singleton. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: Singleton ( Self ) \u2013 The instance of the Singleton. glitchygames.sprites.SingletonBitmappySprite Bases: BitmappySprite A singleton class for handling singleton sprites, like mouse pointers. Attributes glitchygames.sprites.SingletonBitmappySprite.rect instance-attribute rect = get_rect () glitchygames.sprites.SingletonBitmappySprite.image instance-attribute image = Surface (( width , height )) glitchygames.sprites.SingletonBitmappySprite.log class-attribute instance-attribute log = LOG glitchygames.sprites.SingletonBitmappySprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.sprites.SingletonBitmappySprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.sprites.SingletonBitmappySprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.sprites.SingletonBitmappySprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.sprites.SingletonBitmappySprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.sprites.SingletonBitmappySprite.dt instance-attribute dt = 0 glitchygames.sprites.SingletonBitmappySprite.dt_timer instance-attribute dt_timer = 0 glitchygames.sprites.SingletonBitmappySprite.name instance-attribute name = name glitchygames.sprites.SingletonBitmappySprite.parent instance-attribute parent = parent glitchygames.sprites.SingletonBitmappySprite.proxies instance-attribute proxies = [ parent ] glitchygames.sprites.SingletonBitmappySprite.callbacks instance-attribute callbacks = {} glitchygames.sprites.SingletonBitmappySprite.screen instance-attribute screen = get_surface () glitchygames.sprites.SingletonBitmappySprite.screen_width instance-attribute screen_width = get_width () glitchygames.sprites.SingletonBitmappySprite.screen_height instance-attribute screen_height = get_height () glitchygames.sprites.SingletonBitmappySprite.width instance-attribute width = width glitchygames.sprites.SingletonBitmappySprite.height instance-attribute height = height glitchygames.sprites.SingletonBitmappySprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.sprites.SingletonBitmappySprite.filename instance-attribute filename = filename glitchygames.sprites.SingletonBitmappySprite.focusable instance-attribute focusable = focusable glitchygames.sprites.SingletonBitmappySprite.__instance__ class-attribute instance-attribute __instance__ = None Functions glitchygames.sprites.SingletonBitmappySprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.SingletonBitmappySprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.sprites.SingletonBitmappySprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.sprites.SingletonBitmappySprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.sprites.SingletonBitmappySprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.sprites.SingletonBitmappySprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.sprites.SingletonBitmappySprite.__new__ __new__ ( * args , ** kwargs ) -> Self Create a new instance of the SingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: SingletonBitmappySprite ( Self ) \u2013 The instance of the SingletonBitmappySprite. glitchygames.sprites.SingletonBitmappySprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the SingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors. Attributes glitchygames.sprites.FocusableSingletonBitmappySprite.rect instance-attribute rect = get_rect () glitchygames.sprites.FocusableSingletonBitmappySprite.image instance-attribute image = Surface (( width , height )) glitchygames.sprites.FocusableSingletonBitmappySprite.log class-attribute instance-attribute log = LOG glitchygames.sprites.FocusableSingletonBitmappySprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.sprites.FocusableSingletonBitmappySprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.sprites.FocusableSingletonBitmappySprite.dt instance-attribute dt = 0 glitchygames.sprites.FocusableSingletonBitmappySprite.dt_timer instance-attribute dt_timer = 0 glitchygames.sprites.FocusableSingletonBitmappySprite.name instance-attribute name = name glitchygames.sprites.FocusableSingletonBitmappySprite.parent instance-attribute parent = parent glitchygames.sprites.FocusableSingletonBitmappySprite.proxies instance-attribute proxies = [ parent ] glitchygames.sprites.FocusableSingletonBitmappySprite.callbacks instance-attribute callbacks = {} glitchygames.sprites.FocusableSingletonBitmappySprite.screen instance-attribute screen = get_surface () glitchygames.sprites.FocusableSingletonBitmappySprite.screen_width instance-attribute screen_width = get_width () glitchygames.sprites.FocusableSingletonBitmappySprite.screen_height instance-attribute screen_height = get_height () glitchygames.sprites.FocusableSingletonBitmappySprite.width instance-attribute width = width glitchygames.sprites.FocusableSingletonBitmappySprite.height instance-attribute height = height glitchygames.sprites.FocusableSingletonBitmappySprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.sprites.FocusableSingletonBitmappySprite.filename instance-attribute filename = filename glitchygames.sprites.FocusableSingletonBitmappySprite.focusable instance-attribute focusable = focusable glitchygames.sprites.FocusableSingletonBitmappySprite.__instance__ class-attribute instance-attribute __instance__ = None Functions glitchygames.sprites.FocusableSingletonBitmappySprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.sprites.FocusableSingletonBitmappySprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.sprites.FocusableSingletonBitmappySprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.sprites.FocusableSingletonBitmappySprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.sprites.FocusableSingletonBitmappySprite.__new__ __new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames.sprites.FocusableSingletonBitmappySprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None Functions glitchygames.sprites.rgb_triplet_generator rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for the provided pixel data.","title":"sprites"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites","text":"Glitchy Games Engine sprite module.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;sprites"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.LOG","text":"LOG = getLogger ( 'game.sprites' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents","text":"Bases: EventInterface Mixin for mouse events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseEvents"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.MouseEvents.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite","text":"Bases: MouseEvents , SpriteInterface , DirtySprite A root sprite class. All Glitchy Games sprites inherit from this class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;RootSprite"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.rect","text":"rect = Rect ( 0 , 0 , 0 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.image","text":"image = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , entering_focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event , leaving_focus : object ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.RootSprite.__init__","text":"__init__ ( groups : LayeredDirty | None = None ) -> None Initialize a RootSprite. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite","text":"Bases: RootSprite A convenience class for handling all of the common sprite behaviors.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Sprite"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.proxies","text":"proxies = [ self ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.width","text":"width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.height","text":"height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Sprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite","text":"Bases: Sprite A sprite that loads from a Bitmappy config file.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;BitmappySprite"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , filename : str | None = None , focusable : bool = False , parent : object = None , groups : LayeredDirty | None = None , ) -> None Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.BitmappySprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Singleton","text":"A generic singleton class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Singleton"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Singleton-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Singleton.__instance__","text":"__instance__ = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instance__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Singleton-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.Singleton.__new__","text":"__new__ ( * args , ** kwargs ) -> Self Create a new instance of the Singleton. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: Singleton ( Self ) \u2013 The instance of the Singleton.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite","text":"Bases: BitmappySprite A singleton class for handling singleton sprites, like mouse pointers.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SingletonBitmappySprite"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.__instance__","text":"__instance__ = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instance__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.__new__","text":"__new__ ( * args , ** kwargs ) -> Self Create a new instance of the SingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: SingletonBitmappySprite ( Self ) \u2013 The instance of the SingletonBitmappySprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.SingletonBitmappySprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the SingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite","text":"Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FocusableSingletonBitmappySprite"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.__instance__","text":"__instance__ = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instance__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.__new__","text":"__new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.FocusableSingletonBitmappySprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/sprites/#glitchygames.sprites.rgb_triplet_generator","text":"rgb_triplet_generator ( pixel_data : iter ) -> iter [ tuple [ int , int , int ]] Yield (R, G, B) tuples for the provided pixel data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_triplet_generator"},{"location":"reference/glitchygames/templates/","text":"glitchygames.templates This module helps build a project from templates. It's a wrapper around cookiecutter. Attributes glitchygames.templates.path module-attribute path = parent Functions glitchygames.templates.get_templates get_templates () -> list Returns a list of templates. glitchygames.templates.build build ( template : str ) -> None Builds the project from the template, using cookiecutter.","title":"templates"},{"location":"reference/glitchygames/templates/#glitchygames.templates","text":"This module helps build a project from templates. It's a wrapper around cookiecutter.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;templates"},{"location":"reference/glitchygames/templates/#glitchygames.templates-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/templates/#glitchygames.templates.path","text":"path = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;path"},{"location":"reference/glitchygames/templates/#glitchygames.templates-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/templates/#glitchygames.templates.get_templates","text":"get_templates () -> list Returns a list of templates.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;get_templates"},{"location":"reference/glitchygames/templates/#glitchygames.templates.build","text":"build ( template : str ) -> None Builds the project from the template, using cookiecutter.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;build"},{"location":"reference/glitchygames/tools/","text":"glitchygames.tools","title":"tools"},{"location":"reference/glitchygames/tools/#glitchygames.tools","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;tools"},{"location":"reference/glitchygames/ui/","text":"glitchygames.ui GlitchyGames UI classes. Attributes glitchygames.ui.BLACKLUCENT module-attribute BLACKLUCENT = BLACKLUCENT glitchygames.ui.WHITE module-attribute WHITE = WHITE glitchygames.ui.LOG module-attribute LOG = getLogger ( 'game.ui' ) Classes glitchygames.ui.GameEngine Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class. Attributes glitchygames.ui.GameEngine.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.ui.GameEngine.proxies instance-attribute proxies = [ EventProxy ( event_source = self )] glitchygames.ui.GameEngine.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.GameEngine.game class-attribute instance-attribute game : object = None glitchygames.ui.GameEngine.icon class-attribute instance-attribute icon : Surface = load ( Path ( ASSET_PATH ) / 'glitch.png' ) glitchygames.ui.GameEngine.NAME class-attribute instance-attribute NAME : Literal [ 'Boilerplate Adventures' ] = 'Boilerplate Adventures' glitchygames.ui.GameEngine.VERSION class-attribute instance-attribute VERSION : Literal [ '1.0' ] = '1.0' glitchygames.ui.GameEngine.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = None glitchygames.ui.GameEngine.LAST_EVENT_MISS class-attribute instance-attribute LAST_EVENT_MISS : ClassVar = None glitchygames.ui.GameEngine.MISSING_EVENTS class-attribute instance-attribute MISSING_EVENTS : ClassVar = [] glitchygames.ui.GameEngine.UNIMPLEMENTED_EVENTS class-attribute instance-attribute UNIMPLEMENTED_EVENTS : ClassVar = [] glitchygames.ui.GameEngine.USE_FASTEVENTS class-attribute instance-attribute USE_FASTEVENTS : ClassVar = False glitchygames.ui.GameEngine.EVENT_HANDLERS class-attribute instance-attribute EVENT_HANDLERS : ClassVar = {} glitchygames.ui.GameEngine.fps instance-attribute fps : float = get ( 'fps' , 0.0 ) glitchygames.ui.GameEngine.update_type instance-attribute update_type = get ( 'update_type' ) glitchygames.ui.GameEngine.use_gfxdraw instance-attribute use_gfxdraw = get ( 'use_gfxdraw' ) glitchygames.ui.GameEngine.windowed instance-attribute windowed = get ( 'windowed' ) glitchygames.ui.GameEngine.desired_resolution instance-attribute desired_resolution : tuple [ int , int ] = suggested_resolution ( desired_width , desired_height ) glitchygames.ui.GameEngine.fps_refresh_rate instance-attribute fps_refresh_rate = get ( 'fps_refresh_rate' ) glitchygames.ui.GameEngine.pygame_version instance-attribute pygame_version = { 'major' : 0 , 'minor' : 0 , 'patch' : 0 } glitchygames.ui.GameEngine.scene_manager instance-attribute scene_manager : SceneManager = SceneManager () glitchygames.ui.GameEngine.mode_flags instance-attribute mode_flags : int = 0 glitchygames.ui.GameEngine.screen_width property screen_width : int Get the screen width. Returns: int ( int ) \u2013 The screen width. glitchygames.ui.GameEngine.screen_height property screen_height : int Get the screen height. Returns: int ( int ) \u2013 The screen height. Classes glitchygames.ui.GameEngine.EventProxy Proxy for events. Attributes glitchygames.ui.GameEngine.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.GameEngine.EventProxy.proxies instance-attribute proxies = [] glitchygames.ui.GameEngine.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.ui.GameEngine.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.ui.GameEngine.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.ui.GameEngine.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames.ui.GameEngine.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.ui.GameEngine.__init__ __init__ ( game : object , icon : Surface | Path | str = None ) -> None Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None glitchygames.ui.GameEngine.initialize_display initialize_display () -> None Initialize the display. Returns: None \u2013 None glitchygames.ui.GameEngine.initialize_event_handlers initialize_event_handlers () -> None Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None glitchygames.ui.GameEngine.initialize_input_event_handlers initialize_input_event_handlers () -> None Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None glitchygames.ui.GameEngine.__del__ __del__ () -> None Delete the game engine. Returns: None \u2013 None glitchygames.ui.GameEngine.print_system_info print_system_info () -> None Print system information. Returns: None \u2013 None glitchygames.ui.GameEngine.print_game_info print_game_info () -> None Print game information. Returns: None \u2013 None glitchygames.ui.GameEngine.suggested_resolution suggested_resolution ( desired_width : int = 0 , desired_height : int = 0 ) -> tuple [ int , int ] Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution. glitchygames.ui.GameEngine.set_cursor classmethod set_cursor ( cursor : list [ str ], cursor_black : str = \".\" , cursor_white : str = \"X\" , cursor_xor : str = \"o\" ) -> list [ str ] Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor. glitchygames.ui.GameEngine.initialize_system_icons initialize_system_icons () -> None Initialize system icons. Returns: None \u2013 None glitchygames.ui.GameEngine.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.ui.GameEngine.start start () -> None Start the game engine. Returns: None \u2013 None glitchygames.ui.GameEngine.quit_game classmethod quit_game () -> None Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None glitchygames.ui.GameEngine.process_events process_events () -> bool Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_audio_event process_audio_event ( event : Event ) -> bool Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_controller_event process_controller_event ( event : Event ) -> bool Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_drop_event process_drop_event ( event : Event ) -> bool Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_touch_event process_touch_event ( event : Event ) -> bool Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_midi_event process_midi_event ( event : Event ) -> bool Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_mouse_event process_mouse_event ( event : Event ) -> bool Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_keyboard_event process_keyboard_event ( event : Event ) -> bool Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_joystick_event process_joystick_event ( event : Event ) -> bool Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_text_event process_text_event ( event : Event ) -> None Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_window_focus_event process_window_focus_event ( event : Event ) -> bool Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_window_event process_window_event ( event : Event ) -> None Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_game_event process_game_event ( event : Event ) -> None Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames.ui.GameEngine.process_unimplemented_event process_unimplemented_event ( event : Event ) -> None Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None glitchygames.ui.GameEngine.post_game_event post_game_event ( event_subtype : EventType , event_data : dict ) -> None Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None glitchygames.ui.GameEngine.suppress_event suppress_event ( * args , attr : str , ** kwargs ) -> None Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames.ui.GameEngine.register_game_event register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None glitchygames.ui.GameEngine.missing_event missing_event ( * args , ** kwargs ) -> None Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames.ui.GameEngine.__getattr__ __getattr__ ( attr : str ) -> Callable Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object. glitchygames.ui.MousePointer Mouse pointer sprite. Attributes glitchygames.ui.MousePointer.pos instance-attribute pos = pos glitchygames.ui.MousePointer.size instance-attribute size = size glitchygames.ui.MousePointer.rect instance-attribute rect = Rect ( pos , size ) glitchygames.ui.MousePointer.x property writable x : int Get the x coordinate of the mouse pointer. Returns: int \u2013 int glitchygames.ui.MousePointer.y property writable y : int Get the y coordinate of the mouse pointer. Returns: int \u2013 int Functions glitchygames.ui.MousePointer.__init__ __init__ ( pos : tuple , size : tuple = ( 1 , 1 )) -> None Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None glitchygames.ui.FontManager Bases: ResourceManager A font manager. Attributes glitchygames.ui.FontManager.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.FontManager.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.ui.FontManager.proxies instance-attribute proxies = [] glitchygames.ui.FontManager.OPTIONS class-attribute instance-attribute OPTIONS : ClassVar = {} glitchygames.ui.FontManager.RENDER_CACHE class-attribute instance-attribute RENDER_CACHE : ClassVar = {} Classes glitchygames.ui.FontManager.FontProxy Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.ui.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.ui.FontManager.FontProxy.game instance-attribute game = game glitchygames.ui.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.ui.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.ui.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.ui.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None Functions glitchygames.ui.FontManager.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.ui.FontManager.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.ui.FontManager.__init__ __init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.ui.FontManager.args classmethod args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.ui.FontManager.font classmethod font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont glitchygames.ui.BitmappySprite Bases: Sprite A sprite that loads from a Bitmappy config file. Attributes glitchygames.ui.BitmappySprite.log class-attribute instance-attribute log = LOG glitchygames.ui.BitmappySprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.BitmappySprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.BitmappySprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.BitmappySprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.BitmappySprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.BitmappySprite.dt instance-attribute dt = 0 glitchygames.ui.BitmappySprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.BitmappySprite.name instance-attribute name = name glitchygames.ui.BitmappySprite.callbacks instance-attribute callbacks = {} glitchygames.ui.BitmappySprite.screen instance-attribute screen = get_surface () glitchygames.ui.BitmappySprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.BitmappySprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.BitmappySprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.BitmappySprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.BitmappySprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.BitmappySprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.BitmappySprite.filename instance-attribute filename = filename glitchygames.ui.BitmappySprite.focusable instance-attribute focusable = focusable glitchygames.ui.BitmappySprite.width instance-attribute width = width glitchygames.ui.BitmappySprite.height instance-attribute height = height glitchygames.ui.BitmappySprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.BitmappySprite.rect instance-attribute rect = get_rect () glitchygames.ui.BitmappySprite.parent instance-attribute parent = parent glitchygames.ui.BitmappySprite.proxies instance-attribute proxies = [ parent ] Functions glitchygames.ui.BitmappySprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.BitmappySprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.BitmappySprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.BitmappySprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.BitmappySprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.BitmappySprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , filename : str | None = None , focusable : bool = False , parent : object = None , groups : LayeredDirty | None = None , ) -> None Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.BitmappySprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.BitmappySprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.BitmappySprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.BitmappySprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.BitmappySprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.BitmappySprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors. Attributes glitchygames.ui.FocusableSingletonBitmappySprite.rect instance-attribute rect = get_rect () glitchygames.ui.FocusableSingletonBitmappySprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.FocusableSingletonBitmappySprite.log class-attribute instance-attribute log = LOG glitchygames.ui.FocusableSingletonBitmappySprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.FocusableSingletonBitmappySprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.FocusableSingletonBitmappySprite.dt instance-attribute dt = 0 glitchygames.ui.FocusableSingletonBitmappySprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.FocusableSingletonBitmappySprite.name instance-attribute name = name glitchygames.ui.FocusableSingletonBitmappySprite.parent instance-attribute parent = parent glitchygames.ui.FocusableSingletonBitmappySprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.FocusableSingletonBitmappySprite.callbacks instance-attribute callbacks = {} glitchygames.ui.FocusableSingletonBitmappySprite.screen instance-attribute screen = get_surface () glitchygames.ui.FocusableSingletonBitmappySprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.FocusableSingletonBitmappySprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.FocusableSingletonBitmappySprite.width instance-attribute width = width glitchygames.ui.FocusableSingletonBitmappySprite.height instance-attribute height = height glitchygames.ui.FocusableSingletonBitmappySprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.FocusableSingletonBitmappySprite.filename instance-attribute filename = filename glitchygames.ui.FocusableSingletonBitmappySprite.focusable instance-attribute focusable = focusable glitchygames.ui.FocusableSingletonBitmappySprite.__instance__ class-attribute instance-attribute __instance__ = None Functions glitchygames.ui.FocusableSingletonBitmappySprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.FocusableSingletonBitmappySprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.FocusableSingletonBitmappySprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.FocusableSingletonBitmappySprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.FocusableSingletonBitmappySprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.FocusableSingletonBitmappySprite.__new__ __new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames.ui.FocusableSingletonBitmappySprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.Sprite Bases: RootSprite A convenience class for handling all of the common sprite behaviors. Attributes glitchygames.ui.Sprite.log class-attribute instance-attribute log = LOG glitchygames.ui.Sprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.Sprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.Sprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.Sprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.Sprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.Sprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.Sprite.rect instance-attribute rect = get_rect () glitchygames.ui.Sprite.dt instance-attribute dt = 0 glitchygames.ui.Sprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.Sprite.name instance-attribute name = name glitchygames.ui.Sprite.parent instance-attribute parent = parent glitchygames.ui.Sprite.proxies instance-attribute proxies = [ self ] glitchygames.ui.Sprite.callbacks instance-attribute callbacks = {} glitchygames.ui.Sprite.screen instance-attribute screen = get_surface () glitchygames.ui.Sprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.Sprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.Sprite.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.ui.Sprite.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames.ui.Sprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.Sprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.Sprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.Sprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.Sprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.Sprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.Sprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.Sprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.Sprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.MenuBar Bases: FocusableSingletonBitmappySprite A menu bar class. Attributes glitchygames.ui.MenuBar.rect instance-attribute rect = get_rect () glitchygames.ui.MenuBar.image instance-attribute image = Surface (( width , height )) glitchygames.ui.MenuBar.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.MenuBar.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.MenuBar.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.MenuBar.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.MenuBar.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.MenuBar.dt instance-attribute dt = 0 glitchygames.ui.MenuBar.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.MenuBar.name instance-attribute name = name glitchygames.ui.MenuBar.parent instance-attribute parent = parent glitchygames.ui.MenuBar.proxies instance-attribute proxies = [ parent ] glitchygames.ui.MenuBar.callbacks instance-attribute callbacks = {} glitchygames.ui.MenuBar.screen instance-attribute screen = get_surface () glitchygames.ui.MenuBar.screen_width instance-attribute screen_width = get_width () glitchygames.ui.MenuBar.screen_height instance-attribute screen_height = get_height () glitchygames.ui.MenuBar.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.MenuBar.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.MenuBar.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.MenuBar.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.MenuBar.filename instance-attribute filename = filename glitchygames.ui.MenuBar.focusable instance-attribute focusable = focusable glitchygames.ui.MenuBar.__instance__ class-attribute instance-attribute __instance__ = None glitchygames.ui.MenuBar.log class-attribute instance-attribute log = LOG glitchygames.ui.MenuBar.all_sprites instance-attribute all_sprites = groups glitchygames.ui.MenuBar.background_color instance-attribute background_color = ( 0 , 255 , 0 ) glitchygames.ui.MenuBar.border_width instance-attribute border_width = 2 glitchygames.ui.MenuBar.menu_items instance-attribute menu_items = {} glitchygames.ui.MenuBar.menu_offset_x instance-attribute menu_offset_x = border_width glitchygames.ui.MenuBar.menu_offset_y instance-attribute menu_offset_y = border_width glitchygames.ui.MenuBar.width instance-attribute width = width glitchygames.ui.MenuBar.height instance-attribute height = height glitchygames.ui.MenuBar.has_focus instance-attribute has_focus = False glitchygames.ui.MenuBar.dirty instance-attribute dirty = 2 Functions glitchygames.ui.MenuBar.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.MenuBar.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.MenuBar.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.MenuBar.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuBar.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuBar.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuBar.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.MenuBar.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.MenuBar.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.MenuBar.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.MenuBar.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.MenuBar.__new__ __new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames.ui.MenuBar.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a MenuBar. Parameters: x ( int ) \u2013 The x coordinate of the menu bar. y ( int ) \u2013 The y coordinate of the menu bar. width ( int ) \u2013 The width of the menu bar. height ( int ) \u2013 The height of the menu bar. name ( str | None , default: None ) \u2013 The name of the menu bar. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.MenuBar.add_menu add_menu ( menu : MenuItem ) -> None Add a menu to the menu bar. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames.ui.MenuBar.add_menu_item add_menu_item ( menu_item : MenuItem , menu : MenuBar | None = None ) -> None Add a menu item to the menu bar. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar | None , default: None ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames.ui.MenuBar.update update () -> None Update the menu bar. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuBar.on_mouse_wheel_event on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem Bases: BitmappySprite A menu item class. This class represents a menu item. It can be a root level menu item or a sub menu item. Parameters: BitmappySprite ( BitmappySprite ) \u2013 The base sprite class. Returns: \u2013 None Attributes glitchygames.ui.MenuItem.rect instance-attribute rect = get_rect () glitchygames.ui.MenuItem.image instance-attribute image = Surface (( width , height )) glitchygames.ui.MenuItem.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.MenuItem.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.MenuItem.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.MenuItem.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.MenuItem.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.MenuItem.dt instance-attribute dt = 0 glitchygames.ui.MenuItem.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.MenuItem.proxies instance-attribute proxies = [ parent ] glitchygames.ui.MenuItem.callbacks instance-attribute callbacks = {} glitchygames.ui.MenuItem.screen instance-attribute screen = get_surface () glitchygames.ui.MenuItem.screen_width instance-attribute screen_width = get_width () glitchygames.ui.MenuItem.screen_height instance-attribute screen_height = get_height () glitchygames.ui.MenuItem.width instance-attribute width = width glitchygames.ui.MenuItem.height instance-attribute height = height glitchygames.ui.MenuItem.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.MenuItem.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.MenuItem.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.MenuItem.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.MenuItem.filename instance-attribute filename = filename glitchygames.ui.MenuItem.focusable instance-attribute focusable = focusable glitchygames.ui.MenuItem.log class-attribute instance-attribute log = LOG glitchygames.ui.MenuItem.all_sprites instance-attribute all_sprites = groups glitchygames.ui.MenuItem.background_color instance-attribute background_color = ( 255 , 0 , 255 ) glitchygames.ui.MenuItem.border_width instance-attribute border_width = 2 glitchygames.ui.MenuItem.menu_items instance-attribute menu_items = {} glitchygames.ui.MenuItem.menu_offset_x instance-attribute menu_offset_x = border_width glitchygames.ui.MenuItem.menu_offset_y instance-attribute menu_offset_y = border_width glitchygames.ui.MenuItem.menu_image instance-attribute menu_image = None glitchygames.ui.MenuItem.menu_rect instance-attribute menu_rect = None glitchygames.ui.MenuItem.active instance-attribute active = False glitchygames.ui.MenuItem.name instance-attribute name = name glitchygames.ui.MenuItem.parent instance-attribute parent = parent glitchygames.ui.MenuItem.text instance-attribute text = TextSprite ( background_color = background_color , text_color = ( 0 , 0 , 0 ), x = x , y = y , width = width , height = height , text = name , parent = parent , groups = groups , ) glitchygames.ui.MenuItem.menu_up_image instance-attribute menu_up_image = image glitchygames.ui.MenuItem.menu_up_rect instance-attribute menu_up_rect = rect glitchygames.ui.MenuItem.menu_down_image instance-attribute menu_down_image = menu_up_image glitchygames.ui.MenuItem.menu_down_rect instance-attribute menu_down_rect = menu_up_rect Functions glitchygames.ui.MenuItem.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.MenuItem.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.MenuItem.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.MenuItem.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuItem.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuItem.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.MenuItem.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.MenuItem.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.MenuItem.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.MenuItem.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.MenuItem.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.MenuItem.__init__ __init__ ( x : int = 0 , y : int = 0 , width : int = 1 , height : int = 1 , name : str | None = None , filename : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a MenuItem. Parameters: x ( int , default: 0 ) \u2013 The x coordinate of the menu item. y ( int , default: 0 ) \u2013 The y coordinate of the menu item. width ( int , default: 1 ) \u2013 The width of the menu item. height ( int , default: 1 ) \u2013 The height of the menu item. name ( str | None , default: None ) \u2013 The name of the menu item. filename ( str | None , default: None ) \u2013 The filename of the menu item. parent ( object | None , default: None ) \u2013 The parent of the menu item. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.MenuItem.add add ( * groups : LayeredDirty ) -> None Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.MenuItem.add_menu add_menu ( menu : MenuItem ) -> None Add a menu to the menu item. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames.ui.MenuItem.add_menu_item add_menu_item ( menu_item : MenuItem , menu : MenuBar ) -> None Add a menu item to the menu item. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames.ui.MenuItem.update update () -> None Update the menu item. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_drag_event on_mouse_drag_event ( event : Event ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_drop_event on_mouse_drop_event ( event : Event ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem.on_mouse_wheel_event on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite Bases: BitmappySprite A text sprite class. Attributes glitchygames.ui.TextSprite.rect instance-attribute rect = get_rect () glitchygames.ui.TextSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.TextSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.TextSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.TextSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.TextSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.TextSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.TextSprite.dt instance-attribute dt = 0 glitchygames.ui.TextSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.TextSprite.name instance-attribute name = name glitchygames.ui.TextSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.TextSprite.screen instance-attribute screen = get_surface () glitchygames.ui.TextSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.TextSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.TextSprite.width instance-attribute width = width glitchygames.ui.TextSprite.height instance-attribute height = height glitchygames.ui.TextSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.TextSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.TextSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.TextSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.TextSprite.filename instance-attribute filename = filename glitchygames.ui.TextSprite.focusable instance-attribute focusable = focusable glitchygames.ui.TextSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.TextSprite.background_color instance-attribute background_color = ( 255 , 0 , 255 ) glitchygames.ui.TextSprite.active_color instance-attribute active_color = background_color glitchygames.ui.TextSprite.click_color instance-attribute click_color = ( 0 , 255 , 128 ) glitchygames.ui.TextSprite.hover_color instance-attribute hover_color = ( 255 , 255 , 0 ) glitchygames.ui.TextSprite.text instance-attribute text = text glitchygames.ui.TextSprite.font_manager instance-attribute font_manager = FontManager ( GameEngine ) glitchygames.ui.TextSprite.alpha instance-attribute alpha = 0 glitchygames.ui.TextSprite.parent instance-attribute parent = parent glitchygames.ui.TextSprite.text_box instance-attribute text_box = TextBox ( font = font (), x = x , y = x , text = text , text_color = text_color , parent = self , groups = groups ) glitchygames.ui.TextSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.TextSprite.x property writable x : int Get the x coordinate of the text sprite. Returns: int ( int ) \u2013 The x coordinate of the text sprite. glitchygames.ui.TextSprite.y property writable y : int Get the y coordinate of the text sprite. Returns: int ( int ) \u2013 The y coordinate of the text sprite. Classes glitchygames.ui.TextSprite.TextBox Bases: Sprite A text box class. Attributes glitchygames.ui.TextSprite.TextBox.rect instance-attribute rect = get_rect () glitchygames.ui.TextSprite.TextBox.image instance-attribute image = Surface (( width , height )) glitchygames.ui.TextSprite.TextBox.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.TextSprite.TextBox.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.TextSprite.TextBox.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.TextSprite.TextBox.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.TextSprite.TextBox.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.TextSprite.TextBox.dt instance-attribute dt = 0 glitchygames.ui.TextSprite.TextBox.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.TextSprite.TextBox.callbacks instance-attribute callbacks = {} glitchygames.ui.TextSprite.TextBox.screen instance-attribute screen = get_surface () glitchygames.ui.TextSprite.TextBox.screen_width instance-attribute screen_width = get_width () glitchygames.ui.TextSprite.TextBox.screen_height instance-attribute screen_height = get_height () glitchygames.ui.TextSprite.TextBox.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.ui.TextSprite.TextBox.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames.ui.TextSprite.TextBox.log class-attribute instance-attribute log = LOG glitchygames.ui.TextSprite.TextBox.start_x instance-attribute start_x = x glitchygames.ui.TextSprite.TextBox.start_y instance-attribute start_y = y glitchygames.ui.TextSprite.TextBox.line_height instance-attribute line_height = line_height glitchygames.ui.TextSprite.TextBox.text_color instance-attribute text_color = text_color glitchygames.ui.TextSprite.TextBox.text_hover_color instance-attribute text_hover_color = ( 255 , 255 , 255 ) glitchygames.ui.TextSprite.TextBox.text_click_color instance-attribute text_click_color = ( 63 , 127 , 255 ) glitchygames.ui.TextSprite.TextBox.background_color instance-attribute background_color = ( 255 , 0 , 255 ) glitchygames.ui.TextSprite.TextBox.background_hover_color instance-attribute background_hover_color = ( 0 , 255 , 128 ) glitchygames.ui.TextSprite.TextBox.background_click_color instance-attribute background_click_color = ( 255 , 127 , 63 ) glitchygames.ui.TextSprite.TextBox.active_text_color instance-attribute active_text_color = text_color glitchygames.ui.TextSprite.TextBox.active_background_color instance-attribute active_background_color = background_color glitchygames.ui.TextSprite.TextBox.font instance-attribute font = font glitchygames.ui.TextSprite.TextBox.name instance-attribute name = text glitchygames.ui.TextSprite.TextBox.parent instance-attribute parent = parent glitchygames.ui.TextSprite.TextBox.proxies instance-attribute proxies = [ parent ] glitchygames.ui.TextSprite.TextBox.x property writable x : int Get the x coordinate of the text box. Returns: int ( int ) \u2013 The x coordinate of the text box. glitchygames.ui.TextSprite.TextBox.y property writable y : int Get the y coordinate of the text box. Returns: int ( int ) \u2013 The y coordinate of the text box. Functions glitchygames.ui.TextSprite.TextBox.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.TextSprite.TextBox.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.TextSprite.TextBox.__init__ __init__ ( font : str , x : int , y : int , line_height : int = 15 , text : str = \"Text\" , text_color : tuple = WHITE , parent : object = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextBox. Parameters: font ( str ) \u2013 The font to use. x ( int ) \u2013 The x coordinate of the text box. y ( int ) \u2013 The y coordinate of the text box. line_height ( int , default: 15 ) \u2013 The line height of the text box. text ( str , default: 'Text' ) \u2013 The text to display in the text box. text_color ( tuple , default: WHITE ) \u2013 The color of the text. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.print_text print_text ( surface : Surface , string : str ) -> None Print text to the text box. Parameters: surface ( Surface ) \u2013 The surface to print the text to. string ( str ) \u2013 The text to print. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.reset reset () -> None Reset the text box. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.indent indent () -> None Indent the text box. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.unindent unindent () -> None Unindent the text box. Returns: None \u2013 None Functions glitchygames.ui.TextSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.TextSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.TextSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.TextSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.TextSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.TextSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.TextSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.TextSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.TextSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , background_color : tuple = BLACKLUCENT , text_color : tuple = WHITE , alpha : int = 0 , text : str = \"Text\" , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextSprite. Parameters: x ( int ) \u2013 The x coordinate of the text sprite. y ( int ) \u2013 The y coordinate of the text sprite. width ( int ) \u2013 The width of the text sprite. height ( int ) \u2013 The height of the text sprite. name ( str , default: None ) \u2013 The name of the text sprite. background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text sprite. text_color ( tuple , default: WHITE ) \u2013 The color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text sprite. text ( str , default: 'Text' ) \u2013 The text to display in the text sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.TextSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None glitchygames.ui.TextSprite.update update () -> None Update the text sprite. Returns: None \u2013 None glitchygames.ui.TextSprite.add add ( * groups : LayeredDirty ) -> None Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. focus ( object ) \u2013 The object that has focus. Returns: None \u2013 None glitchygames.ui.TextSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite Bases: BitmappySprite A button sprite class. Attributes glitchygames.ui.ButtonSprite.rect instance-attribute rect = get_rect () glitchygames.ui.ButtonSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.ButtonSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.ButtonSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.ButtonSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.ButtonSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.ButtonSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.ButtonSprite.dt instance-attribute dt = 0 glitchygames.ui.ButtonSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.ButtonSprite.name instance-attribute name = name glitchygames.ui.ButtonSprite.parent instance-attribute parent = parent glitchygames.ui.ButtonSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.ButtonSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.ButtonSprite.screen instance-attribute screen = get_surface () glitchygames.ui.ButtonSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.ButtonSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.ButtonSprite.width instance-attribute width = width glitchygames.ui.ButtonSprite.height instance-attribute height = height glitchygames.ui.ButtonSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.ButtonSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.ButtonSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.ButtonSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.ButtonSprite.filename instance-attribute filename = filename glitchygames.ui.ButtonSprite.focusable instance-attribute focusable = focusable glitchygames.ui.ButtonSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.ButtonSprite.border_color instance-attribute border_color = ( 255 , 255 , 255 ) glitchygames.ui.ButtonSprite.active_color instance-attribute active_color = ( 128 , 128 , 128 ) glitchygames.ui.ButtonSprite.inactive_color instance-attribute inactive_color = ( 0 , 0 , 0 ) glitchygames.ui.ButtonSprite.background_color instance-attribute background_color = inactive_color glitchygames.ui.ButtonSprite.text instance-attribute text = TextSprite ( background_color = background_color , x = centerx if parent else x , y = centery if parent else y , width = width , height = height , text = name , parent = self , groups = groups , ) glitchygames.ui.ButtonSprite.x property writable x : int Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames.ui.ButtonSprite.y property writable y : int Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. Functions glitchygames.ui.ButtonSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.ButtonSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.ButtonSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.ButtonSprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.ButtonSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.ButtonSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.ButtonSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.ButtonSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.ButtonSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a ButtonSprite. Parameters: x ( int ) \u2013 The x coordinate of the button sprite. y ( int ) \u2013 The y coordinate of the button sprite. width ( int ) \u2013 The width of the button sprite. height ( int ) \u2013 The height of the button sprite. name ( str , default: None ) \u2013 The name of the button sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.ButtonSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite Bases: ButtonSprite A checkbox sprite class. Attributes glitchygames.ui.CheckboxSprite.rect instance-attribute rect = get_rect () glitchygames.ui.CheckboxSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.CheckboxSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.CheckboxSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.CheckboxSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.CheckboxSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.CheckboxSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.CheckboxSprite.dt instance-attribute dt = 0 glitchygames.ui.CheckboxSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.CheckboxSprite.name instance-attribute name = name glitchygames.ui.CheckboxSprite.parent instance-attribute parent = parent glitchygames.ui.CheckboxSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.CheckboxSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.CheckboxSprite.screen instance-attribute screen = get_surface () glitchygames.ui.CheckboxSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.CheckboxSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.CheckboxSprite.width instance-attribute width = width glitchygames.ui.CheckboxSprite.height instance-attribute height = height glitchygames.ui.CheckboxSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.CheckboxSprite.filename instance-attribute filename = filename glitchygames.ui.CheckboxSprite.focusable instance-attribute focusable = focusable glitchygames.ui.CheckboxSprite.border_color instance-attribute border_color = ( 255 , 255 , 255 ) glitchygames.ui.CheckboxSprite.active_color instance-attribute active_color = ( 128 , 128 , 128 ) glitchygames.ui.CheckboxSprite.inactive_color instance-attribute inactive_color = ( 0 , 0 , 0 ) glitchygames.ui.CheckboxSprite.background_color instance-attribute background_color = inactive_color glitchygames.ui.CheckboxSprite.text instance-attribute text = TextSprite ( background_color = background_color , x = centerx if parent else x , y = centery if parent else y , width = width , height = height , text = name , parent = self , groups = groups , ) glitchygames.ui.CheckboxSprite.x property writable x : int Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames.ui.CheckboxSprite.y property writable y : int Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. glitchygames.ui.CheckboxSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.CheckboxSprite.checked instance-attribute checked = False glitchygames.ui.CheckboxSprite.color instance-attribute color = ( 128 , 128 , 128 ) Functions glitchygames.ui.CheckboxSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.CheckboxSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.CheckboxSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.CheckboxSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.CheckboxSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.CheckboxSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , callbacks : Callable | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a CheckboxSprite. Parameters: x ( int ) \u2013 The x coordinate of the checkbox sprite. y ( int ) \u2013 The y coordinate of the checkbox sprite. width ( int ) \u2013 The width of the checkbox sprite. height ( int ) \u2013 The height of the checkbox sprite. name ( str , default: None ) \u2013 The name of the checkbox sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.update update () -> None Update the checkbox sprite. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox Bases: Sprite An input box class. Attributes glitchygames.ui.InputBox.log class-attribute instance-attribute log = LOG glitchygames.ui.InputBox.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.InputBox.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.InputBox.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.InputBox.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.InputBox.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.InputBox.dt instance-attribute dt = 0 glitchygames.ui.InputBox.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.InputBox.name instance-attribute name = name glitchygames.ui.InputBox.proxies instance-attribute proxies = [ self ] glitchygames.ui.InputBox.callbacks instance-attribute callbacks = {} glitchygames.ui.InputBox.screen instance-attribute screen = get_surface () glitchygames.ui.InputBox.screen_width instance-attribute screen_width = get_width () glitchygames.ui.InputBox.screen_height instance-attribute screen_height = get_height () glitchygames.ui.InputBox.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.ui.InputBox.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames.ui.InputBox.offset_x instance-attribute offset_x = x if parent else 0 glitchygames.ui.InputBox.offset_y instance-attribute offset_y = y if parent else 0 glitchygames.ui.InputBox.rect instance-attribute rect = Rect ( x , y , width , height ) glitchygames.ui.InputBox.color instance-attribute color = color glitchygames.ui.InputBox.font instance-attribute font = SysFont ( 'Times' , 14 ) glitchygames.ui.InputBox.text instance-attribute text = text glitchygames.ui.InputBox.text_image instance-attribute text_image = render ( text , True , color ) glitchygames.ui.InputBox.active instance-attribute active = False glitchygames.ui.InputBox.image instance-attribute image = Surface (( width , height )) glitchygames.ui.InputBox.parent instance-attribute parent = parent glitchygames.ui.InputBox.cursor_rect instance-attribute cursor_rect = get_rect () glitchygames.ui.InputBox.cursor instance-attribute cursor = Rect ( topright , ( 3 , height )) glitchygames.ui.InputBox.dirty instance-attribute dirty = 2 Functions glitchygames.ui.InputBox.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.InputBox.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.InputBox.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.InputBox.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputBox.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputBox.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.InputBox.__init__ __init__ ( x : int , y : int , width : int , height : int , color : tuple = ( 233 , 248 , 215 ), text : str = \"\" , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize an InputBox. Parameters: x ( int ) \u2013 The x coordinate of the input box. y ( int ) \u2013 The y coordinate of the input box. width ( int ) \u2013 The width of the input box. height ( int ) \u2013 The height of the input box. color ( tuple , default: (233, 248, 215) ) \u2013 The color of the input box. text ( str , default: '' ) \u2013 The text to display in the input box. name ( str , default: None ) \u2013 The name of the input box. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.InputBox.activate activate () -> None Activate the input box. Returns: None \u2013 None glitchygames.ui.InputBox.deactivate deactivate () -> None Deactivate the input box. Returns: None \u2013 None glitchygames.ui.InputBox.on_input_box_submit_event on_input_box_submit_event ( event : Event ) -> None Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.update update () -> None Update the input box. Returns: None \u2013 None glitchygames.ui.InputBox.render render () -> None Render the input box. Returns: None \u2013 None glitchygames.ui.InputBox.on_mouse_up_event on_mouse_up_event ( event : Event ) -> None Handle mouse up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox.on_key_down_event on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite Bases: BitmappySprite A text box sprite class. Attributes glitchygames.ui.TextBoxSprite.rect instance-attribute rect = get_rect () glitchygames.ui.TextBoxSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.TextBoxSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.TextBoxSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.TextBoxSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.TextBoxSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.TextBoxSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.TextBoxSprite.dt instance-attribute dt = 0 glitchygames.ui.TextBoxSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.TextBoxSprite.name instance-attribute name = name glitchygames.ui.TextBoxSprite.parent instance-attribute parent = parent glitchygames.ui.TextBoxSprite.screen instance-attribute screen = get_surface () glitchygames.ui.TextBoxSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.TextBoxSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.TextBoxSprite.width instance-attribute width = width glitchygames.ui.TextBoxSprite.height instance-attribute height = height glitchygames.ui.TextBoxSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.TextBoxSprite.filename instance-attribute filename = filename glitchygames.ui.TextBoxSprite.focusable instance-attribute focusable = focusable glitchygames.ui.TextBoxSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.TextBoxSprite.value instance-attribute value = None glitchygames.ui.TextBoxSprite.background_color instance-attribute background_color = ( 0 , 0 , 0 ) glitchygames.ui.TextBoxSprite.border_width instance-attribute border_width = 1 glitchygames.ui.TextBoxSprite.callbacks instance-attribute callbacks = callbacks glitchygames.ui.TextBoxSprite.text_box instance-attribute text_box = TextSprite ( background_color = background_color , x = x , y = y , width = width - border_width , height = height - border_width , text = value , parent = self , groups = groups , ) glitchygames.ui.TextBoxSprite.x instance-attribute x = x glitchygames.ui.TextBoxSprite.y instance-attribute y = y glitchygames.ui.TextBoxSprite.proxies instance-attribute proxies = [ parent ] Functions glitchygames.ui.TextBoxSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.TextBoxSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.TextBoxSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.TextBoxSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.TextBoxSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.TextBoxSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , callbacks : Callable | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextBoxSprite. Parameters: x ( int ) \u2013 The x coordinate of the text box sprite. y ( int ) \u2013 The y coordinate of the text box sprite. width ( int ) \u2013 The width of the text box sprite. height ( int ) \u2013 The height of the text box sprite. name ( str , default: None ) \u2013 The name of the text box sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.update update () -> None Update the text box sprite. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite Bases: BitmappySprite A slider sprite class. Attributes glitchygames.ui.SliderSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.SliderSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.SliderSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.SliderSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.SliderSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.SliderSprite.dt instance-attribute dt = 0 glitchygames.ui.SliderSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.SliderSprite.name instance-attribute name = name glitchygames.ui.SliderSprite.parent instance-attribute parent = parent glitchygames.ui.SliderSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.SliderSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.SliderSprite.screen instance-attribute screen = get_surface () glitchygames.ui.SliderSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.SliderSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.SliderSprite.width instance-attribute width = width glitchygames.ui.SliderSprite.height instance-attribute height = height glitchygames.ui.SliderSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.SliderSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.SliderSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.SliderSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.SliderSprite.filename instance-attribute filename = filename glitchygames.ui.SliderSprite.focusable instance-attribute focusable = focusable glitchygames.ui.SliderSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.SliderSprite.text_sprite instance-attribute text_sprite = TextSprite ( x = 257 , y = y , width = 40 , height = 16 , name = str (( 0 , 0 , 0 )), parent = self , groups = groups ) glitchygames.ui.SliderSprite.slider_knob instance-attribute slider_knob = SliderKnobSprite ( x = x , y = y - 1 , width = height * 2 - 1 , height = height * 2 - 1 , name = name , parent = self , groups = groups , ) glitchygames.ui.SliderSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.SliderSprite.rect instance-attribute rect = get_rect () glitchygames.ui.SliderSprite.background instance-attribute background = Surface (( width , height )) glitchygames.ui.SliderSprite.value property writable value : int Get the value of the slider sprite. Returns: int ( int ) \u2013 The value of the slider sprite. glitchygames.ui.SliderSprite.x property writable x : int Get the x coordinate of the slider sprite. Returns: int ( int ) \u2013 The x coordinate of the slider sprite. glitchygames.ui.SliderSprite.y property writable y : int Get the y coordinate of the slider sprite. Returns: int ( int ) \u2013 The y coordinate of the slider sprite. Classes glitchygames.ui.SliderSprite.SliderKnobSprite Bases: BitmappySprite A slider knob sprite class. Attributes glitchygames.ui.SliderSprite.SliderKnobSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.SliderSprite.SliderKnobSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.SliderSprite.SliderKnobSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.dt instance-attribute dt = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.name instance-attribute name = name glitchygames.ui.SliderSprite.SliderKnobSprite.parent instance-attribute parent = parent glitchygames.ui.SliderSprite.SliderKnobSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.SliderSprite.SliderKnobSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.SliderSprite.SliderKnobSprite.screen instance-attribute screen = get_surface () glitchygames.ui.SliderSprite.SliderKnobSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.SliderSprite.SliderKnobSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.SliderSprite.SliderKnobSprite.width instance-attribute width = width glitchygames.ui.SliderSprite.SliderKnobSprite.height instance-attribute height = height glitchygames.ui.SliderSprite.SliderKnobSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.SliderSprite.SliderKnobSprite.filename instance-attribute filename = filename glitchygames.ui.SliderSprite.SliderKnobSprite.focusable instance-attribute focusable = focusable glitchygames.ui.SliderSprite.SliderKnobSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.SliderSprite.SliderKnobSprite.value instance-attribute value = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.rect instance-attribute rect = Rect ( x , y , width , height ) glitchygames.ui.SliderSprite.SliderKnobSprite.x instance-attribute x = x glitchygames.ui.SliderSprite.SliderKnobSprite.y instance-attribute y = y Functions glitchygames.ui.SliderSprite.SliderKnobSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.SliderSprite.SliderKnobSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.SliderSprite.SliderKnobSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.SliderSprite.SliderKnobSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.SliderSprite.SliderKnobSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a SliderKnobSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider knob sprite. y ( int ) \u2013 The y coordinate of the slider knob sprite. width ( int ) \u2013 The width of the slider knob sprite. height ( int ) \u2013 The height of the slider knob sprite. name ( str , default: None ) \u2013 The name of the slider knob sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None Functions glitchygames.ui.SliderSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.SliderSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.SliderSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.SliderSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.SliderSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.SliderSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.SliderSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.SliderSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a SliderSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider sprite. y ( int ) \u2013 The y coordinate of the slider sprite. width ( int ) \u2013 The width of the slider sprite. height ( int ) \u2013 The height of the slider sprite. name ( str , default: None ) \u2013 The name of the slider sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.SliderSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None glitchygames.ui.SliderSprite.update update () -> None Update the slider sprite. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite Bases: BitmappySprite A color well sprite class. Attributes glitchygames.ui.ColorWellSprite.rect instance-attribute rect = get_rect () glitchygames.ui.ColorWellSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.ColorWellSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.ColorWellSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.ColorWellSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.ColorWellSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.ColorWellSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.ColorWellSprite.dt instance-attribute dt = 0 glitchygames.ui.ColorWellSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.ColorWellSprite.name instance-attribute name = name glitchygames.ui.ColorWellSprite.parent instance-attribute parent = parent glitchygames.ui.ColorWellSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.ColorWellSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.ColorWellSprite.screen instance-attribute screen = get_surface () glitchygames.ui.ColorWellSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.ColorWellSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.ColorWellSprite.width instance-attribute width = width glitchygames.ui.ColorWellSprite.height instance-attribute height = height glitchygames.ui.ColorWellSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.ColorWellSprite.filename instance-attribute filename = filename glitchygames.ui.ColorWellSprite.focusable instance-attribute focusable = focusable glitchygames.ui.ColorWellSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.ColorWellSprite.red instance-attribute red = 0 glitchygames.ui.ColorWellSprite.green instance-attribute green = 0 glitchygames.ui.ColorWellSprite.blue instance-attribute blue = 0 glitchygames.ui.ColorWellSprite.text_sprite instance-attribute text_sprite = TextBoxSprite ( x = midleft [ 0 ] + width , y = centery - 10 , width = 100 , height = 20 , name = str ( active_color ), parent = self , groups = groups , ) glitchygames.ui.ColorWellSprite.active_color property writable active_color : tuple [ int , int , int ] Get the active color. Returns: tuple [ int , int , int ] \u2013 tuple[R: int, G: int, B: int]: The active color. glitchygames.ui.ColorWellSprite.hex_color property hex_color : str Get the hex color. Returns: str ( str ) \u2013 The hex color in #RRGGBB format. Functions glitchygames.ui.ColorWellSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.ColorWellSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.ColorWellSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.ColorWellSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.ColorWellSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.ColorWellSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a ColorWellSprite. Parameters: x ( int ) \u2013 The x coordinate of the color well sprite. y ( int ) \u2013 The y coordinate of the color well sprite. width ( int ) \u2013 The width of the color well sprite. height ( int ) \u2013 The height of the color well sprite. name ( str ) \u2013 The name of the color well sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None glitchygames.ui.ColorWellSprite.update update () -> None Update the color well sprite. Returns: None \u2013 None glitchygames.ui.InputDialog Bases: BitmappySprite An input dialog class. Attributes glitchygames.ui.InputDialog.rect instance-attribute rect = get_rect () glitchygames.ui.InputDialog.image instance-attribute image = Surface (( width , height )) glitchygames.ui.InputDialog.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.InputDialog.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.InputDialog.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.InputDialog.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.InputDialog.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.InputDialog.dt instance-attribute dt = 0 glitchygames.ui.InputDialog.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.InputDialog.name instance-attribute name = name glitchygames.ui.InputDialog.parent instance-attribute parent = parent glitchygames.ui.InputDialog.proxies instance-attribute proxies = [ parent ] glitchygames.ui.InputDialog.callbacks instance-attribute callbacks = {} glitchygames.ui.InputDialog.screen instance-attribute screen = get_surface () glitchygames.ui.InputDialog.screen_width instance-attribute screen_width = get_width () glitchygames.ui.InputDialog.screen_height instance-attribute screen_height = get_height () glitchygames.ui.InputDialog.height instance-attribute height = height glitchygames.ui.InputDialog.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.InputDialog.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.InputDialog.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.InputDialog.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.InputDialog.filename instance-attribute filename = filename glitchygames.ui.InputDialog.focusable instance-attribute focusable = focusable glitchygames.ui.InputDialog.log class-attribute instance-attribute log = LOG glitchygames.ui.InputDialog.background_color instance-attribute background_color = ( 0 , 0 , 0 ) glitchygames.ui.InputDialog.border_width instance-attribute border_width = 1 glitchygames.ui.InputDialog.width instance-attribute width = width glitchygames.ui.InputDialog.dialog_text_sprite instance-attribute dialog_text_sprite = TextBoxSprite ( name = dialog_text , x = x , y = y , width = width // 2 , height = 20 , parent = self , groups = groups ) glitchygames.ui.InputDialog.confirm_button instance-attribute confirm_button = ButtonSprite ( name = confirm_text , x = x , y = y , width = 75 , height = 20 , groups = groups ) glitchygames.ui.InputDialog.cancel_button instance-attribute cancel_button = ButtonSprite ( name = cancel_text , x = x , y = y , width = 75 , height = 20 , groups = groups ) glitchygames.ui.InputDialog.input_box instance-attribute input_box = InputBox ( x = x + width // 2 , y = y + height // 2 , width = 200 , height = 20 , text = \"\" , parent = self , groups = groups ) Functions glitchygames.ui.InputDialog.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.InputDialog.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.InputDialog.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.InputDialog.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputDialog.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputDialog.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.InputDialog.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.InputDialog.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.InputDialog.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.InputDialog.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.InputDialog.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.InputDialog.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , dialog_text : str = \"Would you like to do a thing?\" , confirm_text : str = \"Confirm\" , cancel_text : str = \"Cancel\" , callbacks : Callable | None = None , parent : object = None , groups : LayeredDirty | None = None , ) -> None Initialize an InputDialog. Parameters: x ( int ) \u2013 The x coordinate of the input dialog. y ( int ) \u2013 The y coordinate of the input dialog. width ( int ) \u2013 The width of the input dialog. height ( int ) \u2013 The height of the input dialog. name ( str , default: None ) \u2013 The name of the input dialog. dialog_text ( str , default: 'Would you like to do a thing?' ) \u2013 The text to display in the dialog. confirm_text ( str , default: 'Confirm' ) \u2013 The text to display on the confirm button. cancel_text ( str , default: 'Cancel' ) \u2013 The text to display on the cancel button. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.InputDialog.update_nested_sprites update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None glitchygames.ui.InputDialog.update update () -> None Update the input dialog. Returns: None \u2013 None glitchygames.ui.InputDialog.on_confirm_event on_confirm_event ( event : Event , trigger : object ) -> None Handle confirm events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_cancel_event on_cancel_event ( event : Event , trigger : object ) -> None Handle cancel events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_input_box_cancel_event on_input_box_cancel_event ( control : object ) -> None Handle input box cancel events. Parameters: control ( object ) \u2013 The control that triggered the event. Returns: None \u2013 None glitchygames.ui.InputDialog.on_input_box_submit_event on_input_box_submit_event ( event : Event ) -> None Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_key_up_event on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputDialog.on_key_down_event on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"ui"},{"location":"reference/glitchygames/ui/#glitchygames.ui","text":"GlitchyGames UI classes.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;ui"},{"location":"reference/glitchygames/ui/#glitchygames.ui-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BLACKLUCENT","text":"BLACKLUCENT = BLACKLUCENT","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;BLACKLUCENT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.WHITE","text":"WHITE = WHITE","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;WHITE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.LOG","text":"LOG = getLogger ( 'game.ui' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LOG"},{"location":"reference/glitchygames/ui/#glitchygames.ui-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine","text":"Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEngine"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.proxies","text":"proxies = [ EventProxy ( event_source = self )]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.game","text":"game : object = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;game"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.icon","text":"icon : Surface = load ( Path ( ASSET_PATH ) / 'glitch.png' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;icon"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.NAME","text":"NAME : Literal [ 'Boilerplate Adventures' ] = 'Boilerplate Adventures'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;NAME"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.VERSION","text":"VERSION : Literal [ '1.0' ] = '1.0'","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;VERSION"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.OPTIONS","text":"OPTIONS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.LAST_EVENT_MISS","text":"LAST_EVENT_MISS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;LAST_EVENT_MISS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.MISSING_EVENTS","text":"MISSING_EVENTS : ClassVar = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;MISSING_EVENTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.UNIMPLEMENTED_EVENTS","text":"UNIMPLEMENTED_EVENTS : ClassVar = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;UNIMPLEMENTED_EVENTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.USE_FASTEVENTS","text":"USE_FASTEVENTS : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_FASTEVENTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.EVENT_HANDLERS","text":"EVENT_HANDLERS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;EVENT_HANDLERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.fps","text":"fps : float = get ( 'fps' , 0.0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.update_type","text":"update_type = get ( 'update_type' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;update_type"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.use_gfxdraw","text":"use_gfxdraw = get ( 'use_gfxdraw' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;use_gfxdraw"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.windowed","text":"windowed = get ( 'windowed' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;windowed"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.desired_resolution","text":"desired_resolution : tuple [ int , int ] = suggested_resolution ( desired_width , desired_height )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;desired_resolution"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.fps_refresh_rate","text":"fps_refresh_rate = get ( 'fps_refresh_rate' )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;fps_refresh_rate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.pygame_version","text":"pygame_version = { 'major' : 0 , 'minor' : 0 , 'patch' : 0 }","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;pygame_version"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.scene_manager","text":"scene_manager : SceneManager = SceneManager ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;scene_manager"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.mode_flags","text":"mode_flags : int = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;mode_flags"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.screen_width","text":"screen_width : int Get the screen width. Returns: int ( int ) \u2013 The screen width.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.screen_height","text":"screen_height : int Get the screen height. Returns: int ( int ) \u2013 The screen height.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.EventProxy","text":"Proxy for events. Attributes glitchygames.ui.GameEngine.EventProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.GameEngine.EventProxy.proxies instance-attribute proxies = [] glitchygames.ui.GameEngine.EventProxy.event_source instance-attribute event_source = event_source Functions glitchygames.ui.GameEngine.EventProxy.__init__ __init__ ( event_source : object ) -> None Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames.ui.GameEngine.EventProxy.unhandled_event unhandled_event ( * args , ** kwargs ) -> None Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames.ui.GameEngine.EventProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventProxy"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.__init__","text":"__init__ ( game : object , icon : Surface | Path | str = None ) -> None Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.initialize_display","text":"initialize_display () -> None Initialize the display. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_display"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.initialize_event_handlers","text":"initialize_event_handlers () -> None Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_event_handlers"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.initialize_input_event_handlers","text":"initialize_input_event_handlers () -> None Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_input_event_handlers"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.__del__","text":"__del__ () -> None Delete the game engine. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__del__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.print_system_info","text":"print_system_info () -> None Print system information. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;print_system_info"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.print_game_info","text":"print_game_info () -> None Print game information. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;print_game_info"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.suggested_resolution","text":"suggested_resolution ( desired_width : int = 0 , desired_height : int = 0 ) -> tuple [ int , int ] Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;suggested_resolution"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.set_cursor","text":"set_cursor ( cursor : list [ str ], cursor_black : str = \".\" , cursor_white : str = \"X\" , cursor_xor : str = \"o\" ) -> list [ str ] Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;set_cursor"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.initialize_system_icons","text":"initialize_system_icons () -> None Initialize system icons. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;initialize_system_icons"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.start","text":"start () -> None Start the game engine. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;start"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.quit_game","text":"quit_game () -> None Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;quit_game"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_events","text":"process_events () -> bool Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_events"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_audio_event","text":"process_audio_event ( event : Event ) -> bool Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_audio_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_controller_event","text":"process_controller_event ( event : Event ) -> bool Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_controller_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_drop_event","text":"process_drop_event ( event : Event ) -> bool Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_touch_event","text":"process_touch_event ( event : Event ) -> bool Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_touch_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_midi_event","text":"process_midi_event ( event : Event ) -> bool Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_midi_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_mouse_event","text":"process_mouse_event ( event : Event ) -> bool Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_mouse_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_keyboard_event","text":"process_keyboard_event ( event : Event ) -> bool Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_keyboard_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_joystick_event","text":"process_joystick_event ( event : Event ) -> bool Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_joystick_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_text_event","text":"process_text_event ( event : Event ) -> None Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_text_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_window_focus_event","text":"process_window_focus_event ( event : Event ) -> bool Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_window_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_window_event","text":"process_window_event ( event : Event ) -> None Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_window_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_game_event","text":"process_game_event ( event : Event ) -> None Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_game_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.process_unimplemented_event","text":"process_unimplemented_event ( event : Event ) -> None Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;process_unimplemented_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.post_game_event","text":"post_game_event ( event_subtype : EventType , event_data : dict ) -> None Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;post_game_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.suppress_event","text":"suppress_event ( * args , attr : str , ** kwargs ) -> None Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;suppress_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.register_game_event","text":"register_game_event ( event_type : EventType , callback : Callable ) -> None Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;register_game_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.missing_event","text":"missing_event ( * args , ** kwargs ) -> None Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;missing_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.GameEngine.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer","text":"Mouse pointer sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MousePointer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.pos","text":"pos = pos","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;pos"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.size","text":"size = size","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;size"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.rect","text":"rect = Rect ( pos , size )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.x","text":"x : int Get the x coordinate of the mouse pointer. Returns: int \u2013 int","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.y","text":"y : int Get the y coordinate of the mouse pointer. Returns: int \u2013 int","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MousePointer.__init__","text":"__init__ ( pos : tuple , size : tuple = ( 1 , 1 )) -> None Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager","text":"Bases: ResourceManager A font manager.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontManager"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.log","text":"log : Logger = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.__instances__","text":"__instances__ : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instances__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.proxies","text":"proxies = []","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.OPTIONS","text":"OPTIONS : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;OPTIONS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.RENDER_CACHE","text":"RENDER_CACHE : ClassVar = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;RENDER_CACHE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.FontProxy","text":"Bases: FontEvents , ResourceManager A font proxy. Attributes glitchygames.ui.FontManager.FontProxy.log class-attribute instance-attribute log : Logger = LOG glitchygames.ui.FontManager.FontProxy.__instances__ class-attribute instance-attribute __instances__ : ClassVar = {} glitchygames.ui.FontManager.FontProxy.game instance-attribute game = game glitchygames.ui.FontManager.FontProxy.proxies instance-attribute proxies = [ game , freetype ] Functions glitchygames.ui.FontManager.FontProxy.__new__ __new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames.ui.FontManager.FontProxy.__getattr__ __getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.ui.FontManager.FontProxy.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.FontManager.FontProxy.on_font_changed_event abstractmethod on_font_changed_event ( event : Event ) -> None Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.FontManager.FontProxy.__init__ __init__ ( game : object = None ) -> None Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontProxy"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.__new__","text":"__new__ ( * args , ** kwargs ) -> object Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.__getattr__","text":"__getattr__ ( attr : str ) -> Callable Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__getattr__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.__init__","text":"__init__ ( game : object = None ) -> None Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.args","text":"args ( parser : ArgumentParser ) -> ArgumentParser Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;args"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FontManager.font","text":"font ( font_config : dict | None = None ) -> Font | SysFont Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;font"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite","text":"Bases: Sprite A sprite that loads from a Bitmappy config file.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;BitmappySprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , filename : str | None = None , focusable : bool = False , parent : object = None , groups : LayeredDirty | None = None , ) -> None Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.BitmappySprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite","text":"Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FocusableSingletonBitmappySprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.__instance__","text":"__instance__ = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instance__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.__new__","text":"__new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.FocusableSingletonBitmappySprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite","text":"Bases: RootSprite A convenience class for handling all of the common sprite behaviors.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Sprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.proxies","text":"proxies = [ self ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.width","text":"width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.height","text":"height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.Sprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar","text":"Bases: FocusableSingletonBitmappySprite A menu bar class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MenuBar"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.__instance__","text":"__instance__ = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__instance__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.all_sprites","text":"all_sprites = groups","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.background_color","text":"background_color = ( 0 , 255 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.border_width","text":"border_width = 2","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.menu_items","text":"menu_items = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_items"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.menu_offset_x","text":"menu_offset_x = border_width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_offset_x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.menu_offset_y","text":"menu_offset_y = border_width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_offset_y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.has_focus","text":"has_focus = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;has_focus"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.dirty","text":"dirty = 2","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dirty"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.__new__","text":"__new__ ( * args , ** kwargs ) -> Self Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__new__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a MenuBar. Parameters: x ( int ) \u2013 The x coordinate of the menu bar. y ( int ) \u2013 The y coordinate of the menu bar. width ( int ) \u2013 The width of the menu bar. height ( int ) \u2013 The height of the menu bar. name ( str | None , default: None ) \u2013 The name of the menu bar. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.add_menu","text":"add_menu ( menu : MenuItem ) -> None Add a menu to the menu bar. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add_menu"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.add_menu_item","text":"add_menu_item ( menu_item : MenuItem , menu : MenuBar | None = None ) -> None Add a menu item to the menu bar. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar | None , default: None ) \u2013 The menu to add the menu item to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add_menu_item"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.update","text":"update () -> None Update the menu bar. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuBar.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem","text":"Bases: BitmappySprite A menu item class. This class represents a menu item. It can be a root level menu item or a sub menu item. Parameters: BitmappySprite ( BitmappySprite ) \u2013 The base sprite class. Returns: \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MenuItem"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.all_sprites","text":"all_sprites = groups","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;all_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.background_color","text":"background_color = ( 255 , 0 , 255 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.border_width","text":"border_width = 2","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_items","text":"menu_items = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_items"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_offset_x","text":"menu_offset_x = border_width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_offset_x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_offset_y","text":"menu_offset_y = border_width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_offset_y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_image","text":"menu_image = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_rect","text":"menu_rect = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.active","text":"active = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.text","text":"text = TextSprite ( background_color = background_color , text_color = ( 0 , 0 , 0 ), x = x , y = y , width = width , height = height , text = name , parent = parent , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_up_image","text":"menu_up_image = image","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_up_image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_up_rect","text":"menu_up_rect = rect","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_up_rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_down_image","text":"menu_down_image = menu_up_image","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_down_image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.menu_down_rect","text":"menu_down_rect = menu_up_rect","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;menu_down_rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.__init__","text":"__init__ ( x : int = 0 , y : int = 0 , width : int = 1 , height : int = 1 , name : str | None = None , filename : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a MenuItem. Parameters: x ( int , default: 0 ) \u2013 The x coordinate of the menu item. y ( int , default: 0 ) \u2013 The y coordinate of the menu item. width ( int , default: 1 ) \u2013 The width of the menu item. height ( int , default: 1 ) \u2013 The height of the menu item. name ( str | None , default: None ) \u2013 The name of the menu item. filename ( str | None , default: None ) \u2013 The filename of the menu item. parent ( object | None , default: None ) \u2013 The parent of the menu item. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.add","text":"add ( * groups : LayeredDirty ) -> None Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.add_menu","text":"add_menu ( menu : MenuItem ) -> None Add a menu to the menu item. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add_menu"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.add_menu_item","text":"add_menu_item ( menu_item : MenuItem , menu : MenuBar ) -> None Add a menu item to the menu item. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar ) \u2013 The menu to add the menu item to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add_menu_item"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.update","text":"update () -> None Update the menu item. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event ) -> None Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event ) -> None Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event ) -> None Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event ) -> None Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event ) -> None Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event ) -> None Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event ) -> None Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.MenuItem.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event ) -> None Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite","text":"Bases: BitmappySprite A text sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.background_color","text":"background_color = ( 255 , 0 , 255 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.active_color","text":"active_color = background_color","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.click_color","text":"click_color = ( 0 , 255 , 128 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;click_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.hover_color","text":"hover_color = ( 255 , 255 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;hover_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.text","text":"text = text","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.font_manager","text":"font_manager = FontManager ( GameEngine )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;font_manager"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.alpha","text":"alpha = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;alpha"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.text_box","text":"text_box = TextBox ( font = font (), x = x , y = x , text = text , text_color = text_color , parent = self , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text_box"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.x","text":"x : int Get the x coordinate of the text sprite. Returns: int ( int ) \u2013 The x coordinate of the text sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.y","text":"y : int Get the y coordinate of the text sprite. Returns: int ( int ) \u2013 The y coordinate of the text sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.TextBox","text":"Bases: Sprite A text box class. Attributes glitchygames.ui.TextSprite.TextBox.rect instance-attribute rect = get_rect () glitchygames.ui.TextSprite.TextBox.image instance-attribute image = Surface (( width , height )) glitchygames.ui.TextSprite.TextBox.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.TextSprite.TextBox.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.TextSprite.TextBox.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.TextSprite.TextBox.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.TextSprite.TextBox.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.TextSprite.TextBox.dt instance-attribute dt = 0 glitchygames.ui.TextSprite.TextBox.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.TextSprite.TextBox.callbacks instance-attribute callbacks = {} glitchygames.ui.TextSprite.TextBox.screen instance-attribute screen = get_surface () glitchygames.ui.TextSprite.TextBox.screen_width instance-attribute screen_width = get_width () glitchygames.ui.TextSprite.TextBox.screen_height instance-attribute screen_height = get_height () glitchygames.ui.TextSprite.TextBox.width property writable width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames.ui.TextSprite.TextBox.height property writable height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames.ui.TextSprite.TextBox.log class-attribute instance-attribute log = LOG glitchygames.ui.TextSprite.TextBox.start_x instance-attribute start_x = x glitchygames.ui.TextSprite.TextBox.start_y instance-attribute start_y = y glitchygames.ui.TextSprite.TextBox.line_height instance-attribute line_height = line_height glitchygames.ui.TextSprite.TextBox.text_color instance-attribute text_color = text_color glitchygames.ui.TextSprite.TextBox.text_hover_color instance-attribute text_hover_color = ( 255 , 255 , 255 ) glitchygames.ui.TextSprite.TextBox.text_click_color instance-attribute text_click_color = ( 63 , 127 , 255 ) glitchygames.ui.TextSprite.TextBox.background_color instance-attribute background_color = ( 255 , 0 , 255 ) glitchygames.ui.TextSprite.TextBox.background_hover_color instance-attribute background_hover_color = ( 0 , 255 , 128 ) glitchygames.ui.TextSprite.TextBox.background_click_color instance-attribute background_click_color = ( 255 , 127 , 63 ) glitchygames.ui.TextSprite.TextBox.active_text_color instance-attribute active_text_color = text_color glitchygames.ui.TextSprite.TextBox.active_background_color instance-attribute active_background_color = background_color glitchygames.ui.TextSprite.TextBox.font instance-attribute font = font glitchygames.ui.TextSprite.TextBox.name instance-attribute name = text glitchygames.ui.TextSprite.TextBox.parent instance-attribute parent = parent glitchygames.ui.TextSprite.TextBox.proxies instance-attribute proxies = [ parent ] glitchygames.ui.TextSprite.TextBox.x property writable x : int Get the x coordinate of the text box. Returns: int ( int ) \u2013 The x coordinate of the text box. glitchygames.ui.TextSprite.TextBox.y property writable y : int Get the y coordinate of the text box. Returns: int ( int ) \u2013 The y coordinate of the text box. Functions glitchygames.ui.TextSprite.TextBox.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.TextSprite.TextBox.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.TextSprite.TextBox.__init__ __init__ ( font : str , x : int , y : int , line_height : int = 15 , text : str = \"Text\" , text_color : tuple = WHITE , parent : object = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextBox. Parameters: font ( str ) \u2013 The font to use. x ( int ) \u2013 The x coordinate of the text box. y ( int ) \u2013 The y coordinate of the text box. line_height ( int , default: 15 ) \u2013 The line height of the text box. text ( str , default: 'Text' ) \u2013 The text to display in the text box. text_color ( tuple , default: WHITE ) \u2013 The color of the text. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.print_text print_text ( surface : Surface , string : str ) -> None Print text to the text box. Parameters: surface ( Surface ) \u2013 The surface to print the text to. string ( str ) \u2013 The text to print. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.reset reset () -> None Reset the text box. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.indent indent () -> None Indent the text box. Returns: None \u2013 None glitchygames.ui.TextSprite.TextBox.unindent unindent () -> None Unindent the text box. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextBox"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , background_color : tuple = BLACKLUCENT , text_color : tuple = WHITE , alpha : int = 0 , text : str = \"Text\" , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextSprite. Parameters: x ( int ) \u2013 The x coordinate of the text sprite. y ( int ) \u2013 The y coordinate of the text sprite. width ( int ) \u2013 The width of the text sprite. height ( int ) \u2013 The height of the text sprite. name ( str , default: None ) \u2013 The name of the text sprite. background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text sprite. text_color ( tuple , default: WHITE ) \u2013 The color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text sprite. text ( str , default: 'Text' ) \u2013 The text to display in the text sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.update","text":"update () -> None Update the text sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.add","text":"add ( * groups : LayeredDirty ) -> None Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;add"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , focus : object ) -> None Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. focus ( object ) \u2013 The object that has focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite","text":"Bases: BitmappySprite A button sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ButtonSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.border_color","text":"border_color = ( 255 , 255 , 255 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.active_color","text":"active_color = ( 128 , 128 , 128 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.inactive_color","text":"inactive_color = ( 0 , 0 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;inactive_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.background_color","text":"background_color = inactive_color","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.text","text":"text = TextSprite ( background_color = background_color , x = centerx if parent else x , y = centery if parent else y , width = width , height = height , text = name , parent = self , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.x","text":"x : int Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.y","text":"y : int Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.update","text":"update () -> None Update the sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a ButtonSprite. Parameters: x ( int ) \u2013 The x coordinate of the button sprite. y ( int ) \u2013 The y coordinate of the button sprite. width ( int ) \u2013 The width of the button sprite. height ( int ) \u2013 The height of the button sprite. name ( str , default: None ) \u2013 The name of the button sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ButtonSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite","text":"Bases: ButtonSprite A checkbox sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;CheckboxSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.border_color","text":"border_color = ( 255 , 255 , 255 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.active_color","text":"active_color = ( 128 , 128 , 128 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.inactive_color","text":"inactive_color = ( 0 , 0 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;inactive_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.background_color","text":"background_color = inactive_color","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.text","text":"text = TextSprite ( background_color = background_color , x = centerx if parent else x , y = centery if parent else y , width = width , height = height , text = name , parent = self , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.x","text":"x : int Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.y","text":"y : int Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.checked","text":"checked = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;checked"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.color","text":"color = ( 128 , 128 , 128 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , callbacks : Callable | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a CheckboxSprite. Parameters: x ( int ) \u2013 The x coordinate of the checkbox sprite. y ( int ) \u2013 The y coordinate of the checkbox sprite. width ( int ) \u2013 The width of the checkbox sprite. height ( int ) \u2013 The height of the checkbox sprite. name ( str , default: None ) \u2013 The name of the checkbox sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.update","text":"update () -> None Update the checkbox sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.CheckboxSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox","text":"Bases: Sprite An input box class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;InputBox"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.proxies","text":"proxies = [ self ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.width","text":"width : int Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.height","text":"height : int Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.offset_x","text":"offset_x = x if parent else 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;offset_x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.offset_y","text":"offset_y = y if parent else 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;offset_y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.rect","text":"rect = Rect ( x , y , width , height )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.color","text":"color = color","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.font","text":"font = SysFont ( 'Times' , 14 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;font"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.text","text":"text = text","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.text_image","text":"text_image = render ( text , True , color )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text_image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.active","text":"active = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.cursor_rect","text":"cursor_rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;cursor_rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.cursor","text":"cursor = Rect ( topright , ( 3 , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;cursor"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.dirty","text":"dirty = 2","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dirty"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , color : tuple = ( 233 , 248 , 215 ), text : str = \"\" , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize an InputBox. Parameters: x ( int ) \u2013 The x coordinate of the input box. y ( int ) \u2013 The y coordinate of the input box. width ( int ) \u2013 The width of the input box. height ( int ) \u2013 The height of the input box. color ( tuple , default: (233, 248, 215) ) \u2013 The color of the input box. text ( str , default: '' ) \u2013 The text to display in the input box. name ( str , default: None ) \u2013 The name of the input box. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.activate","text":"activate () -> None Activate the input box. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;activate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.deactivate","text":"deactivate () -> None Deactivate the input box. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deactivate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_input_box_submit_event","text":"on_input_box_submit_event ( event : Event ) -> None Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_input_box_submit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.update","text":"update () -> None Update the input box. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.render","text":"render () -> None Render the input box. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;render"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_mouse_up_event","text":"on_mouse_up_event ( event : Event ) -> None Handle mouse up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputBox.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite","text":"Bases: BitmappySprite A text box sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextBoxSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.value","text":"value = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;value"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.background_color","text":"background_color = ( 0 , 0 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.border_width","text":"border_width = 1","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.callbacks","text":"callbacks = callbacks","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.text_box","text":"text_box = TextSprite ( background_color = background_color , x = x , y = y , width = width - border_width , height = height - border_width , text = value , parent = self , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text_box"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.x","text":"x = x","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.y","text":"y = y","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , callbacks : Callable | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a TextBoxSprite. Parameters: x ( int ) \u2013 The x coordinate of the text box sprite. y ( int ) \u2013 The y coordinate of the text box sprite. width ( int ) \u2013 The width of the text box sprite. height ( int ) \u2013 The height of the text box sprite. name ( str , default: None ) \u2013 The name of the text box sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.update","text":"update () -> None Update the text box sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.TextBoxSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite","text":"Bases: BitmappySprite A slider sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SliderSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.text_sprite","text":"text_sprite = TextSprite ( x = 257 , y = y , width = 40 , height = 16 , name = str (( 0 , 0 , 0 )), parent = self , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text_sprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.slider_knob","text":"slider_knob = SliderKnobSprite ( x = x , y = y - 1 , width = height * 2 - 1 , height = height * 2 - 1 , name = name , parent = self , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;slider_knob"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.background","text":"background = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.value","text":"value : int Get the value of the slider sprite. Returns: int ( int ) \u2013 The value of the slider sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;value"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.x","text":"x : int Get the x coordinate of the slider sprite. Returns: int ( int ) \u2013 The x coordinate of the slider sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;x"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.y","text":"y : int Get the y coordinate of the slider sprite. Returns: int ( int ) \u2013 The y coordinate of the slider sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;y"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite-classes","text":"","title":"Classes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.SliderKnobSprite","text":"Bases: BitmappySprite A slider knob sprite class. Attributes glitchygames.ui.SliderSprite.SliderKnobSprite.image instance-attribute image = Surface (( width , height )) glitchygames.ui.SliderSprite.SliderKnobSprite.USE_GFXDRAW class-attribute instance-attribute USE_GFXDRAW : ClassVar = False glitchygames.ui.SliderSprite.SliderKnobSprite.PROXIES class-attribute instance-attribute PROXIES : ClassVar = [ sprite ] glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_BREAKPOINTS class-attribute instance-attribute SPRITE_BREAKPOINTS : ClassVar = None glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_COUNTERS class-attribute instance-attribute SPRITE_COUNTERS : ClassVar = OrderedDict () glitchygames.ui.SliderSprite.SliderKnobSprite.SPRITE_COUNT class-attribute instance-attribute SPRITE_COUNT = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.dt instance-attribute dt = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.dt_timer instance-attribute dt_timer = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.name instance-attribute name = name glitchygames.ui.SliderSprite.SliderKnobSprite.parent instance-attribute parent = parent glitchygames.ui.SliderSprite.SliderKnobSprite.proxies instance-attribute proxies = [ parent ] glitchygames.ui.SliderSprite.SliderKnobSprite.callbacks instance-attribute callbacks = {} glitchygames.ui.SliderSprite.SliderKnobSprite.screen instance-attribute screen = get_surface () glitchygames.ui.SliderSprite.SliderKnobSprite.screen_width instance-attribute screen_width = get_width () glitchygames.ui.SliderSprite.SliderKnobSprite.screen_height instance-attribute screen_height = get_height () glitchygames.ui.SliderSprite.SliderKnobSprite.width instance-attribute width = width glitchygames.ui.SliderSprite.SliderKnobSprite.height instance-attribute height = height glitchygames.ui.SliderSprite.SliderKnobSprite.DEBUG class-attribute instance-attribute DEBUG = False glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE_W class-attribute instance-attribute DEFAULT_SURFACE_W = 42 glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE_H class-attribute instance-attribute DEFAULT_SURFACE_H = 42 glitchygames.ui.SliderSprite.SliderKnobSprite.DEFAULT_SURFACE class-attribute instance-attribute DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H )) glitchygames.ui.SliderSprite.SliderKnobSprite.filename instance-attribute filename = filename glitchygames.ui.SliderSprite.SliderKnobSprite.focusable instance-attribute focusable = focusable glitchygames.ui.SliderSprite.SliderKnobSprite.log class-attribute instance-attribute log = LOG glitchygames.ui.SliderSprite.SliderKnobSprite.value instance-attribute value = 0 glitchygames.ui.SliderSprite.SliderKnobSprite.rect instance-attribute rect = Rect ( x , y , width , height ) glitchygames.ui.SliderSprite.SliderKnobSprite.x instance-attribute x = x glitchygames.ui.SliderSprite.SliderKnobSprite.y instance-attribute y = y Functions glitchygames.ui.SliderSprite.SliderKnobSprite.__subclasshook__ classmethod __subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface. glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_motion_event on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_event on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drop_event on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drop_event on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_event on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drop_event on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_event on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drop_event on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_focus_event on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_unfocus_event on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_button_up_event on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_button_up_event on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_button_up_event on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_button_up_event on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_button_down_event on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_button_down_event on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_button_down_event on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_scroll_down_event on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_scroll_up_event on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_wheel_event on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.break_when classmethod break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.dt_tick dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.update update () -> None Update the sprite. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_axis_motion_event on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_button_down_event on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_button_up_event on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_hat_motion_event on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_joy_ball_motion_event on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_enter_event on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_exit_event on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_down_event on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_down_event on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_up_event on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_down_event on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_middle_mouse_drag_up_event on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_down_event on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_right_mouse_drag_up_event on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_drag_up_event on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_chord_up_event on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_mouse_chord_down_event on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_down_event on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_up_event on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_chord_down_event on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_key_chord_up_event on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_quit_event on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_active_event on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_video_resize_event on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_video_expose_event on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_sys_wm_event on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_user_event on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.__str__ __str__ () -> str Returns a string representation of the sprite. glitchygames.ui.SliderSprite.SliderKnobSprite.load load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames.ui.SliderSprite.SliderKnobSprite.inflate classmethod inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames.ui.SliderSprite.SliderKnobSprite.save save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.deflate deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames.ui.SliderSprite.SliderKnobSprite.__init__ __init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a SliderKnobSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider knob sprite. y ( int ) \u2013 The y coordinate of the slider knob sprite. width ( int ) \u2013 The width of the slider knob sprite. height ( int ) \u2013 The height of the slider knob sprite. name ( str , default: None ) \u2013 The name of the slider knob sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_button_down_event on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite.SliderKnobSprite.on_left_mouse_drag_event on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SliderKnobSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a SliderSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider sprite. y ( int ) \u2013 The y coordinate of the slider sprite. width ( int ) \u2013 The width of the slider sprite. height ( int ) \u2013 The height of the slider sprite. name ( str , default: None ) \u2013 The name of the slider sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.update","text":"update () -> None Update the slider sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.SliderSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object ) -> None Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite","text":"Bases: BitmappySprite A color well sprite class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ColorWellSprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.red","text":"red = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;red"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.green","text":"green = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;green"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.blue","text":"blue = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;blue"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.text_sprite","text":"text_sprite = TextBoxSprite ( x = midleft [ 0 ] + width , y = centery - 10 , width = 100 , height = 20 , name = str ( active_color ), parent = self , groups = groups , )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;text_sprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.active_color","text":"active_color : tuple [ int , int , int ] Get the active color. Returns: tuple [ int , int , int ] \u2013 tuple[R: int, G: int, B: int]: The active color.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;active_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.hex_color","text":"hex_color : str Get the hex color. Returns: str ( str ) \u2013 The hex color in #RRGGBB format.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;hex_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str , parent : object | None = None , groups : LayeredDirty | None = None , ) -> None Initialize a ColorWellSprite. Parameters: x ( int ) \u2013 The x coordinate of the color well sprite. y ( int ) \u2013 The y coordinate of the color well sprite. width ( int ) \u2013 The width of the color well sprite. height ( int ) \u2013 The height of the color well sprite. name ( str ) \u2013 The name of the color well sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.ColorWellSprite.update","text":"update () -> None Update the color well sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog","text":"Bases: BitmappySprite An input dialog class.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;InputDialog"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog-attributes","text":"","title":"Attributes"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.rect","text":"rect = get_rect ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;rect"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.image","text":"image = Surface (( width , height ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;image"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.USE_GFXDRAW","text":"USE_GFXDRAW : ClassVar = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;USE_GFXDRAW"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.PROXIES","text":"PROXIES : ClassVar = [ sprite ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;PROXIES"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.SPRITE_BREAKPOINTS","text":"SPRITE_BREAKPOINTS : ClassVar = None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_BREAKPOINTS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.SPRITE_COUNTERS","text":"SPRITE_COUNTERS : ClassVar = OrderedDict ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNTERS"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.SPRITE_COUNT","text":"SPRITE_COUNT = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;SPRITE_COUNT"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.dt","text":"dt = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.dt_timer","text":"dt_timer = 0","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dt_timer"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.name","text":"name = name","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;name"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.parent","text":"parent = parent","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;parent"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.proxies","text":"proxies = [ parent ]","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;proxies"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.callbacks","text":"callbacks = {}","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;callbacks"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.screen","text":"screen = get_surface ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.screen_width","text":"screen_width = get_width ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.screen_height","text":"screen_height = get_height ()","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;screen_height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.height","text":"height = height","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;height"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.DEBUG","text":"DEBUG = False","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEBUG"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.DEFAULT_SURFACE_W","text":"DEFAULT_SURFACE_W = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_W"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.DEFAULT_SURFACE_H","text":"DEFAULT_SURFACE_H = 42","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE_H"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.DEFAULT_SURFACE","text":"DEFAULT_SURFACE = Surface (( DEFAULT_SURFACE_W , DEFAULT_SURFACE_H ))","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;DEFAULT_SURFACE"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.filename","text":"filename = filename","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;filename"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.focusable","text":"focusable = focusable","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;focusable"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.log","text":"log = LOG","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;log"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.background_color","text":"background_color = ( 0 , 0 , 0 )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;background_color"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.border_width","text":"border_width = 1","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;border_width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.width","text":"width = width","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;width"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.dialog_text_sprite","text":"dialog_text_sprite = TextBoxSprite ( name = dialog_text , x = x , y = y , width = width // 2 , height = 20 , parent = self , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;dialog_text_sprite"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.confirm_button","text":"confirm_button = ButtonSprite ( name = confirm_text , x = x , y = y , width = 75 , height = 20 , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;confirm_button"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.cancel_button","text":"cancel_button = ButtonSprite ( name = cancel_text , x = x , y = y , width = 75 , height = 20 , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;cancel_button"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.input_box","text":"input_box = InputBox ( x = x + width // 2 , y = y + height // 2 , width = 200 , height = 20 , text = \"\" , parent = self , groups = groups )","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;input_box"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog-functions","text":"","title":"Functions"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.__subclasshook__","text":"__subclasshook__ ( subclass : object ) -> bool Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__subclasshook__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_motion_event","text":"on_mouse_motion_event ( event : Event ) -> None Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_drag_event","text":"on_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_drop_event","text":"on_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_drag_event","text":"on_left_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_drop_event","text":"on_left_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_drag_event","text":"on_middle_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_drop_event","text":"on_middle_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_drag_event","text":"on_right_mouse_drag_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_drop_event","text":"on_right_mouse_drop_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drop_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_focus_event","text":"on_mouse_focus_event ( event : Event , old_focus : object ) -> None Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_focus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_unfocus_event","text":"on_mouse_unfocus_event ( event : Event ) -> None Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_unfocus_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_button_up_event","text":"on_left_mouse_button_up_event ( event : Event ) -> None Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_button_up_event","text":"on_middle_mouse_button_up_event ( event : Event ) -> None Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_button_up_event","text":"on_right_mouse_button_up_event ( event : Event ) -> None Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_button_down_event","text":"on_mouse_button_down_event ( event : Event ) -> None Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_button_down_event","text":"on_left_mouse_button_down_event ( event : Event ) -> None Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_button_down_event","text":"on_middle_mouse_button_down_event ( event : Event ) -> None Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_button_down_event","text":"on_right_mouse_button_down_event ( event : Event ) -> None Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_scroll_down_event","text":"on_mouse_scroll_down_event ( event : Event ) -> None Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_scroll_up_event","text":"on_mouse_scroll_up_event ( event : Event ) -> None Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_scroll_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_wheel_event","text":"on_mouse_wheel_event ( event : Event , trigger : object | None ) -> None Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_wheel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.break_when","text":"break_when ( sprite_type : object | None = None ) -> None Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;break_when"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.dt_tick","text":"dt_tick ( dt : float ) -> None Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;dt_tick"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_joy_axis_motion_event","text":"on_joy_axis_motion_event ( event : Event ) -> None Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_axis_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_joy_button_down_event","text":"on_joy_button_down_event ( event : Event ) -> None Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_joy_button_up_event","text":"on_joy_button_up_event ( event : Event ) -> None Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_joy_hat_motion_event","text":"on_joy_hat_motion_event ( event : Event ) -> None Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_hat_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_joy_ball_motion_event","text":"on_joy_ball_motion_event ( event : Event ) -> None Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_joy_ball_motion_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_enter_event","text":"on_mouse_enter_event ( event : Event ) -> None Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_enter_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_exit_event","text":"on_mouse_exit_event ( event : Event ) -> None Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_exit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_drag_down_event","text":"on_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_drag_down_event","text":"on_left_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_left_mouse_drag_up_event","text":"on_left_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_left_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_drag_down_event","text":"on_middle_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_middle_mouse_drag_up_event","text":"on_middle_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_middle_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_drag_down_event","text":"on_right_mouse_drag_down_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_right_mouse_drag_up_event","text":"on_right_mouse_drag_up_event ( event : Event , trigger : object | None ) -> None Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_right_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_drag_up_event","text":"on_mouse_drag_up_event ( event : Event ) -> None Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_drag_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_chord_up_event","text":"on_mouse_chord_up_event ( event : Event , keys : list ) -> None Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_chord_down_event","text":"on_mouse_chord_down_event ( event : Event , keys : list ) -> None Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_key_chord_down_event","text":"on_key_chord_down_event ( event : Event , keys : list ) -> None Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_down_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_key_chord_up_event","text":"on_key_chord_up_event ( event : Event , keys : list ) -> None Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_chord_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_quit_event","text":"on_quit_event ( event : Event ) -> None Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_quit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_active_event","text":"on_active_event ( event : Event ) -> None Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_active_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_video_resize_event","text":"on_video_resize_event ( event : Event ) -> None Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_resize_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_video_expose_event","text":"on_video_expose_event ( event : Event ) -> None Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_video_expose_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_sys_wm_event","text":"on_sys_wm_event ( event : Event ) -> None Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_sys_wm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_user_event","text":"on_user_event ( event : Event ) -> None Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_user_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.__str__","text":"__str__ () -> str Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__str__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.load","text":"load ( filename : str ) -> tuple [ Surface , Rect , str ] Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;load"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.inflate","text":"inflate ( width : int , height : int , pixels : list , color_map : dict ) -> tuple [ Surface , Rect ] Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;inflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.save","text":"save ( filename : str ) -> None Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;save"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.deflate","text":"deflate () -> dict Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;deflate"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.__init__","text":"__init__ ( x : int , y : int , width : int , height : int , name : str | None = None , dialog_text : str = \"Would you like to do a thing?\" , confirm_text : str = \"Confirm\" , cancel_text : str = \"Cancel\" , callbacks : Callable | None = None , parent : object = None , groups : LayeredDirty | None = None , ) -> None Initialize an InputDialog. Parameters: x ( int ) \u2013 The x coordinate of the input dialog. y ( int ) \u2013 The y coordinate of the input dialog. width ( int ) \u2013 The width of the input dialog. height ( int ) \u2013 The height of the input dialog. name ( str , default: None ) \u2013 The name of the input dialog. dialog_text ( str , default: 'Would you like to do a thing?' ) \u2013 The text to display in the dialog. confirm_text ( str , default: 'Confirm' ) \u2013 The text to display on the confirm button. cancel_text ( str , default: 'Cancel' ) \u2013 The text to display on the cancel button. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;__init__"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.update_nested_sprites","text":"update_nested_sprites () -> None Update the nested sprites. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update_nested_sprites"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.update","text":"update () -> None Update the input dialog. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;update"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_confirm_event","text":"on_confirm_event ( event : Event , trigger : object ) -> None Handle confirm events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_confirm_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_cancel_event","text":"on_cancel_event ( event : Event , trigger : object ) -> None Handle cancel events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_cancel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_input_box_cancel_event","text":"on_input_box_cancel_event ( control : object ) -> None Handle input box cancel events. Parameters: control ( object ) \u2013 The control that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_input_box_cancel_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_input_box_submit_event","text":"on_input_box_submit_event ( event : Event ) -> None Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_input_box_submit_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_mouse_button_up_event","text":"on_mouse_button_up_event ( event : Event ) -> None Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_mouse_button_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_key_up_event","text":"on_key_up_event ( event : Event ) -> None Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_up_event"},{"location":"reference/glitchygames/ui/#glitchygames.ui.InputDialog.on_key_down_event","text":"on_key_down_event ( event : Event ) -> None Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-method\"></code>&nbsp;on_key_down_event"}]}