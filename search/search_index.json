{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Reference glitchygames Attributes glitchygames . __all__ = [ 'engine' ] module-attribute Modules glitchygames.api Glitchygames plugin API. glitchygames.color Color constants and palette helpers. This module contains color constants and palette helpers. Classes glitchygames.color.Default Bases: ColorPalette A default set of colors used for Glitchy Games Examples. Functions glitchygames . color . Default . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . Default . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . Default . __init__ () Create a default color palette object. Returns: None \u2013 None Modules glitchygames.color.palette GlitchyGames palette module. palette: Manages the custom color palette file format used by the engine. Classes glitchygames.color.palette.ColorPalette Manages color palette data for Glitchy Games. Functions glitchygames . color . palette . ColorPalette . __init__ ( colors = None , filename = None ) Create a color palette object. Parameters: colors ( Optional ( list | None) , default: None ) \u2013 A list of PyGame Colors. Default: None filename ( Optional ( str , None) , default: None ) \u2013 The name of the palette file to load. Default: None glitchygames . color . palette . ColorPalette . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . ColorPalette . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames.color.palette.PaletteUtility Utility class for working with Glitchy Games palettes. Functions glitchygames . color . palette . PaletteUtility . load_palette_from_config ( config ) staticmethod Load a palette from a ConfigParser object. Parameters: config ( dict ) \u2013 A ConfigParser object containing palette data. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . load_palette_from_file ( config_file_path ) staticmethod Load a palette from a GlitchyGames palette file. Parameters: config_file_path ( str ) \u2013 The path to the palette file to load. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . write_palette_to_file ( config_data , output_file ) staticmethod Write a GlitchyGames palette to a file. Parameters: config_data ( dict ) \u2013 A ConfigParser object containing palette data. output_file ( str ) \u2013 The path to the palette file to write. Returns: None \u2013 None glitchygames . color . palette . PaletteUtility . parse_rgb_data_in_file ( rgb_data_file ) staticmethod Read RGB data from a file. Parameters: rgb_data_file ( str ) \u2013 The path to the file containing RGB data. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . create_palette_data ( colors ) staticmethod Create a ConfigParser object containing palette data from a list of PyGame Colors. Parameters: colors ( list ) \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. Returns: ConfigParser \u2013 A ConfigParser object containing palette data. glitchygames.color.palette.Default Bases: ColorPalette A default set of colors used for Glitchy Games Examples. Functions glitchygames . color . palette . Default . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . Default . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . Default . __init__ () Create a default color palette object. Returns: None \u2013 None glitchygames.color.palette.System Bases: ColorPalette A palette representing the 16 default system colors. Functions glitchygames . color . palette . System . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . System . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . System . __init__ () Create a system color palette object. Returns: None \u2013 None glitchygames.color.palette.Vga Bases: ColorPalette The 256 VGA color palette. Functions glitchygames . color . palette . Vga . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . Vga . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . Vga . __init__ () Create a VGA color palette object. Returns: None \u2013 None glitchygames.engine Contains GameEngine and helper classes for building a game. Classes glitchygames.engine.GameManager Bases: ResourceManager Game event manager. Classes glitchygames.engine.GameManager.GameProxy Bases: ResourceManager Game event proxy. Functions glitchygames . engine . GameManager . GameProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameManager . GameProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . engine . GameManager . GameProxy . __init__ ( ** kwargs ) Initialize the game proxy. Parameters: **kwargs \u2013 Keyword arguments. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_active_event ( event ) Handle active event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_fps_event ( event ) Handle fps event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_game_event ( event ) Handle game event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_menu_item_event ( event ) Handle menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_sys_wm_event ( event ) Handle sys wm event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_user_event ( event ) Handle user event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_video_expose_event ( event ) Handle video expose event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_video_resize_event ( event ) Handle video resize event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_quit_event ( event ) Handle quit event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . engine . GameManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . engine . GameManager . __init__ ( game = None ) Initialize the game event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . engine . GameManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.engine.GameEngine Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class. Attributes glitchygames . engine . GameEngine . screen_width : int property Get the screen width. Returns: int ( int ) \u2013 The screen width. glitchygames . engine . GameEngine . screen_height : int property Get the screen height. Returns: int ( int ) \u2013 The screen height. Classes glitchygames.engine.GameEngine.EventProxy Proxy for events. Functions glitchygames . engine . GameEngine . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . engine . GameEngine . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . engine . GameEngine . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . engine . GameEngine . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameEngine . __init__ ( game , icon = None ) Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_display () Initialize the display. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_event_handlers () Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_input_event_handlers () Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None glitchygames . engine . GameEngine . __del__ () Delete the game engine. Returns: None \u2013 None glitchygames . engine . GameEngine . print_system_info () Print system information. Returns: None \u2013 None glitchygames . engine . GameEngine . print_game_info () Print game information. Returns: None \u2013 None glitchygames . engine . GameEngine . suggested_resolution ( desired_width = 0 , desired_height = 0 ) Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution. glitchygames . engine . GameEngine . set_cursor ( cursor , cursor_black = '.' , cursor_white = 'X' , cursor_xor = 'o' ) classmethod Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor. glitchygames . engine . GameEngine . initialize_system_icons () Initialize system icons. Returns: None \u2013 None glitchygames . engine . GameEngine . args ( parser ) classmethod Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames . engine . GameEngine . start () Start the game engine. Returns: None \u2013 None glitchygames . engine . GameEngine . quit_game () classmethod Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None glitchygames . engine . GameEngine . process_events () Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_audio_event ( event ) Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_controller_event ( event ) Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_drop_event ( event ) Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_touch_event ( event ) Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_midi_event ( event ) Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_mouse_event ( event ) Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_keyboard_event ( event ) Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_joystick_event ( event ) Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_text_event ( event ) Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_window_focus_event ( event ) Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_window_event ( event ) Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_game_event ( event ) Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_unimplemented_event ( event ) Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None glitchygames . engine . GameEngine . post_game_event ( event_subtype , event_data ) Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None glitchygames . engine . GameEngine . suppress_event ( * args , attr , ** kwargs ) Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames . engine . GameEngine . register_game_event ( event_type , callback ) Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None glitchygames . engine . GameEngine . missing_event ( * args , ** kwargs ) Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames . engine . GameEngine . __getattr__ ( attr ) Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object. Modules glitchygames.events Glitchy Games event module. This module contains the event substrate for handling higher level events in the game engine. Many events are 1:1 with pygame events, but some are synthesized. For example, a mouse drop event is a synthesized event that is triggered by a mouse button down event followed by a mouse motion event followed by a mouse button up event. Classes glitchygames.events.ResourceManager Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton. Functions glitchygames . events . ResourceManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . ResourceManager . __init__ ( game ) Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . ResourceManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames.events.EventInterface Abstract base class for event interfaces. Functions glitchygames . events . EventInterface . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames.events.AudioEvents Bases: EventInterface Mixin for audio events. Functions glitchygames . events . AudioEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . AudioEvents . on_audio_device_added_event ( event ) abstractmethod Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . AudioEvents . on_audio_device_removed_event ( event ) abstractmethod Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AudioEventStubs Bases: AudioEvents Mixin for audio events. Functions glitchygames . events . AudioEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . AudioEventStubs . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . AudioEventStubs . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEvents Bases: EventInterface Mixin for controller events. Functions glitchygames . events . ControllerEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . ControllerEvents . on_controller_axis_motion_event ( event ) abstractmethod Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_button_down_event ( event ) abstractmethod Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_button_up_event ( event ) abstractmethod Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_added_event ( event ) abstractmethod Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_remapped_event ( event ) abstractmethod Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_removed_event ( event ) abstractmethod Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_down_event ( event ) abstractmethod Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_motion_event ( event ) abstractmethod Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_up_event ( event ) abstractmethod Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.ControllerEventStubs Bases: ControllerEvents Mixin for controller events. Functions glitchygames . events . ControllerEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . ControllerEventStubs . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_button_down_event ( event ) cached Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_button_up_event ( event ) cached Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.DropEvents Bases: EventInterface Mixin for drop events. Functions glitchygames . events . DropEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . DropEvents . on_drop_begin_event ( event ) abstractmethod Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_file_event ( event ) abstractmethod Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_text_event ( event ) abstractmethod Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_complete_event ( event ) abstractmethod Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.DropEventStubs Bases: EventInterface Mixin for drop events. Functions glitchygames . events . DropEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . DropEventStubs . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEvents Bases: EventInterface Mixin for touch events. Functions glitchygames . events . TouchEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TouchEvents . on_touch_down_event ( event ) abstractmethod Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_touch_motion_event ( event ) abstractmethod Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_touch_up_event ( event ) abstractmethod Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_down_event ( event ) abstractmethod Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_motion_event ( event ) abstractmethod Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_up_event ( event ) abstractmethod Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.TouchEventStubs Bases: EventInterface Mixin for touch events. Functions glitchygames . events . TouchEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TouchEventStubs . on_touch_down_event ( event ) cached Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_touch_motion_event ( event ) cached Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_touch_up_event ( event ) cached Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.events.GameEvents Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames . events . GameEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . GameEvents . on_active_event ( event ) abstractmethod Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_fps_event ( event ) abstractmethod Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_game_event ( event ) abstractmethod Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_menu_item_event ( event ) abstractmethod Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_sys_wm_event ( event ) abstractmethod Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_user_event ( event ) abstractmethod Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_video_expose_event ( event ) abstractmethod Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_video_resize_event ( event ) abstractmethod Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_quit_event ( event ) abstractmethod Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.GameEventStubs Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames . events . GameEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . GameEventStubs . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_fps_event ( event ) cached Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_sys_wm_event ( event ) cached Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_user_event ( event ) cached Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_video_expose_event ( event ) cached Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_video_resize_event ( event ) cached Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_quit_event ( event ) cached Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.FontEvents Bases: EventInterface Mixin for font events. Functions glitchygames . events . FontEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . FontEvents . on_font_changed_event ( event ) abstractmethod Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.FontEventStubs Bases: EventInterface Mixin for font events. Functions glitchygames . events . FontEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . FontEventStubs . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.KeyboardEvents Bases: EventInterface Mixin for keyboard events. glitchygames.events.KeyboardEventStubs Bases: EventInterface Mixin for keyboard events. Functions glitchygames . events . KeyboardEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . KeyboardEventStubs . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_up_event ( event ) cached Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames.events.JoystickEvents Bases: EventInterface Mixin for joystick events. Functions glitchygames . events . JoystickEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . JoystickEvents . on_joy_axis_motion_event ( event ) abstractmethod Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_button_down_event ( event ) abstractmethod Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_button_up_event ( event ) abstractmethod Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_hat_motion_event ( event ) abstractmethod Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_ball_motion_event ( event ) abstractmethod Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_device_added_event ( event ) abstractmethod Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_device_removed_event ( event ) abstractmethod Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.JoystickEventStubs Bases: EventInterface Mixin for joystick events. Functions glitchygames . events . JoystickEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . JoystickEventStubs . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_button_down_event ( event ) cached Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_button_up_event ( event ) cached Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MidiEvents Bases: EventInterface Mixin for midi events. glitchygames.events.MidiEventStubs Bases: EventInterface Mixin for midi events. glitchygames.events.MouseEvents Bases: EventInterface Mixin for mouse events. Functions glitchygames . events . MouseEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . MouseEvents . on_mouse_motion_event ( event ) abstractmethod Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_drag_event ( event , trigger ) abstractmethod Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_drop_event ( event , trigger ) abstractmethod Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_drag_event ( event , trigger ) abstractmethod Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_drop_event ( event , trigger ) abstractmethod Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_drag_event ( event , trigger ) abstractmethod Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_drop_event ( event , trigger ) abstractmethod Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_drag_event ( event , trigger ) abstractmethod Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_drop_event ( event , trigger ) abstractmethod Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_focus_event ( event , entering_focus ) abstractmethod Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_unfocus_event ( event , leaving_focus ) abstractmethod Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_button_up_event ( event ) abstractmethod Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_button_up_event ( event ) abstractmethod Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_button_up_event ( event ) abstractmethod Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_button_up_event ( event ) abstractmethod Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_button_down_event ( event ) abstractmethod Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_button_down_event ( event ) abstractmethod Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_button_down_event ( event ) abstractmethod Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_button_down_event ( event ) abstractmethod Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_scroll_down_event ( event ) abstractmethod Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_scroll_up_event ( event ) abstractmethod Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_wheel_event ( event ) abstractmethod Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.MouseEventStubs Bases: EventInterface Mixin for mouse events. Functions glitchygames . events . MouseEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . MouseEventStubs . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_drag_event ( event , trigger ) cached Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_drop_event ( event , trigger ) cached Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_drag_event ( event , trigger ) cached Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_drop_event ( event , trigger ) cached Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_drag_event ( event , trigger ) cached Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_drop_event ( event , trigger ) cached Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_drag_event ( event , trigger ) cached Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_drop_event ( event , trigger ) cached Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_button_up_event ( event ) cached Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_button_up_event ( event ) cached Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_button_up_event ( event ) cached Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_button_down_event ( event ) cached Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_button_down_event ( event ) cached Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_button_down_event ( event ) cached Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEvents Bases: EventInterface Mixin for text events. Functions glitchygames . events . TextEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TextEvents . on_text_editing_event ( event ) abstractmethod Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . TextEvents . on_text_input_event ( event ) abstractmethod Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.TextEventStubs Bases: EventInterface Mixin for text events. Functions glitchygames . events . TextEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TextEventStubs . on_text_editing_event ( event ) cached Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . TextEventStubs . on_text_input_event ( event ) cached Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEvents Bases: EventInterface Mixin for window events. Functions glitchygames . events . WindowEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . WindowEvents . on_window_close_event ( event ) abstractmethod Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_enter_event ( event ) abstractmethod Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_exposed_event ( event ) abstractmethod Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_focus_gained_event ( event ) abstractmethod Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_focus_lost_event ( event ) abstractmethod Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_hidden_event ( event ) abstractmethod Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_hit_test_event ( event ) abstractmethod Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_leave_event ( event ) abstractmethod Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_maximized_event ( event ) abstractmethod Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_minimized_event ( event ) abstractmethod Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_moved_event ( event ) abstractmethod Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_resized_event ( event ) abstractmethod Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_restored_event ( event ) abstractmethod Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_shown_event ( event ) abstractmethod Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_size_changed_event ( event ) abstractmethod Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_take_focus_event ( event ) abstractmethod Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.WindowEventStubs Bases: EventInterface Mixin for window events. Functions glitchygames . events . WindowEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . WindowEventStubs . on_window_close_event ( event ) cached Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_enter_event ( event ) cached Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_exposed_event ( event ) cached Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_focus_gained_event ( event ) cached Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_focus_lost_event ( event ) cached Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_hidden_event ( event ) cached Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_hit_test_event ( event ) cached Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_leave_event ( event ) cached Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_maximized_event ( event ) cached Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_minimized_event ( event ) cached Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_moved_event ( event ) cached Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_resized_event ( event ) cached Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_restored_event ( event ) cached Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_shown_event ( event ) cached Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_size_changed_event ( event ) cached Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_take_focus_event ( event ) cached Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.AllEvents Bases: AudioEvents , ControllerEvents , DropEvents , TouchEvents , FontEvents , GameEvents , JoystickEvents , KeyboardEvents , MidiEvents , MouseEvents , TextEvents , WindowEvents Mixin for all events. glitchygames.events.AllEventStubs Bases: AudioEventStubs , ControllerEventStubs , DropEventStubs , TouchEventStubs , FontEventStubs , GameEventStubs , JoystickEventStubs , KeyboardEventStubs , MidiEventStubs , MouseEventStubs , TextEventStubs , WindowEventStubs Mixin for all event stubs. glitchygames.events.EventManager Bases: ResourceManager Root event manager. Classes glitchygames.events.EventManager.EventProxy Proxy for events. Functions glitchygames . events . EventManager . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . events . EventManager . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . events . EventManager . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . events . EventManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . EventManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . EventManager . __init__ ( game = None ) Initialize the event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None Functions glitchygames . events . supported_events ( like = '.*' ) Return a list of supported events. This method is crucial for allowing the game engine to support both older versions of pygame and newer versions. It allows us to enumerate supported pygame events and initialize them dynamically. This ensures that the game engine will work with many versions of pygame. We enumerate all pygame event IDs and then use the pygame.event.event_name() method to get the event name. We then use a regular expression to match the event name against the like parameter. Parameters: like ( str , default: '.*' ) \u2013 A regular expression to match against the event names. Returns: list \u2013 A list of pygame events whose names match the regular expression. glitchygames . events . unhandled_event ( game , event , * args , ** kwargs ) cached Handle unhandled events. This method is called when an event is not handled by any of the event handlers. This is helpful for us to debug events that we haven't implemented yet. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: NoReturn \u2013 None Raises: AttributeError \u2013 If the event is not handled. Modules glitchygames.events.audio Audio. This is a simple audio manager that can be used to manage audio. Classes glitchygames.events.audio.AudioManager Bases: ResourceManager Manage pygame audio events. Classes glitchygames.events.audio.AudioManager.AudioProxy Bases: AudioEvents , ResourceManager Pygame audio event proxy. Functions glitchygames . events . audio . AudioManager . AudioProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . audio . AudioManager . AudioProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . audio . AudioManager . AudioProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . audio . AudioManager . AudioProxy . __init__ ( game = None ) Initialize the audio proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . audio . AudioManager . AudioProxy . on_audio_device_added_event ( event ) Handle audio device added event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . audio . AudioManager . AudioProxy . on_audio_device_removed_event ( event ) Handle audio device removed event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . events . audio . AudioManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . audio . AudioManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . audio . AudioManager . __init__ ( game = None ) Initialize the audio manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . audio . AudioManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser. glitchygames.events.controller Controller Events. This is a simple controller event class that can be used to handle controller events. Classes glitchygames.events.controller.ControllerManager Bases: ControllerEvents , ResourceManager Manage controller events. Classes glitchygames.events.controller.ControllerManager.ControllerProxy Bases: ControllerEvents , ResourceManager Proxy class for controller events. Functions glitchygames . events . controller . ControllerManager . ControllerProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . controller . ControllerManager . ControllerProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . controller . ControllerManager . ControllerProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . controller . ControllerManager . ControllerProxy . __init__ ( game = None , controller_id =- 1 ) Initialize the controller proxy. Parameters: game ( object , default: None ) \u2013 The game object. controller_id ( int , default: -1 ) \u2013 The controller id. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_added_event ( event ) Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_remapped_event ( event ) Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_removed_event ( event ) Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_down_event ( event ) Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_motion_event ( event ) Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_up_event ( event ) Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . __str__ () Return a string representation of the controller. Returns: str ( LiteralString ) \u2013 A string representation of the controller. glitchygames . events . controller . ControllerManager . ControllerProxy . __repr__ () Return a string representation of the controller object. Returns: str ( str ) \u2013 A string representation of the controller object. Functions glitchygames . events . controller . ControllerManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . controller . ControllerManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . controller . ControllerManager . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . controller . ControllerManager . __init__ ( game = None ) Initialize the ControllerManager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . args ( parser ) classmethod Add controller options to the parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser: The argument parser. glitchygames . events . controller . ControllerManager . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_added_event ( event ) Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_remapped_event ( event ) Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_removed_event ( event ) Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_down_event ( event ) Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_motion_event ( event ) Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_up_event ( event ) Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.drop Drop Events. This is a simple drop event class that can be used to handle drag & drop events. Classes glitchygames.events.drop.DropManager Bases: ResourceManager Manage drop events. Classes glitchygames.events.drop.DropManager.DropProxy Bases: DropEvents , ResourceManager Proxy class for drop events. Functions glitchygames . events . drop . DropManager . DropProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . drop . DropManager . DropProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . drop . DropManager . DropProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . drop . DropManager . DropProxy . __init__ ( game = None ) Initialize the drop proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_begin_event ( event ) Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_complete_event ( event ) Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_file_event ( event ) Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_text_event ( event ) Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . events . drop . DropManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . drop . DropManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . drop . DropManager . __init__ ( game = None ) Initialize the drop manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . drop . DropManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser. glitchygames.events.joystick Joystick Event Manager. Classes glitchygames.events.joystick.JoystickManager Bases: JoystickEvents , ResourceManager Manage joystick events. Classes glitchygames.events.joystick.JoystickManager.JoystickProxy Bases: JoystickEvents , ResourceManager Joystick event proxy. Functions glitchygames . events . joystick . JoystickManager . JoystickProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . joystick . JoystickManager . JoystickProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . joystick . JoystickManager . JoystickProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . joystick . JoystickManager . JoystickProxy . __init__ ( game = None , joystick_id =- 1 ) Initialize the joystick event proxy. Parameters: game ( object , default: None ) \u2013 The game object. joystick_id ( int , default: -1 ) \u2013 The joystick id. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_axis_motion_event ( event ) Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_button_down_event ( event ) Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_button_up_event ( event ) Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_hat_motion_event ( event ) Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_ball_motion_event ( event ) Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_device_added_event ( event ) Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_device_removed_event ( event ) Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . get_name () Get the joystick name. Returns: str ( str ) \u2013 The joystick name. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_init () Get the joystick init status. Returns: bool ( bool ) \u2013 The joystick init status. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numaxes () Get the number of axes. Returns: int ( int ) \u2013 The number of axes. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numballs () Get the number of trackballs. Returns: int ( int ) \u2013 The number of trackballs. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numbuttons () Get the number of buttons. Returns: int ( int ) \u2013 The number of buttons. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numhats () Get the number of hats. Returns: int ( int ) \u2013 The number of hats. glitchygames . events . joystick . JoystickManager . JoystickProxy . __str__ () Get the joystick info. Returns: str ( str ) \u2013 The joystick info. glitchygames . events . joystick . JoystickManager . JoystickProxy . __repr__ () Get the joystick representation. Returns: str ( str ) \u2013 The joystick representation. Functions glitchygames . events . joystick . JoystickManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . joystick . JoystickManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . joystick . JoystickManager . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . joystick . JoystickManager . __init__ ( game = None ) Initialize the joystick event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . args ( parser ) classmethod Add joystick-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames . events . joystick . JoystickManager . on_joy_axis_motion_event ( event ) Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_button_down_event ( event ) Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_button_up_event ( event ) Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_hat_motion_event ( event ) Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_ball_motion_event ( event ) Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_device_added_event ( event ) Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_device_removed_event ( event ) Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.events.keyboard Keyboard Event Manager. Classes glitchygames.events.keyboard.KeyboardManager Bases: ResourceManager Manage keyboard events. Classes glitchygames.events.keyboard.KeyboardManager.KeyboardProxy Bases: KeyboardEvents , ResourceManager Keyboard event proxy. Functions glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __init__ ( game = None ) Initialize the keyboard event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_chord_down_event ( event ) Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys_down ( list ) \u2013 The keys that are currently down. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_chord_up_event ( event ) Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . keyboard . KeyboardManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . keyboard . KeyboardManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . keyboard . KeyboardManager . __init__ ( game = None ) Initialize the keyboard event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . args ( parser ) classmethod Add keyboard-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.events.midi Midi Event Manager. Classes glitchygames.events.midi.MidiManager Bases: ResourceManager Manage midi events. Functions glitchygames . events . midi . MidiManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . midi . MidiManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . midi . MidiManager . __init__ ( game = None ) Initialize the midi event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . midi . MidiManager . args ( parser ) classmethod Add midi-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.events.mouse Mouse manager. Classes glitchygames.events.mouse.MouseManager Bases: ResourceManager Mouse manager event handler. Classes glitchygames.events.mouse.MouseManager.MouseProxy Bases: MouseEvents , ResourceManager Mouse manager event proxy. Functions glitchygames . events . mouse . MouseManager . MouseProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . mouse . MouseManager . MouseProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . mouse . MouseManager . MouseProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . mouse . MouseManager . MouseProxy . __init__ ( game = None ) Initialize the mouse manager event proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_motion_event ( event ) Handle the mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_drag_event ( event , trigger ) Handle the mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_drop_event ( event , trigger ) Handle the mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_drop_event ( event , trigger ) Handle the left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_drag_event ( event , trigger ) Handle the middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_drop_event ( event , trigger ) Handle the middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_drag_event ( event , trigger ) Handle the right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_drop_event ( event , trigger ) Handle the right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_focus_event ( event , entering_focus ) Handle the mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object entering focus. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_unfocus_event ( event , leaving_focus ) Handle the mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object leaving focus. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_button_up_event ( event ) Handle the middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_button_up_event ( event ) Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_button_down_event ( event ) Handle the mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_button_down_event ( event ) Handle the middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_button_down_event ( event ) Handle the right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_scroll_down_event ( event ) Handle the mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_scroll_up_event ( event ) Handle the mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_wheel_event ( event ) Handle the mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . mouse . MouseManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . mouse . MouseManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . mouse . MouseManager . __init__ ( game = None ) Initialize the mouse manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.events.mouse.MousePointer Mouse pointer sprite. Attributes glitchygames . events . mouse . MousePointer . x : int property writable Get the x coordinate of the mouse pointer. Returns: int \u2013 int glitchygames . events . mouse . MousePointer . y : int property writable Get the y coordinate of the mouse pointer. Returns: int \u2013 int Functions glitchygames . events . mouse . MousePointer . __init__ ( pos , size = ( 1 , 1 )) Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None Functions glitchygames . events . mouse . collided_sprites ( scene , event , index = None ) Get the list of collided sprites. Parameters: scene ( object ) \u2013 The scene to check. event ( Event ) \u2013 The event to check. index ( int , default: None ) \u2013 The index of the sprite to return. Returns: list ( list ) \u2013 The list of collided sprites. glitchygames.events.touch Touch Event Manager. Classes glitchygames.events.touch.TouchManager Bases: ResourceManager Touch event manager. Classes glitchygames.events.touch.TouchManager.TouchProxy Bases: TouchEvents , ResourceManager Touch event proxy. Functions glitchygames . events . touch . TouchManager . TouchProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . touch . TouchManager . TouchProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . touch . TouchManager . TouchProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . touch . TouchManager . TouchProxy . __init__ ( game = None ) Initialize the finger event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_down_event ( event ) Handle finger down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_motion_event ( event ) Handle finger motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_up_event ( event ) Handle finger up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_down_event ( event ) Handle multi-touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_motion_event ( event ) Handle multi-touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_up_event ( event ) Handle multi-touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . touch . TouchManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . touch . TouchManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . touch . TouchManager . __init__ ( game = None ) Initialize the touch event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames.events.window Window. Classes glitchygames.events.window.WindowManager Bases: ResourceManager Window manager event handler. Classes glitchygames.events.window.WindowManager.WindowManagerProxy Bases: WindowEvents , ResourceManager Window manager event proxy. Functions glitchygames . events . window . WindowManager . WindowManagerProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . window . WindowManager . WindowManagerProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . window . WindowManager . WindowManagerProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . window . WindowManager . WindowManagerProxy . __init__ ( game = None ) Initialize the window manager proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_close_event ( event ) Handle the window close event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_enter_event ( event ) Handle the window enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_exposed_event ( event ) Handle the window exposed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_focus_gained_event ( event ) Handle the window focus gained event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_focus_lost_event ( event ) Handle the window focus lost event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_hidden_event ( event ) Handle the window hidden event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_hit_test_event ( event ) Handle the window hit test event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_leave_event ( event ) Handle the window leave event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_maximized_event ( event ) Handle the window maximized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_minimized_event ( event ) Handle the window minimized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_moved_event ( event ) Handle the window moved event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_resized_event ( event ) Handle the window resized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_restored_event ( event ) Handle the window restored event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_shown_event ( event ) Handle the window shown event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_size_changed_event ( event ) Handle the window size changed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_take_focus_event ( event ) Handle the window take focus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . window . WindowManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . window . WindowManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . window . WindowManager . __init__ ( game = None ) Initialize the window event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . window . WindowManager . args ( parser ) classmethod Add window-specific arguments to the global parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames.examples Modules glitchygames.examples.dt_demo Delta Time Demo. Classes glitchygames.examples.dt_demo.Game Bases: Scene The main game class. Attributes glitchygames . examples . dt_demo . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . dt_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . dt_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . dt_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . dt_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . args ( parser ) classmethod Add game-specific arguments to the gloal parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . dt_tick ( dt ) Update the scene. This method will get called automatically by the GameEngine class. Parameters: dt ( float ) \u2013 The delta time (float). Returns: None \u2013 None glitchygames . examples . dt_demo . Game . update () Update the scene. This method will get called automatically by the GameEngine class. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . dt_demo . main () The main entry point for the game. glitchygames.examples.joystick_demo Joystick Demo. Classes glitchygames.examples.joystick_demo.ShapesSprite Bases: Sprite A sprite class for drawing shapes. Attributes glitchygames . examples . joystick_demo . ShapesSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . rectangle : pygame . rect . Rect property Get the rectangle. Returns: Rect \u2013 pygame.rect.Rect: The rectangle. Functions glitchygames . examples . joystick_demo . ShapesSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . __str__ () Returns a string representation of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . __init__ ( * args , ** kwargs ) Initialize a ShapesSprite. Parameters: *args \u2013 Arguments to pass to the parent class. **kwargs \u2013 Keyword arguments to pass to the parent class. Returns: None \u2013 Self glitchygames . examples . joystick_demo . ShapesSprite . move ( pos ) Move the sprite to a new position. Parameters: pos ( tuple ) \u2013 The new position. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . update () Update the sprite. Returns: None \u2013 None glitchygames.examples.joystick_demo.JoystickScene Bases: Scene A scene for testing joysticks. Attributes glitchygames . examples . joystick_demo . JoystickScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . joystick_demo . JoystickScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . joystick_demo . JoystickScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . JoystickScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . update () Update the active scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . play () Play the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . joystick_demo . JoystickScene . __init__ ( groups = None ) Initialize the JoystickScene. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . load_resources () Load the resources. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . render ( screen ) Render the scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_up ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_down ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_pew_pew_event ( event ) Handle pew pew events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_recharge_event ( event ) Handle recharge events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.examples.joystick_demo.Game Bases: Scene The main game class. This is where the magic happens. Attributes glitchygames . examples . joystick_demo . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . joystick_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . joystick_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . update () Update the active scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . joystick_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . __init__ ( options ) Initialize the game. Parameters: options ( dict ) \u2013 The options passed to the game. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None Functions glitchygames . examples . joystick_demo . main () The main function. Returns: None \u2013 None glitchygames.examples.paddleslap Paddle Slap. This is a simple game where you try to keep the ball from hitting your side of the screen. Classes glitchygames.examples.paddleslap.TextSprite Bases: Sprite A sprite class for displaying text. Attributes glitchygames . examples . paddleslap . TextSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . examples . paddleslap . TextSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . examples . paddleslap . TextSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . paddleslap . TextSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . __str__ () Returns a string representation of the sprite. glitchygames . examples . paddleslap . TextSprite . __init__ ( background_color = BLACKLUCENT , alpha = 0 , x = 0 , y = 0 , groups = None ) Initialize the text sprite. Parameters: background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text. x ( int , default: 0 ) \u2013 The x position of the text. y ( int , default: 0 ) \u2013 The y position of the text. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . update () Update the text sprite. Returns: None \u2013 None glitchygames.examples.paddleslap.Game Bases: Scene The main game class. This is where the magic happens. Attributes glitchygames . examples . paddleslap . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . paddleslap . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . paddleslap . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . paddleslap . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . paddleslap . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . setup () Set up the game. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . dt_tick ( dt ) Update the game. Parameters: dt ( float ) \u2013 The delta time. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . update () Update the game. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . paddleslap . main () The main function. Returns: None \u2013 None glitchygames.examples.text_input_demo Text Input Demo. Classes glitchygames.examples.text_input_demo.Game Bases: Scene The main game class. Attributes glitchygames . examples . text_input_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . text_input_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . text_input_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . text_input_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . setup () classmethod Set up the game. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . update () Update the game. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_input_box_submit_event ( control ) Handle input box submit events. Parameters: control ( object ) \u2013 The control that submitted the event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_button_up_event ( event ) Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . text_input_demo . main () The main entry point for the game. glitchygames.fonts Fonts. This is a simple font manager that can be used to load fonts. Classes glitchygames.fonts.FontManager Bases: ResourceManager A font manager. Classes glitchygames.fonts.FontManager.FontProxy Bases: FontEvents , ResourceManager A font proxy. Functions glitchygames . fonts . FontManager . FontProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . fonts . FontManager . FontProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . fonts . FontManager . FontProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . fonts . FontManager . FontProxy . on_font_changed_event ( event ) abstractmethod Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . fonts . FontManager . FontProxy . __init__ ( game = None ) Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None Functions glitchygames . fonts . FontManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . fonts . FontManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . fonts . FontManager . __init__ ( game = None ) Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . fonts . FontManager . args ( parser ) classmethod Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames . fonts . FontManager . font ( font_config = None ) classmethod Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont glitchygames.game_objects Functions glitchygames . game_objects . load_sound ( snd_file , volume = 0.25 ) Load a sound file. Parameters: snd_file ( str ) \u2013 The sound file to load. volume ( float , default: 0.25 ) \u2013 The volume to set the sound to. Returns: Sound \u2013 pygame.mixer.Sound: The sound object. Modules glitchygames.game_objects.ball Ball. Classes glitchygames.game_objects.ball.BallSprite Bases: Sprite Ball Sprite. Attributes glitchygames . game_objects . ball . BallSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . ball . BallSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . game_objects . ball . BallSprite . color : tuple [ int , int , int ] property writable Get the color of the ball. Returns: tuple [ int , int , int ] \u2013 tuple[int, int, int]: The color of the ball. Functions glitchygames . game_objects . ball . BallSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . ball . BallSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . ball . BallSprite . __init__ ( x = 0 , y = 0 , width = 20 , height = 20 , groups = None , collision_sound = None ) Initialize the ball sprite. Parameters: x ( int , default: 0 ) \u2013 The x position of the ball. y ( int , default: 0 ) \u2013 The y position of the ball. width ( int , default: 20 ) \u2013 The width of the ball. height ( int , default: 20 ) \u2013 The height of the ball. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . reset () Reset the ball. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . bounce ( diff ) Bounce the ball. Parameters: diff ( int ) \u2013 The difference. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . update () Update the ball. Returns: None \u2013 None Modules glitchygames.game_objects.paddle Paddle. Classes glitchygames.game_objects.paddle.BasePaddle Bases: Sprite Base Paddle class. Attributes glitchygames . game_objects . paddle . BasePaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . BasePaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . BasePaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . update () Update the sprite. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . BasePaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . BasePaddle . __init__ ( axis , speed , name , color , x , y , width , height , groups = None , collision_sound = None ) Initialize the paddle. Parameters: axis ( Horizontal | Vertical ) \u2013 The axis to move on. speed ( int ) \u2013 The speed to move at. name ( str ) \u2013 The name of the paddle. color ( tuple ) \u2013 The color of the paddle. x ( int ) \u2013 The x position of the paddle. y ( int ) \u2013 The y position of the paddle. width ( int ) \u2013 The width of the paddle. height ( int ) \u2013 The height of the paddle. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames.game_objects.paddle.HorizontalPaddle Bases: BasePaddle Horizontal Paddle. Attributes glitchygames . game_objects . paddle . HorizontalPaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . HorizontalPaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . HorizontalPaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . HorizontalPaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . __init__ ( name , size , position , color , speed , groups = None , collision_sound = None ) Initialize the horizontal paddle. Parameters: name ( str ) \u2013 The name of the paddle. size ( tuple ) \u2013 The size of the paddle. position ( tuple ) \u2013 The position of the paddle. color ( tuple ) \u2013 The color of the paddle. speed ( int ) \u2013 The speed to move at. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . update () Update the paddle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . left () Move left. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . right () Move right. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . stop () Stop moving. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . speed_up () Speed up. Returns: None \u2013 None glitchygames.game_objects.paddle.VerticalPaddle Bases: BasePaddle Vertical Paddle. Attributes glitchygames . game_objects . paddle . VerticalPaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . VerticalPaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . VerticalPaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . VerticalPaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . __init__ ( name , size , position , color , speed , groups = None , collision_sound = None ) Initialize the vertical paddle. Parameters: name ( str ) \u2013 The name of the paddle. size ( tuple ) \u2013 The size of the paddle. position ( tuple ) \u2013 The position of the paddle. color ( tuple ) \u2013 The color of the paddle. speed ( int ) \u2013 The speed to move at. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . update () Update the paddle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . up () Move up. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . down () Move down. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . stop () Stop moving. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . speed_up () Speed up. Returns: None \u2013 None Functions glitchygames.game_objects.sounds Sounds. Classes glitchygames.game_objects.sounds.SFX Sound effects. glitchygames.interfaces Interfaces for the game. Classes glitchygames.interfaces.SpriteInterface Sprite interface. Functions glitchygames . interfaces . SpriteInterface . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . interfaces . SpriteInterface . update () Update the sprite. Returns: None \u2013 None glitchygames . interfaces . SpriteInterface . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames.interfaces.SceneInterface Scene interface. Functions glitchygames . interfaces . SceneInterface . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . play () Play the scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . pause () Pause the scene. Returns: None \u2013 None glitchygames.movement Modules glitchygames.movement.horizontal Horizontal Movement. This is a simple horizontal movement class that can be used to move sprites left and right. Classes glitchygames.movement.horizontal.Horizontal Horizontal movement. Functions glitchygames . movement . horizontal . Horizontal . __init__ ( speed ) Initialize the horizontal movement. Parameters: speed ( int ) \u2013 The speed to move at. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . left () Move left. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . right () Move right. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . stop () Stop moving. Returns: None \u2013 None glitchygames.movement.speed Speed. This is a simple speed class that can be used to speed up sprites. Classes glitchygames.movement.speed.Speed Speed. Functions glitchygames . movement . speed . Speed . __init__ ( x = 0 , y = 0 , increment = 0.2 ) Initialize the speed. Parameters: x ( int , default: 0 ) \u2013 The x speed. y ( int , default: 0 ) \u2013 The y speed. increment ( float , default: 0.2 ) \u2013 The amount to increment the speed by. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up () Speed up. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up_horizontal () Speed up horizontally. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up_vertical () Speed up vertically. Returns: None \u2013 None glitchygames.movement.vertical Vertical Movement. This is a simple vertical movement class that can be used to move sprites up and down. Classes glitchygames.movement.vertical.Vertical Vertical movement. Functions glitchygames . movement . vertical . Vertical . __init__ ( speed ) Initialize the vertical movement. Parameters: speed ( int ) \u2013 The speed to move at. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . up () Move up. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . down () Move down. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . stop () Stop moving. Returns: None \u2013 None glitchygames.pixels Pixel data handling. Functions glitchygames . pixels . indexed_rgb_triplet_generator ( pixel_data ) Yield (R, G, B) pixel tuples from a buffer of pixel tuples. glitchygames . pixels . rgb_555_triplet_generator ( pixel_data ) Yield (R, G, B) pixel tuples for 555 formated color data. glitchygames . pixels . rgb_565_triplet_generator ( pixel_data ) Yield (R, G, B) tuples for 565 formatted color data. glitchygames . pixels . rgb_triplet_generator ( pixel_data ) Yield (R, G, B) tuples for the provided pixel data. glitchygames . pixels . image_from_pixels ( pixels , width , height ) Produce a pygame.image object for the specified [(R, G, B), ...] pixel data. glitchygames . pixels . pixels_from_data ( pixel_data ) Expand raw pixel data into [(R, G, B), ...] triplets. glitchygames . pixels . pixels_from_path ( path ) Expand raw pixel data from file into [(R, G, B), ...] triplets. glitchygames.scenes Glitchy Games Engine scenes module. Classes glitchygames.scenes.SceneManager Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events. Attributes glitchygames . scenes . SceneManager . game_engine : object property writable Return the game engine. Returns: object ( object ) \u2013 The game engine. glitchygames . scenes . SceneManager . all_sprites : pygame . sprite . LayeredDirty | None property Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group. Classes glitchygames.scenes.SceneManager.EventProxy Proxy for events. Functions glitchygames . scenes . SceneManager . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . scenes . SceneManager . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . scenes . SceneManager . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . scenes . SceneManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . scenes . SceneManager . pause () Pause the scene. Returns: None \u2013 None glitchygames . scenes . SceneManager . __init__ () Initialize the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None glitchygames . scenes . SceneManager . start () Start the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . terminate () Terminate the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . quit () Quit the game. Returns: None \u2013 None glitchygames . scenes . SceneManager . quit_game () Quit the game. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_game_event ( event ) Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . register_game_event ( event_type , callback ) Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None glitchygames . scenes . SceneManager . __getattr__ ( attr ) Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object. glitchygames.scenes.Scene Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically. Attributes glitchygames . scenes . Scene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. glitchygames . scenes . Scene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. Functions glitchygames . scenes . Scene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . scenes . Scene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . scenes . Scene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . scenes . Scene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . scenes . Scene . play () Play the scene. Returns: None \u2013 None glitchygames . scenes . Scene . pause () Pause the scene. Returns: None \u2013 None glitchygames . scenes . Scene . __init__ ( options = None , groups = None ) Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . scenes . Scene . setup () Setup the scene. Returns: None \u2013 None glitchygames . scenes . Scene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . scenes . Scene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . scenes . Scene . update () Update the active scene. Returns: None \u2013 None glitchygames . scenes . Scene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . scenes . Scene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . scenes . Scene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . load_resources () Load the scene's resources. Returns: None \u2013 None Modules glitchygames.sprites Glitchy Games Engine sprite module. Classes glitchygames.sprites.RootSprite Bases: MouseEvents , SpriteInterface , DirtySprite A root sprite class. All Glitchy Games sprites inherit from this class. Functions glitchygames . sprites . RootSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . RootSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . RootSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . RootSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . RootSprite . on_mouse_motion_event ( event ) abstractmethod Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_drag_event ( event , trigger ) abstractmethod Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_drop_event ( event , trigger ) abstractmethod Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_drag_event ( event , trigger ) abstractmethod Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_drop_event ( event , trigger ) abstractmethod Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_drag_event ( event , trigger ) abstractmethod Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_drop_event ( event , trigger ) abstractmethod Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_drag_event ( event , trigger ) abstractmethod Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_drop_event ( event , trigger ) abstractmethod Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_focus_event ( event , entering_focus ) abstractmethod Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_unfocus_event ( event , leaving_focus ) abstractmethod Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_button_up_event ( event ) abstractmethod Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_button_up_event ( event ) abstractmethod Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_button_up_event ( event ) abstractmethod Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_button_up_event ( event ) abstractmethod Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_button_down_event ( event ) abstractmethod Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_button_down_event ( event ) abstractmethod Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_button_down_event ( event ) abstractmethod Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_button_down_event ( event ) abstractmethod Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_scroll_down_event ( event ) abstractmethod Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_scroll_up_event ( event ) abstractmethod Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_wheel_event ( event ) abstractmethod Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . __init__ ( groups = None ) Initialize a RootSprite. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.Sprite Bases: RootSprite A convenience class for handling all of the common sprite behaviors. Attributes glitchygames . sprites . Sprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . sprites . Sprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . sprites . Sprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . Sprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . Sprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . Sprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . Sprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . sprites . Sprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . Sprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . Sprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . __str__ () Returns a string representation of the sprite. glitchygames.sprites.BitmappySprite Bases: Sprite A sprite that loads from a Bitmappy config file. Functions glitchygames . sprites . BitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . BitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . BitmappySprite . __init__ ( x , y , width , height , name = None , filename = None , focusable = False , parent = None , groups = None ) Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . BitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . BitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . BitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames.sprites.Singleton A generic singleton class. Functions glitchygames . sprites . Singleton . __new__ ( * args , ** kwargs ) Create a new instance of the Singleton. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: Singleton ( Self ) \u2013 The instance of the Singleton. glitchygames.sprites.SingletonBitmappySprite Bases: BitmappySprite A singleton class for handling singleton sprites, like mouse pointers. Functions glitchygames . sprites . SingletonBitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . SingletonBitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . SingletonBitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . SingletonBitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . SingletonBitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . SingletonBitmappySprite . __new__ ( * args , ** kwargs ) Create a new instance of the SingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: SingletonBitmappySprite ( Self ) \u2013 The instance of the SingletonBitmappySprite. glitchygames . sprites . SingletonBitmappySprite . __init__ ( x , y , width , height , name = None , groups = None ) Initialize the SingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames.sprites.FocusableSingletonBitmappySprite Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors. Functions glitchygames . sprites . FocusableSingletonBitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . FocusableSingletonBitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . FocusableSingletonBitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . FocusableSingletonBitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . FocusableSingletonBitmappySprite . __new__ ( * args , ** kwargs ) Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames . sprites . FocusableSingletonBitmappySprite . __init__ ( x , y , width , height , name = None , groups = None ) Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None Functions glitchygames.templates This module helps build a project from templates. It's a wrapper around cookiecutter. Functions glitchygames . templates . get_templates () Returns a list of templates. glitchygames . templates . build ( template ) Builds the project from the template, using cookiecutter. glitchygames.tools Modules glitchygames.tools.bitmappy Glitchy Games Bitmap Editor. Classes glitchygames.tools.bitmappy.GGUnhandledMenuItemError Bases: Exception Glitchy Games Unhandled Menu Item Error. glitchygames.tools.bitmappy.InputConfirmationDialogScene Bases: Scene Input Confirmation Dialog Scene. Attributes glitchygames . tools . bitmappy . InputConfirmationDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . InputConfirmationDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . InputConfirmationDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . InputConfirmationDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Input Confirmation Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.tools.bitmappy.NewCanvasDialogScene Bases: InputConfirmationDialogScene New Canvas Dialog Scene. Attributes glitchygames . tools . bitmappy . NewCanvasDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . NewCanvasDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . NewCanvasDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . NewCanvasDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the New Canvas Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.LoadDialogScene Bases: InputConfirmationDialogScene Load Dialog Scene. Attributes glitchygames . tools . bitmappy . LoadDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . LoadDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . LoadDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . LoadDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . LoadDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Load Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.SaveDialogScene Bases: InputConfirmationDialogScene Save Dialog Scene. Attributes glitchygames . tools . bitmappy . SaveDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . SaveDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . SaveDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . SaveDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . SaveDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Save Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.BitmapPixelSprite Bases: BitmappySprite Bitmap Pixel Sprite. Attributes glitchygames . tools . bitmappy . BitmapPixelSprite . pixel_color : tuple [ int , int , int ] property writable Get the pixel color. Returns: tuple [ int , int , int ] \u2013 tuple[int, int, int]: The pixel color. Functions glitchygames . tools . bitmappy . BitmapPixelSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . BitmapPixelSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . BitmapPixelSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . BitmapPixelSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . BitmapPixelSprite . __init__ ( x = 0 , y = 0 , width = 1 , height = 1 , name = None , pixel_number = 0 , border_thickness = 1 , groups = None ) Initialize the Bitmap Pixel Sprite. Parameters: x ( int , default: 0 ) \u2013 The x coordinate. Defaults to 0. y ( int , default: 0 ) \u2013 The y coordinate. Defaults to 0. width ( int , default: 1 ) \u2013 The width. Defaults to 1. height ( int , default: 1 ) \u2013 The height. Defaults to 1. name ( str , default: None ) \u2013 The name. Defaults to None. pixel_number ( int , default: 0 ) \u2013 The pixel number. Defaults to 0. border_thickness ( int , default: 1 ) \u2013 The border thickness. Defaults to 1. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_pixel_update_event ( event ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.tools.bitmappy.Canvas Bases: BitmappySprite Canvas. Functions glitchygames . tools . bitmappy . Canvas . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . Canvas . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . Canvas . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . Canvas . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . Canvas . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . Canvas . __init__ () Create a Canvas. glitchygames . tools . bitmappy . Canvas . update () Update the canvas. glitchygames.tools.bitmappy.CanvasSprite Bases: BitmappySprite Canvas Sprite. Functions glitchygames . tools . bitmappy . CanvasSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . CanvasSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . CanvasSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . CanvasSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . CanvasSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . CanvasSprite . __init__ ( x , y , width , height , name , has_mini_view = True , groups = None ) Initialize the Canvas Sprite. Parameters: x ( int ) \u2013 The x coordinate. y ( int ) \u2013 The y coordinate. width ( int ) \u2013 The width. height ( int ) \u2013 The height. name ( str ) \u2013 The name. has_mini_view ( bool , default: True ) \u2013 Whether or not to have a mini view. Defaults to True. groups ( None , default: None ) \u2013 Sprite groups. Defaults to None. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_pixel_update_event ( event , trigger ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_new_file_event ( event , trigger ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_save_file_event ( event , trigger ) Handle the save file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_load_file_event ( event , trigger ) Handle the load file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.MiniView Bases: CanvasSprite Mini View. Functions glitchygames . tools . bitmappy . MiniView . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . MiniView . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . MiniView . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . MiniView . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . MiniView . on_pixel_update_event ( event , trigger ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_new_file_event ( event , trigger ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_save_file_event ( event , trigger ) Handle the save file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_load_file_event ( event , trigger ) Handle the load file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . pixels_per_pixel ( pixels_across , pixels_tall ) staticmethod Get the pixels per pixel. Parameters: pixels_across ( int ) \u2013 The pixels across. pixels_tall ( int ) \u2013 The pixels tall. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The pixels per pixel. glitchygames . tools . bitmappy . MiniView . __init__ ( x = 0 , y = 0 , width = 0 , height = 0 , name = None , border_thickness = 0 , pixels = None , groups = None ) Initialize the Mini View. Parameters: x ( int , default: 0 ) \u2013 The x coordinate. Defaults to 0. y ( int , default: 0 ) \u2013 The y coordinate. Defaults to 0. width ( int , default: 0 ) \u2013 The width. Defaults to 0. height ( int , default: 0 ) \u2013 The height. Defaults to 0. name ( str , default: None ) \u2013 The name. Defaults to None. border_thickness ( int , default: 0 ) \u2013 The border thickness. Defaults to 0. pixels ( list , default: None ) \u2013 The pixels. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . __str__ () Get the string representation of the Mini View. Returns: str ( str ) \u2013 The string representation of the Mini View. glitchygames.tools.bitmappy.BitmapEditorScene Bases: Scene Bitmap Editor Scene. Attributes glitchygames . tools . bitmappy . BitmapEditorScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . BitmapEditorScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . BitmapEditorScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . BitmapEditorScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . BitmapEditorScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . __init__ ( options , groups = None ) Initialize the Bitmap Editor Scene. Parameters: options ( dict ) \u2013 The options. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_menu_item_event ( event ) Handle the menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_new_file_event ( event ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_new_canvas_dialog_event ( event ) Handle the new canvas dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_load_dialog_event ( event ) Handle the load dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_save_dialog_event ( event ) Handle the save dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_color_well_event ( event , trigger ) Handle the color well event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_slider_event ( event , trigger ) Handle the slider event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_button_up_event ( event ) Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . args ( parser ) classmethod Add command line arguments. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None Functions glitchygames . tools . bitmappy . main () Main function. Returns: None \u2013 None Modules glitchygames.ui GlitchyGames UI classes. Classes glitchygames.ui.MenuBar Bases: FocusableSingletonBitmappySprite A menu bar class. Functions glitchygames . ui . MenuBar . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . MenuBar . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . MenuBar . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . MenuBar . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . MenuBar . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . __str__ () Returns a string representation of the sprite. glitchygames . ui . MenuBar . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . MenuBar . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . MenuBar . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . MenuBar . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . MenuBar . __new__ ( * args , ** kwargs ) Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames . ui . MenuBar . __init__ ( x , y , width , height , name = None , groups = None ) Initialize a MenuBar. Parameters: x ( int ) \u2013 The x coordinate of the menu bar. y ( int ) \u2013 The y coordinate of the menu bar. width ( int ) \u2013 The width of the menu bar. height ( int ) \u2013 The height of the menu bar. name ( str | None , default: None ) \u2013 The name of the menu bar. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuBar . add_menu ( menu ) Add a menu to the menu bar. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames . ui . MenuBar . add_menu_item ( menu_item , menu = None ) Add a menu item to the menu bar. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar | None , default: None ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames . ui . MenuBar . update () Update the menu bar. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drop_event ( event ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_event ( event ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drop_event ( event ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_enter_event ( event ) Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_exit_event ( event ) Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_event ( event ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drop_event ( event ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_wheel_event ( event ) Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.MenuItem Bases: BitmappySprite A menu item class. This class represents a menu item. It can be a root level menu item or a sub menu item. Parameters: BitmappySprite ( BitmappySprite ) \u2013 The base sprite class. Returns: \u2013 None Functions glitchygames . ui . MenuItem . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . MenuItem . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . MenuItem . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . MenuItem . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . MenuItem . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . __str__ () Returns a string representation of the sprite. glitchygames . ui . MenuItem . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . MenuItem . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . MenuItem . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . MenuItem . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . MenuItem . __init__ ( x = 0 , y = 0 , width = 1 , height = 1 , name = None , filename = None , parent = None , groups = None ) Initialize a MenuItem. Parameters: x ( int , default: 0 ) \u2013 The x coordinate of the menu item. y ( int , default: 0 ) \u2013 The y coordinate of the menu item. width ( int , default: 1 ) \u2013 The width of the menu item. height ( int , default: 1 ) \u2013 The height of the menu item. name ( str | None , default: None ) \u2013 The name of the menu item. filename ( str | None , default: None ) \u2013 The filename of the menu item. parent ( object | None , default: None ) \u2013 The parent of the menu item. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuItem . add ( * groups ) Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuItem . add_menu ( menu ) Add a menu to the menu item. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames . ui . MenuItem . add_menu_item ( menu_item , menu ) Add a menu item to the menu item. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames . ui . MenuItem . update () Update the menu item. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_event ( event ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drop_event ( event ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_event ( event ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drop_event ( event ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_event ( event ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drop_event ( event ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_enter_event ( event ) Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_exit_event ( event ) Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_event ( event ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drop_event ( event ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_wheel_event ( event ) Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextSprite Bases: BitmappySprite A text sprite class. Attributes glitchygames . ui . TextSprite . x : int property writable Get the x coordinate of the text sprite. Returns: int ( int ) \u2013 The x coordinate of the text sprite. glitchygames . ui . TextSprite . y : int property writable Get the y coordinate of the text sprite. Returns: int ( int ) \u2013 The y coordinate of the text sprite. Classes glitchygames.ui.TextSprite.TextBox Bases: Sprite A text box class. Attributes glitchygames . ui . TextSprite . TextBox . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . ui . TextSprite . TextBox . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . ui . TextSprite . TextBox . x : int property writable Get the x coordinate of the text box. Returns: int ( int ) \u2013 The x coordinate of the text box. glitchygames . ui . TextSprite . TextBox . y : int property writable Get the y coordinate of the text box. Returns: int ( int ) \u2013 The y coordinate of the text box. Functions glitchygames . ui . TextSprite . TextBox . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextSprite . TextBox . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextSprite . TextBox . __init__ ( font , x , y , line_height = 15 , text = 'Text' , text_color = WHITE , parent = None , groups = None ) Initialize a TextBox. Parameters: font ( str ) \u2013 The font to use. x ( int ) \u2013 The x coordinate of the text box. y ( int ) \u2013 The y coordinate of the text box. line_height ( int , default: 15 ) \u2013 The line height of the text box. text ( str , default: 'Text' ) \u2013 The text to display in the text box. text_color ( tuple , default: WHITE ) \u2013 The color of the text. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . print_text ( surface , string ) Print text to the text box. Parameters: surface ( Surface ) \u2013 The surface to print the text to. string ( str ) \u2013 The text to print. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . reset () Reset the text box. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . indent () Indent the text box. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . unindent () Unindent the text box. Returns: None \u2013 None Functions glitchygames . ui . TextSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . TextSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . TextSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . TextSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . TextSprite . __init__ ( x , y , width , height , name = None , background_color = BLACKLUCENT , text_color = WHITE , alpha = 0 , text = 'Text' , parent = None , groups = None ) Initialize a TextSprite. Parameters: x ( int ) \u2013 The x coordinate of the text sprite. y ( int ) \u2013 The y coordinate of the text sprite. width ( int ) \u2013 The width of the text sprite. height ( int ) \u2013 The height of the text sprite. name ( str , default: None ) \u2013 The name of the text sprite. background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text sprite. text_color ( tuple , default: WHITE ) \u2013 The color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text sprite. text ( str , default: 'Text' ) \u2013 The text to display in the text sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextSprite . update () Update the text sprite. Returns: None \u2013 None glitchygames . ui . TextSprite . add ( * groups ) Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_focus_event ( event , focus ) Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. focus ( object ) \u2013 The object that has focus. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_unfocus_event ( event ) Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.ButtonSprite Bases: BitmappySprite A button sprite class. Attributes glitchygames . ui . ButtonSprite . x : int property writable Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames . ui . ButtonSprite . y : int property writable Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. Functions glitchygames . ui . ButtonSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . ButtonSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . ButtonSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . ButtonSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . ButtonSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . ButtonSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . ButtonSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . ButtonSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . ButtonSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . ButtonSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a ButtonSprite. Parameters: x ( int ) \u2013 The x coordinate of the button sprite. y ( int ) \u2013 The y coordinate of the button sprite. width ( int ) \u2013 The width of the button sprite. height ( int ) \u2013 The height of the button sprite. name ( str , default: None ) \u2013 The name of the button sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . ButtonSprite . update_nested_sprites () Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.CheckboxSprite Bases: ButtonSprite A checkbox sprite class. Attributes glitchygames . ui . CheckboxSprite . x : int property writable Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames . ui . CheckboxSprite . y : int property writable Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. Functions glitchygames . ui . CheckboxSprite . update_nested_sprites () Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . CheckboxSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . CheckboxSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . CheckboxSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . CheckboxSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . CheckboxSprite . __init__ ( x , y , width , height , name = None , callbacks = None , groups = None ) Initialize a CheckboxSprite. Parameters: x ( int ) \u2013 The x coordinate of the checkbox sprite. y ( int ) \u2013 The y coordinate of the checkbox sprite. width ( int ) \u2013 The width of the checkbox sprite. height ( int ) \u2013 The height of the checkbox sprite. name ( str , default: None ) \u2013 The name of the checkbox sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . update () Update the checkbox sprite. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.InputBox Bases: Sprite An input box class. Attributes glitchygames . ui . InputBox . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . ui . InputBox . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . ui . InputBox . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . InputBox . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . InputBox . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . InputBox . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputBox . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . __str__ () Returns a string representation of the sprite. glitchygames . ui . InputBox . __init__ ( x , y , width , height , color = ( 233 , 248 , 215 ), text = '' , name = None , parent = None , groups = None ) Initialize an InputBox. Parameters: x ( int ) \u2013 The x coordinate of the input box. y ( int ) \u2013 The y coordinate of the input box. width ( int ) \u2013 The width of the input box. height ( int ) \u2013 The height of the input box. color ( tuple , default: (233, 248, 215) ) \u2013 The color of the input box. text ( str , default: '' ) \u2013 The text to display in the input box. name ( str , default: None ) \u2013 The name of the input box. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . InputBox . activate () Activate the input box. Returns: None \u2013 None glitchygames . ui . InputBox . deactivate () Deactivate the input box. Returns: None \u2013 None glitchygames . ui . InputBox . on_input_box_submit_event ( event ) Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . update () Update the input box. Returns: None \u2013 None glitchygames . ui . InputBox . render () Render the input box. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_up_event ( event ) Handle mouse up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.TextBoxSprite Bases: BitmappySprite A text box sprite class. Functions glitchygames . ui . TextBoxSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextBoxSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextBoxSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . TextBoxSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . TextBoxSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . TextBoxSprite . __init__ ( x , y , width , height , name = None , callbacks = None , parent = None , groups = None ) Initialize a TextBoxSprite. Parameters: x ( int ) \u2013 The x coordinate of the text box sprite. y ( int ) \u2013 The y coordinate of the text box sprite. width ( int ) \u2013 The width of the text box sprite. height ( int ) \u2013 The height of the text box sprite. name ( str , default: None ) \u2013 The name of the text box sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . update () Update the text box sprite. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.ui.SliderSprite Bases: BitmappySprite A slider sprite class. Attributes glitchygames . ui . SliderSprite . value : int property writable Get the value of the slider sprite. Returns: int ( int ) \u2013 The value of the slider sprite. glitchygames . ui . SliderSprite . x : int property writable Get the x coordinate of the slider sprite. Returns: int ( int ) \u2013 The x coordinate of the slider sprite. glitchygames . ui . SliderSprite . y : int property writable Get the y coordinate of the slider sprite. Returns: int ( int ) \u2013 The y coordinate of the slider sprite. Classes glitchygames.ui.SliderSprite.SliderKnobSprite Bases: BitmappySprite A slider knob sprite class. Functions glitchygames . ui . SliderSprite . SliderKnobSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . SliderSprite . SliderKnobSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . SliderSprite . SliderKnobSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . SliderSprite . SliderKnobSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . SliderSprite . SliderKnobSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a SliderKnobSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider knob sprite. y ( int ) \u2013 The y coordinate of the slider knob sprite. width ( int ) \u2013 The width of the slider knob sprite. height ( int ) \u2013 The height of the slider knob sprite. name ( str , default: None ) \u2013 The name of the slider knob sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None Functions glitchygames . ui . SliderSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . SliderSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . SliderSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . SliderSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . SliderSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . SliderSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . SliderSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . SliderSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . SliderSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a SliderSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider sprite. y ( int ) \u2013 The y coordinate of the slider sprite. width ( int ) \u2013 The width of the slider sprite. height ( int ) \u2013 The height of the slider sprite. name ( str , default: None ) \u2013 The name of the slider sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . SliderSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . SliderSprite . update () Update the slider sprite. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames.ui.ColorWellSprite Bases: BitmappySprite A color well sprite class. Attributes glitchygames . ui . ColorWellSprite . active_color : tuple [ int , int , int ] property writable Get the active color. Returns: tuple [ int , int , int ] \u2013 tuple[R: int, G: int, B: int]: The active color. glitchygames . ui . ColorWellSprite . hex_color : str property Get the hex color. Returns: str ( str ) \u2013 The hex color in #RRGGBB format. Functions glitchygames . ui . ColorWellSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . ColorWellSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . ColorWellSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . ColorWellSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . ColorWellSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . ColorWellSprite . __init__ ( x , y , width , height , name , parent = None , groups = None ) Initialize a ColorWellSprite. Parameters: x ( int ) \u2013 The x coordinate of the color well sprite. y ( int ) \u2013 The y coordinate of the color well sprite. width ( int ) \u2013 The width of the color well sprite. height ( int ) \u2013 The height of the color well sprite. name ( str ) \u2013 The name of the color well sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . update () Update the color well sprite. Returns: None \u2013 None glitchygames.ui.InputDialog Bases: BitmappySprite An input dialog class. Functions glitchygames . ui . InputDialog . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . InputDialog . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . InputDialog . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . InputDialog . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . __str__ () Returns a string representation of the sprite. glitchygames . ui . InputDialog . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . InputDialog . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . InputDialog . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . InputDialog . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . InputDialog . __init__ ( x , y , width , height , name = None , dialog_text = 'Would you like to do a thing?' , confirm_text = 'Confirm' , cancel_text = 'Cancel' , callbacks = None , parent = None , groups = None ) Initialize an InputDialog. Parameters: x ( int ) \u2013 The x coordinate of the input dialog. y ( int ) \u2013 The y coordinate of the input dialog. width ( int ) \u2013 The width of the input dialog. height ( int ) \u2013 The height of the input dialog. name ( str , default: None ) \u2013 The name of the input dialog. dialog_text ( str , default: 'Would you like to do a thing?' ) \u2013 The text to display in the dialog. confirm_text ( str , default: 'Confirm' ) \u2013 The text to display on the confirm button. cancel_text ( str , default: 'Cancel' ) \u2013 The text to display on the cancel button. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . InputDialog . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . InputDialog . update () Update the input dialog. Returns: None \u2013 None glitchygames . ui . InputDialog . on_confirm_event ( event , trigger ) Handle confirm events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_cancel_event ( event , trigger ) Handle cancel events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_input_box_cancel_event ( control ) Handle input box cancel events. Parameters: control ( object ) \u2013 The control that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_input_box_submit_event ( event ) Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_button_up_event ( event ) Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Modules","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#reference","text":"","title":"Reference"},{"location":"#glitchygames","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;glitchygames"},{"location":"#glitchygames-attributes","text":"","title":"Attributes"},{"location":"#glitchygames.__all__","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-attribute\"></code>&nbsp;__all__"},{"location":"#glitchygames-modules","text":"","title":"Modules"},{"location":"#glitchygames.api","text":"Glitchygames plugin API.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;api"},{"location":"#glitchygames.color","text":"Color constants and palette helpers. This module contains color constants and palette helpers.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;color"},{"location":"#glitchygames.color-classes","text":"","title":"Classes"},{"location":"#glitchygames.color.Default","text":"Bases: ColorPalette A default set of colors used for Glitchy Games Examples. Functions glitchygames . color . Default . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . Default . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . Default . __init__ () Create a default color palette object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Default"},{"location":"#glitchygames.color-modules","text":"","title":"Modules"},{"location":"#glitchygames.color.palette","text":"GlitchyGames palette module. palette: Manages the custom color palette file format used by the engine. Classes glitchygames.color.palette.ColorPalette Manages color palette data for Glitchy Games. Functions glitchygames . color . palette . ColorPalette . __init__ ( colors = None , filename = None ) Create a color palette object. Parameters: colors ( Optional ( list | None) , default: None ) \u2013 A list of PyGame Colors. Default: None filename ( Optional ( str , None) , default: None ) \u2013 The name of the palette file to load. Default: None glitchygames . color . palette . ColorPalette . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . ColorPalette . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames.color.palette.PaletteUtility Utility class for working with Glitchy Games palettes. Functions glitchygames . color . palette . PaletteUtility . load_palette_from_config ( config ) staticmethod Load a palette from a ConfigParser object. Parameters: config ( dict ) \u2013 A ConfigParser object containing palette data. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . load_palette_from_file ( config_file_path ) staticmethod Load a palette from a GlitchyGames palette file. Parameters: config_file_path ( str ) \u2013 The path to the palette file to load. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . write_palette_to_file ( config_data , output_file ) staticmethod Write a GlitchyGames palette to a file. Parameters: config_data ( dict ) \u2013 A ConfigParser object containing palette data. output_file ( str ) \u2013 The path to the palette file to write. Returns: None \u2013 None glitchygames . color . palette . PaletteUtility . parse_rgb_data_in_file ( rgb_data_file ) staticmethod Read RGB data from a file. Parameters: rgb_data_file ( str ) \u2013 The path to the file containing RGB data. Returns: list \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. glitchygames . color . palette . PaletteUtility . create_palette_data ( colors ) staticmethod Create a ConfigParser object containing palette data from a list of PyGame Colors. Parameters: colors ( list ) \u2013 A list of PyGame Colors in the format list[tuple[R: int, G: int, B: int]]. Returns: ConfigParser \u2013 A ConfigParser object containing palette data. glitchygames.color.palette.Default Bases: ColorPalette A default set of colors used for Glitchy Games Examples. Functions glitchygames . color . palette . Default . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . Default . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . Default . __init__ () Create a default color palette object. Returns: None \u2013 None glitchygames.color.palette.System Bases: ColorPalette A palette representing the 16 default system colors. Functions glitchygames . color . palette . System . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . System . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . System . __init__ () Create a system color palette object. Returns: None \u2013 None glitchygames.color.palette.Vga Bases: ColorPalette The 256 VGA color palette. Functions glitchygames . color . palette . Vga . get_color ( palette_index ) Returns PyGame Color from the palette at the specified index. Parameters: palette_index ( int ) \u2013 The index of the color to return. Returns: tuple [ int , int , int ] \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] glitchygames . color . palette . Vga . set_color ( palette_index , new_color ) Sets the indexed color to the new PyGame Color. Parameters: palette_index ( int ) \u2013 The index of the color to set. new_color ( tuple ) \u2013 A PyGame Color object in the format tuple[R: int, G: int, B: int] Returns: None \u2013 None glitchygames . color . palette . Vga . __init__ () Create a VGA color palette object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;palette"},{"location":"#glitchygames.engine","text":"Contains GameEngine and helper classes for building a game.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;engine"},{"location":"#glitchygames.engine-classes","text":"","title":"Classes"},{"location":"#glitchygames.engine.GameManager","text":"Bases: ResourceManager Game event manager. Classes glitchygames.engine.GameManager.GameProxy Bases: ResourceManager Game event proxy. Functions glitchygames . engine . GameManager . GameProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameManager . GameProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . engine . GameManager . GameProxy . __init__ ( ** kwargs ) Initialize the game proxy. Parameters: **kwargs \u2013 Keyword arguments. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_active_event ( event ) Handle active event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_fps_event ( event ) Handle fps event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_game_event ( event ) Handle game event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_menu_item_event ( event ) Handle menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_sys_wm_event ( event ) Handle sys wm event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_user_event ( event ) Handle user event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_video_expose_event ( event ) Handle video expose event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_video_resize_event ( event ) Handle video resize event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . engine . GameManager . GameProxy . on_quit_event ( event ) Handle quit event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . engine . GameManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . engine . GameManager . __init__ ( game = None ) Initialize the game event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . engine . GameManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameManager"},{"location":"#glitchygames.engine.GameEngine","text":"Bases: EventManager Glitchy Games' Game engine. The game engine is responsible for initializing pygame and handling events. It also provides a number of helper methods for common tasks such as setting the screen resolution and setting the cursor. Every Glitchy Game game inherits the GameEngine command line options, so you can add your own command line options by implementing the args() class method in your Scene class. Attributes glitchygames . engine . GameEngine . screen_width : int property Get the screen width. Returns: int ( int ) \u2013 The screen width. glitchygames . engine . GameEngine . screen_height : int property Get the screen height. Returns: int ( int ) \u2013 The screen height. Classes glitchygames.engine.GameEngine.EventProxy Proxy for events. Functions glitchygames . engine . GameEngine . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . engine . GameEngine . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . engine . GameEngine . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . engine . GameEngine . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . engine . GameEngine . __init__ ( game , icon = None ) Initialize the game engine. Parameters: game ( object ) \u2013 The game instance. icon ( Surface | Path | str , default: None ) \u2013 The game icon. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_display () Initialize the display. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_event_handlers () Initialize event handlers. The engine calls this on your behalf. Event subsystem bootstrapping This gives us much faster event processing than doing a lookup every time an event comes in since we can just call the processing function directly. It's not as fast as a raw pygame event loop, but since we layer richer event types on top of the pygame raw events, this gives us a nice balance of extensibility with performance. Returns: None \u2013 None glitchygames . engine . GameEngine . initialize_input_event_handlers () Initialize input event handlers. The engine calls this on your behalf. This initializes the input event handlers. Returns: None \u2013 None glitchygames . engine . GameEngine . __del__ () Delete the game engine. Returns: None \u2013 None glitchygames . engine . GameEngine . print_system_info () Print system information. Returns: None \u2013 None glitchygames . engine . GameEngine . print_game_info () Print game information. Returns: None \u2013 None glitchygames . engine . GameEngine . suggested_resolution ( desired_width = 0 , desired_height = 0 ) Suggest a resolution. Parameters: desired_width ( int , default: 0 ) \u2013 The desired width. desired_height ( int , default: 0 ) \u2013 The desired height. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The suggested resolution. glitchygames . engine . GameEngine . set_cursor ( cursor , cursor_black = '.' , cursor_white = 'X' , cursor_xor = 'o' ) classmethod Set the cursor. Parameters: cursor ( list [ str ] ) \u2013 The cursor. cursor_black ( str , default: '.' ) \u2013 The black cursor. cursor_white ( str , default: 'X' ) \u2013 The white cursor. cursor_xor ( str , default: 'o' ) \u2013 The xor cursor. Returns: list [ str ] \u2013 list[str]: The cursor. glitchygames . engine . GameEngine . initialize_system_icons () Initialize system icons. Returns: None \u2013 None glitchygames . engine . GameEngine . args ( parser ) classmethod Add Glitchy Games arguments to the argument parser. All Glitchy Games will inherit these arguments. Supported Arguments -f, --target-fps --fps-refresh-rate -w, --windowed -r, --resolution --use-gfxdraw --update-type --video-driver Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames . engine . GameEngine . start () Start the game engine. Returns: None \u2013 None glitchygames . engine . GameEngine . quit_game () classmethod Quit the game. Emits a pygame.event.Event(pygame.QUIT, {}) event. Returns: None \u2013 None glitchygames . engine . GameEngine . process_events () Process events. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_audio_event ( event ) Process an audio event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_controller_event ( event ) Process a controller event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_drop_event ( event ) Process a drop event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_touch_event ( event ) Process a touch event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_midi_event ( event ) Process a midi event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_mouse_event ( event ) Process a mouse event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_keyboard_event ( event ) Process a keyboard event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_joystick_event ( event ) Process a joystick event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_text_event ( event ) Process a text event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_window_focus_event ( event ) Process a window focus event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( bool ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_window_event ( event ) Process a window event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_game_event ( event ) Process a game event. Parameters: event ( Event ) \u2013 The event. Returns: bool ( None ) \u2013 True if the event was handled, False otherwise. glitchygames . engine . GameEngine . process_unimplemented_event ( event ) Process an unimplemented event. Parameters: event ( Event ) \u2013 The event. Returns: None \u2013 None glitchygames . engine . GameEngine . post_game_event ( event_subtype , event_data ) Post a game event. Parameters: event_subtype ( EventType ) \u2013 The event subtype. event_data ( dict ) \u2013 The event data. Returns: None \u2013 None glitchygames . engine . GameEngine . suppress_event ( * args , attr , ** kwargs ) Suppress an event. Parameters: *args \u2013 The args. attr ( str ) \u2013 The attribute. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames . engine . GameEngine . register_game_event ( event_type , callback ) Register a game event. Parameters: event_type ( EventType ) \u2013 The event type. callback ( Callable ) \u2013 The callback. Returns: None \u2013 None glitchygames . engine . GameEngine . missing_event ( * args , ** kwargs ) Suppress unhandled on_*_event methods. We only want to log this once per event type. Parameters: *args \u2013 The args. **kwargs \u2013 The kwargs. Returns: None \u2013 None glitchygames . engine . GameEngine . __getattr__ ( attr ) Suppress unhandled on_*_event methods. If the attribute being looked up is not an on_*_event attribute, raise AttributeError as usual. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEngine"},{"location":"#glitchygames.engine-modules","text":"","title":"Modules"},{"location":"#glitchygames.events","text":"Glitchy Games event module. This module contains the event substrate for handling higher level events in the game engine. Many events are 1:1 with pygame events, but some are synthesized. For example, a mouse drop event is a synthesized event that is triggered by a mouse button down event followed by a mouse motion event followed by a mouse button up event.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;events"},{"location":"#glitchygames.events-classes","text":"","title":"Classes"},{"location":"#glitchygames.events.ResourceManager","text":"Singleton aggregator base class for event proxies. A ResourceManager subclass will generally pass all requests through to its proxy object(s), however, for certain types of resources such as joysticks, the subclass will manage things itself. This architecture reduces code footprint, and allows maxium flexibility when needed, at the expense of a bit of abstraction. Unless you're implementing a new pygame event manager, you probably don't need to worry about this. Any subclass of ResourceManager will become a singleton class automatically. This ensures that there is only ever a single manager for any given resource. For instance, a second instantiation of MouseManager would return the same MouseManager object that the GameEngine created to process mouse events with. This behavior allows easy access to resource managers anywhere in the game without needing an explicit copy of the game object, althogh since GameEngine is also a subclass of EventManager, it too is a ResourceManager which can be gotten to from anywhere, since it's a singleton. Functions glitchygames . events . ResourceManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . ResourceManager . __init__ ( game ) Initialize the resource manager. Parameters: game ( object ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . ResourceManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ResourceManager"},{"location":"#glitchygames.events.EventInterface","text":"Abstract base class for event interfaces. Functions glitchygames . events . EventInterface . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventInterface"},{"location":"#glitchygames.events.AudioEvents","text":"Bases: EventInterface Mixin for audio events. Functions glitchygames . events . AudioEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . AudioEvents . on_audio_device_added_event ( event ) abstractmethod Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . AudioEvents . on_audio_device_removed_event ( event ) abstractmethod Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioEvents"},{"location":"#glitchygames.events.AudioEventStubs","text":"Bases: AudioEvents Mixin for audio events. Functions glitchygames . events . AudioEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . AudioEventStubs . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . AudioEventStubs . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AudioEventStubs"},{"location":"#glitchygames.events.ControllerEvents","text":"Bases: EventInterface Mixin for controller events. Functions glitchygames . events . ControllerEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . ControllerEvents . on_controller_axis_motion_event ( event ) abstractmethod Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_button_down_event ( event ) abstractmethod Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_button_up_event ( event ) abstractmethod Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_added_event ( event ) abstractmethod Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_remapped_event ( event ) abstractmethod Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_device_removed_event ( event ) abstractmethod Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_down_event ( event ) abstractmethod Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_motion_event ( event ) abstractmethod Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEvents . on_controller_touchpad_up_event ( event ) abstractmethod Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerEvents"},{"location":"#glitchygames.events.ControllerEventStubs","text":"Bases: ControllerEvents Mixin for controller events. Functions glitchygames . events . ControllerEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . ControllerEventStubs . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_button_down_event ( event ) cached Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_button_up_event ( event ) cached Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . ControllerEventStubs . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ControllerEventStubs"},{"location":"#glitchygames.events.DropEvents","text":"Bases: EventInterface Mixin for drop events. Functions glitchygames . events . DropEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . DropEvents . on_drop_begin_event ( event ) abstractmethod Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_file_event ( event ) abstractmethod Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_text_event ( event ) abstractmethod Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEvents . on_drop_complete_event ( event ) abstractmethod Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropEvents"},{"location":"#glitchygames.events.DropEventStubs","text":"Bases: EventInterface Mixin for drop events. Functions glitchygames . events . DropEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . DropEventStubs . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . DropEventStubs . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;DropEventStubs"},{"location":"#glitchygames.events.TouchEvents","text":"Bases: EventInterface Mixin for touch events. Functions glitchygames . events . TouchEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TouchEvents . on_touch_down_event ( event ) abstractmethod Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_touch_motion_event ( event ) abstractmethod Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_touch_up_event ( event ) abstractmethod Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_down_event ( event ) abstractmethod Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_motion_event ( event ) abstractmethod Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEvents . on_multi_touch_up_event ( event ) abstractmethod Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchEvents"},{"location":"#glitchygames.events.TouchEventStubs","text":"Bases: EventInterface Mixin for touch events. Functions glitchygames . events . TouchEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TouchEventStubs . on_touch_down_event ( event ) cached Handle finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_touch_motion_event ( event ) cached Handle finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_touch_up_event ( event ) cached Handle finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . TouchEventStubs . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TouchEventStubs"},{"location":"#glitchygames.events.GameEvents","text":"Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames . events . GameEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . GameEvents . on_active_event ( event ) abstractmethod Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_fps_event ( event ) abstractmethod Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_game_event ( event ) abstractmethod Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_menu_item_event ( event ) abstractmethod Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_sys_wm_event ( event ) abstractmethod Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_user_event ( event ) abstractmethod Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_video_expose_event ( event ) abstractmethod Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_video_resize_event ( event ) abstractmethod Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEvents . on_quit_event ( event ) abstractmethod Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEvents"},{"location":"#glitchygames.events.GameEventStubs","text":"Bases: EventInterface Mixin for glitchy game events. This includes built-ins like QUIT, and synthesized events like FPS and GAME events. It's sort of a catch-all for event types that didn't have a good home otherwise. Functions glitchygames . events . GameEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . GameEventStubs . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_fps_event ( event ) cached Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_sys_wm_event ( event ) cached Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_user_event ( event ) cached Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_video_expose_event ( event ) cached Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_video_resize_event ( event ) cached Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . GameEventStubs . on_quit_event ( event ) cached Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;GameEventStubs"},{"location":"#glitchygames.events.FontEvents","text":"Bases: EventInterface Mixin for font events. Functions glitchygames . events . FontEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . FontEvents . on_font_changed_event ( event ) abstractmethod Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontEvents"},{"location":"#glitchygames.events.FontEventStubs","text":"Bases: EventInterface Mixin for font events. Functions glitchygames . events . FontEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . FontEventStubs . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontEventStubs"},{"location":"#glitchygames.events.KeyboardEvents","text":"Bases: EventInterface Mixin for keyboard events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardEvents"},{"location":"#glitchygames.events.KeyboardEventStubs","text":"Bases: EventInterface Mixin for keyboard events. Functions glitchygames . events . KeyboardEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . KeyboardEventStubs . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_up_event ( event ) cached Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . events . KeyboardEventStubs . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;KeyboardEventStubs"},{"location":"#glitchygames.events.JoystickEvents","text":"Bases: EventInterface Mixin for joystick events. Functions glitchygames . events . JoystickEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . JoystickEvents . on_joy_axis_motion_event ( event ) abstractmethod Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_button_down_event ( event ) abstractmethod Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_button_up_event ( event ) abstractmethod Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_hat_motion_event ( event ) abstractmethod Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_ball_motion_event ( event ) abstractmethod Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_device_added_event ( event ) abstractmethod Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEvents . on_joy_device_removed_event ( event ) abstractmethod Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickEvents"},{"location":"#glitchygames.events.JoystickEventStubs","text":"Bases: EventInterface Mixin for joystick events. Functions glitchygames . events . JoystickEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . JoystickEventStubs . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_button_down_event ( event ) cached Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_button_up_event ( event ) cached Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . JoystickEventStubs . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;JoystickEventStubs"},{"location":"#glitchygames.events.MidiEvents","text":"Bases: EventInterface Mixin for midi events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MidiEvents"},{"location":"#glitchygames.events.MidiEventStubs","text":"Bases: EventInterface Mixin for midi events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MidiEventStubs"},{"location":"#glitchygames.events.MouseEvents","text":"Bases: EventInterface Mixin for mouse events. Functions glitchygames . events . MouseEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . MouseEvents . on_mouse_motion_event ( event ) abstractmethod Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_drag_event ( event , trigger ) abstractmethod Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_drop_event ( event , trigger ) abstractmethod Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_drag_event ( event , trigger ) abstractmethod Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_drop_event ( event , trigger ) abstractmethod Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_drag_event ( event , trigger ) abstractmethod Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_drop_event ( event , trigger ) abstractmethod Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_drag_event ( event , trigger ) abstractmethod Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_drop_event ( event , trigger ) abstractmethod Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_focus_event ( event , entering_focus ) abstractmethod Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_unfocus_event ( event , leaving_focus ) abstractmethod Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_button_up_event ( event ) abstractmethod Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_button_up_event ( event ) abstractmethod Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_button_up_event ( event ) abstractmethod Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_button_up_event ( event ) abstractmethod Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_button_down_event ( event ) abstractmethod Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_left_mouse_button_down_event ( event ) abstractmethod Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_middle_mouse_button_down_event ( event ) abstractmethod Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_right_mouse_button_down_event ( event ) abstractmethod Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_scroll_down_event ( event ) abstractmethod Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_scroll_up_event ( event ) abstractmethod Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEvents . on_mouse_wheel_event ( event ) abstractmethod Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseEvents"},{"location":"#glitchygames.events.MouseEventStubs","text":"Bases: EventInterface Mixin for mouse events. Functions glitchygames . events . MouseEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . MouseEventStubs . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_drag_event ( event , trigger ) cached Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_drop_event ( event , trigger ) cached Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_drag_event ( event , trigger ) cached Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_drop_event ( event , trigger ) cached Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_drag_event ( event , trigger ) cached Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_drop_event ( event , trigger ) cached Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_drag_event ( event , trigger ) cached Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_drop_event ( event , trigger ) cached Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_button_up_event ( event ) cached Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_button_up_event ( event ) cached Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_button_up_event ( event ) cached Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_left_mouse_button_down_event ( event ) cached Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_middle_mouse_button_down_event ( event ) cached Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_right_mouse_button_down_event ( event ) cached Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . MouseEventStubs . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MouseEventStubs"},{"location":"#glitchygames.events.TextEvents","text":"Bases: EventInterface Mixin for text events. Functions glitchygames . events . TextEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TextEvents . on_text_editing_event ( event ) abstractmethod Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . TextEvents . on_text_input_event ( event ) abstractmethod Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextEvents"},{"location":"#glitchygames.events.TextEventStubs","text":"Bases: EventInterface Mixin for text events. Functions glitchygames . events . TextEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . TextEventStubs . on_text_editing_event ( event ) cached Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . TextEventStubs . on_text_input_event ( event ) cached Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextEventStubs"},{"location":"#glitchygames.events.WindowEvents","text":"Bases: EventInterface Mixin for window events. Functions glitchygames . events . WindowEvents . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . WindowEvents . on_window_close_event ( event ) abstractmethod Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_enter_event ( event ) abstractmethod Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_exposed_event ( event ) abstractmethod Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_focus_gained_event ( event ) abstractmethod Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_focus_lost_event ( event ) abstractmethod Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_hidden_event ( event ) abstractmethod Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_hit_test_event ( event ) abstractmethod Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_leave_event ( event ) abstractmethod Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_maximized_event ( event ) abstractmethod Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_minimized_event ( event ) abstractmethod Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_moved_event ( event ) abstractmethod Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_resized_event ( event ) abstractmethod Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_restored_event ( event ) abstractmethod Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_shown_event ( event ) abstractmethod Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_size_changed_event ( event ) abstractmethod Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEvents . on_window_take_focus_event ( event ) abstractmethod Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowEvents"},{"location":"#glitchygames.events.WindowEventStubs","text":"Bases: EventInterface Mixin for window events. Functions glitchygames . events . WindowEventStubs . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . WindowEventStubs . on_window_close_event ( event ) cached Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_enter_event ( event ) cached Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_exposed_event ( event ) cached Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_focus_gained_event ( event ) cached Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_focus_lost_event ( event ) cached Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_hidden_event ( event ) cached Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_hit_test_event ( event ) cached Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_leave_event ( event ) cached Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_maximized_event ( event ) cached Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_minimized_event ( event ) cached Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_moved_event ( event ) cached Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_resized_event ( event ) cached Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_restored_event ( event ) cached Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_shown_event ( event ) cached Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_size_changed_event ( event ) cached Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . WindowEventStubs . on_window_take_focus_event ( event ) cached Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;WindowEventStubs"},{"location":"#glitchygames.events.AllEvents","text":"Bases: AudioEvents , ControllerEvents , DropEvents , TouchEvents , FontEvents , GameEvents , JoystickEvents , KeyboardEvents , MidiEvents , MouseEvents , TextEvents , WindowEvents Mixin for all events.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AllEvents"},{"location":"#glitchygames.events.AllEventStubs","text":"Bases: AudioEventStubs , ControllerEventStubs , DropEventStubs , TouchEventStubs , FontEventStubs , GameEventStubs , JoystickEventStubs , KeyboardEventStubs , MidiEventStubs , MouseEventStubs , TextEventStubs , WindowEventStubs Mixin for all event stubs.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;AllEventStubs"},{"location":"#glitchygames.events.EventManager","text":"Bases: ResourceManager Root event manager. Classes glitchygames.events.EventManager.EventProxy Proxy for events. Functions glitchygames . events . EventManager . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . events . EventManager . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . events . EventManager . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . events . EventManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . EventManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . EventManager . __init__ ( game = None ) Initialize the event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;EventManager"},{"location":"#glitchygames.events-functions","text":"","title":"Functions"},{"location":"#glitchygames.events.supported_events","text":"Return a list of supported events. This method is crucial for allowing the game engine to support both older versions of pygame and newer versions. It allows us to enumerate supported pygame events and initialize them dynamically. This ensures that the game engine will work with many versions of pygame. We enumerate all pygame event IDs and then use the pygame.event.event_name() method to get the event name. We then use a regular expression to match the event name against the like parameter. Parameters: like ( str , default: '.*' ) \u2013 A regular expression to match against the event names. Returns: list \u2013 A list of pygame events whose names match the regular expression.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;supported_events"},{"location":"#glitchygames.events.unhandled_event","text":"Handle unhandled events. This method is called when an event is not handled by any of the event handlers. This is helpful for us to debug events that we haven't implemented yet. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: NoReturn \u2013 None Raises: AttributeError \u2013 If the event is not handled.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;unhandled_event"},{"location":"#glitchygames.events-modules","text":"","title":"Modules"},{"location":"#glitchygames.events.audio","text":"Audio. This is a simple audio manager that can be used to manage audio. Classes glitchygames.events.audio.AudioManager Bases: ResourceManager Manage pygame audio events. Classes glitchygames.events.audio.AudioManager.AudioProxy Bases: AudioEvents , ResourceManager Pygame audio event proxy. Functions glitchygames . events . audio . AudioManager . AudioProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . audio . AudioManager . AudioProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . audio . AudioManager . AudioProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . audio . AudioManager . AudioProxy . __init__ ( game = None ) Initialize the audio proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . audio . AudioManager . AudioProxy . on_audio_device_added_event ( event ) Handle audio device added event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . audio . AudioManager . AudioProxy . on_audio_device_removed_event ( event ) Handle audio device removed event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . events . audio . AudioManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . audio . AudioManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . audio . AudioManager . __init__ ( game = None ) Initialize the audio manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . audio . AudioManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;audio"},{"location":"#glitchygames.events.controller","text":"Controller Events. This is a simple controller event class that can be used to handle controller events. Classes glitchygames.events.controller.ControllerManager Bases: ControllerEvents , ResourceManager Manage controller events. Classes glitchygames.events.controller.ControllerManager.ControllerProxy Bases: ControllerEvents , ResourceManager Proxy class for controller events. Functions glitchygames . events . controller . ControllerManager . ControllerProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . controller . ControllerManager . ControllerProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . controller . ControllerManager . ControllerProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . controller . ControllerManager . ControllerProxy . __init__ ( game = None , controller_id =- 1 ) Initialize the controller proxy. Parameters: game ( object , default: None ) \u2013 The game object. controller_id ( int , default: -1 ) \u2013 The controller id. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_added_event ( event ) Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_remapped_event ( event ) Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_device_removed_event ( event ) Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_down_event ( event ) Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_motion_event ( event ) Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . on_controller_touchpad_up_event ( event ) Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . ControllerProxy . __str__ () Return a string representation of the controller. Returns: str ( LiteralString ) \u2013 A string representation of the controller. glitchygames . events . controller . ControllerManager . ControllerProxy . __repr__ () Return a string representation of the controller object. Returns: str ( str ) \u2013 A string representation of the controller object. Functions glitchygames . events . controller . ControllerManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . controller . ControllerManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . controller . ControllerManager . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . controller . ControllerManager . __init__ ( game = None ) Initialize the ControllerManager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . args ( parser ) classmethod Add controller options to the parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser: The argument parser. glitchygames . events . controller . ControllerManager . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_added_event ( event ) Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_remapped_event ( event ) Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_device_removed_event ( event ) Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_down_event ( event ) Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_motion_event ( event ) Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . controller . ControllerManager . on_controller_touchpad_up_event ( event ) Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;controller"},{"location":"#glitchygames.events.drop","text":"Drop Events. This is a simple drop event class that can be used to handle drag & drop events. Classes glitchygames.events.drop.DropManager Bases: ResourceManager Manage drop events. Classes glitchygames.events.drop.DropManager.DropProxy Bases: DropEvents , ResourceManager Proxy class for drop events. Functions glitchygames . events . drop . DropManager . DropProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . drop . DropManager . DropProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . drop . DropManager . DropProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . drop . DropManager . DropProxy . __init__ ( game = None ) Initialize the drop proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_begin_event ( event ) Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_complete_event ( event ) Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_file_event ( event ) Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . events . drop . DropManager . DropProxy . on_drop_text_event ( event ) Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None Functions glitchygames . events . drop . DropManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . drop . DropManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . drop . DropManager . __init__ ( game = None ) Initialize the drop manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . drop . DropManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 The argument parser.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;drop"},{"location":"#glitchygames.events.joystick","text":"Joystick Event Manager. Classes glitchygames.events.joystick.JoystickManager Bases: JoystickEvents , ResourceManager Manage joystick events. Classes glitchygames.events.joystick.JoystickManager.JoystickProxy Bases: JoystickEvents , ResourceManager Joystick event proxy. Functions glitchygames . events . joystick . JoystickManager . JoystickProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . joystick . JoystickManager . JoystickProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . joystick . JoystickManager . JoystickProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . joystick . JoystickManager . JoystickProxy . __init__ ( game = None , joystick_id =- 1 ) Initialize the joystick event proxy. Parameters: game ( object , default: None ) \u2013 The game object. joystick_id ( int , default: -1 ) \u2013 The joystick id. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_axis_motion_event ( event ) Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_button_down_event ( event ) Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_button_up_event ( event ) Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_hat_motion_event ( event ) Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_ball_motion_event ( event ) Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_device_added_event ( event ) Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . on_joy_device_removed_event ( event ) Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . JoystickProxy . get_name () Get the joystick name. Returns: str ( str ) \u2013 The joystick name. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_init () Get the joystick init status. Returns: bool ( bool ) \u2013 The joystick init status. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numaxes () Get the number of axes. Returns: int ( int ) \u2013 The number of axes. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numballs () Get the number of trackballs. Returns: int ( int ) \u2013 The number of trackballs. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numbuttons () Get the number of buttons. Returns: int ( int ) \u2013 The number of buttons. glitchygames . events . joystick . JoystickManager . JoystickProxy . get_numhats () Get the number of hats. Returns: int ( int ) \u2013 The number of hats. glitchygames . events . joystick . JoystickManager . JoystickProxy . __str__ () Get the joystick info. Returns: str ( str ) \u2013 The joystick info. glitchygames . events . joystick . JoystickManager . JoystickProxy . __repr__ () Get the joystick representation. Returns: str ( str ) \u2013 The joystick representation. Functions glitchygames . events . joystick . JoystickManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . joystick . JoystickManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . joystick . JoystickManager . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . joystick . JoystickManager . __init__ ( game = None ) Initialize the joystick event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . args ( parser ) classmethod Add joystick-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames . events . joystick . JoystickManager . on_joy_axis_motion_event ( event ) Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_button_down_event ( event ) Handle joystick button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_button_up_event ( event ) Handle joystick button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_hat_motion_event ( event ) Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_ball_motion_event ( event ) Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_device_added_event ( event ) Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . joystick . JoystickManager . on_joy_device_removed_event ( event ) Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;joystick"},{"location":"#glitchygames.events.keyboard","text":"Keyboard Event Manager. Classes glitchygames.events.keyboard.KeyboardManager Bases: ResourceManager Manage keyboard events. Classes glitchygames.events.keyboard.KeyboardManager.KeyboardProxy Bases: KeyboardEvents , ResourceManager Keyboard event proxy. Functions glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . __init__ ( game = None ) Initialize the keyboard event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_chord_down_event ( event ) Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys_down ( list ) \u2013 The keys that are currently down. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . KeyboardProxy . on_key_chord_up_event ( event ) Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . keyboard . KeyboardManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . keyboard . KeyboardManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . keyboard . KeyboardManager . __init__ ( game = None ) Initialize the keyboard event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . keyboard . KeyboardManager . args ( parser ) classmethod Add keyboard-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;keyboard"},{"location":"#glitchygames.events.midi","text":"Midi Event Manager. Classes glitchygames.events.midi.MidiManager Bases: ResourceManager Manage midi events. Functions glitchygames . events . midi . MidiManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . midi . MidiManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . midi . MidiManager . __init__ ( game = None ) Initialize the midi event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . midi . MidiManager . args ( parser ) classmethod Add midi-specific arguments to the global parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;midi"},{"location":"#glitchygames.events.mouse","text":"Mouse manager. Classes glitchygames.events.mouse.MouseManager Bases: ResourceManager Mouse manager event handler. Classes glitchygames.events.mouse.MouseManager.MouseProxy Bases: MouseEvents , ResourceManager Mouse manager event proxy. Functions glitchygames . events . mouse . MouseManager . MouseProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . mouse . MouseManager . MouseProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . mouse . MouseManager . MouseProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . mouse . MouseManager . MouseProxy . __init__ ( game = None ) Initialize the mouse manager event proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_motion_event ( event ) Handle the mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_drag_event ( event , trigger ) Handle the mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_drop_event ( event , trigger ) Handle the mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_drop_event ( event , trigger ) Handle the left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_drag_event ( event , trigger ) Handle the middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_drop_event ( event , trigger ) Handle the middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_drag_event ( event , trigger ) Handle the right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_drop_event ( event , trigger ) Handle the right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( Event ) \u2013 The triggering event. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_focus_event ( event , entering_focus ) Handle the mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object entering focus. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_unfocus_event ( event , leaving_focus ) Handle the mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object leaving focus. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_button_up_event ( event ) Handle the middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_button_up_event ( event ) Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_button_down_event ( event ) Handle the mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_middle_mouse_button_down_event ( event ) Handle the middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_right_mouse_button_down_event ( event ) Handle the right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_scroll_down_event ( event ) Handle the mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_scroll_up_event ( event ) Handle the mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . MouseProxy . on_mouse_wheel_event ( event ) Handle the mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . mouse . MouseManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . mouse . MouseManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . mouse . MouseManager . __init__ ( game = None ) Initialize the mouse manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . mouse . MouseManager . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 None glitchygames.events.mouse.MousePointer Mouse pointer sprite. Attributes glitchygames . events . mouse . MousePointer . x : int property writable Get the x coordinate of the mouse pointer. Returns: int \u2013 int glitchygames . events . mouse . MousePointer . y : int property writable Get the y coordinate of the mouse pointer. Returns: int \u2013 int Functions glitchygames . events . mouse . MousePointer . __init__ ( pos , size = ( 1 , 1 )) Initialize the mouse pointer sprite. Parameters: pos ( tuple ) \u2013 The position of the mouse pointer. size ( tuple , default: (1, 1) ) \u2013 The size of the mouse pointer. Returns: None \u2013 None Functions glitchygames . events . mouse . collided_sprites ( scene , event , index = None ) Get the list of collided sprites. Parameters: scene ( object ) \u2013 The scene to check. event ( Event ) \u2013 The event to check. index ( int , default: None ) \u2013 The index of the sprite to return. Returns: list ( list ) \u2013 The list of collided sprites.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;mouse"},{"location":"#glitchygames.events.touch","text":"Touch Event Manager. Classes glitchygames.events.touch.TouchManager Bases: ResourceManager Touch event manager. Classes glitchygames.events.touch.TouchManager.TouchProxy Bases: TouchEvents , ResourceManager Touch event proxy. Functions glitchygames . events . touch . TouchManager . TouchProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . touch . TouchManager . TouchProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . touch . TouchManager . TouchProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . touch . TouchManager . TouchProxy . __init__ ( game = None ) Initialize the finger event proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_down_event ( event ) Handle finger down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_motion_event ( event ) Handle finger motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_touch_up_event ( event ) Handle finger up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_down_event ( event ) Handle multi-touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_motion_event ( event ) Handle multi-touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . touch . TouchManager . TouchProxy . on_multi_touch_up_event ( event ) Handle multi-touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . touch . TouchManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . touch . TouchManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . touch . TouchManager . __init__ ( game = None ) Initialize the touch event manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;touch"},{"location":"#glitchygames.events.window","text":"Window. Classes glitchygames.events.window.WindowManager Bases: ResourceManager Window manager event handler. Classes glitchygames.events.window.WindowManager.WindowManagerProxy Bases: WindowEvents , ResourceManager Window manager event proxy. Functions glitchygames . events . window . WindowManager . WindowManagerProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . window . WindowManager . WindowManagerProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . window . WindowManager . WindowManagerProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . events . window . WindowManager . WindowManagerProxy . __init__ ( game = None ) Initialize the window manager proxy. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_close_event ( event ) Handle the window close event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_enter_event ( event ) Handle the window enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_exposed_event ( event ) Handle the window exposed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_focus_gained_event ( event ) Handle the window focus gained event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_focus_lost_event ( event ) Handle the window focus lost event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_hidden_event ( event ) Handle the window hidden event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_hit_test_event ( event ) Handle the window hit test event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_leave_event ( event ) Handle the window leave event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_maximized_event ( event ) Handle the window maximized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_minimized_event ( event ) Handle the window minimized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_moved_event ( event ) Handle the window moved event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_resized_event ( event ) Handle the window resized event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_restored_event ( event ) Handle the window restored event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_shown_event ( event ) Handle the window shown event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_size_changed_event ( event ) Handle the window size changed event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . events . window . WindowManager . WindowManagerProxy . on_window_take_focus_event ( event ) Handle the window take focus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . events . window . WindowManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . events . window . WindowManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . events . window . WindowManager . __init__ ( game = None ) Initialize the window event manager. Parameters: game ( object , default: None ) \u2013 The game instance. Returns: None \u2013 None glitchygames . events . window . WindowManager . args ( parser ) classmethod Add window-specific arguments to the global parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;window"},{"location":"#glitchygames.examples","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;examples"},{"location":"#glitchygames.examples-modules","text":"","title":"Modules"},{"location":"#glitchygames.examples.dt_demo","text":"Delta Time Demo. Classes glitchygames.examples.dt_demo.Game Bases: Scene The main game class. Attributes glitchygames . examples . dt_demo . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . dt_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . dt_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . dt_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . dt_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . args ( parser ) classmethod Add game-specific arguments to the gloal parser. This class method will get called automatically by the GameEngine class. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . dt_tick ( dt ) Update the scene. This method will get called automatically by the GameEngine class. Parameters: dt ( float ) \u2013 The delta time (float). Returns: None \u2013 None glitchygames . examples . dt_demo . Game . update () Update the scene. This method will get called automatically by the GameEngine class. Returns: None \u2013 None glitchygames . examples . dt_demo . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . dt_demo . main () The main entry point for the game.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;dt_demo"},{"location":"#glitchygames.examples.joystick_demo","text":"Joystick Demo. Classes glitchygames.examples.joystick_demo.ShapesSprite Bases: Sprite A sprite class for drawing shapes. Attributes glitchygames . examples . joystick_demo . ShapesSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . rectangle : pygame . rect . Rect property Get the rectangle. Returns: Rect \u2013 pygame.rect.Rect: The rectangle. Functions glitchygames . examples . joystick_demo . ShapesSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . __str__ () Returns a string representation of the sprite. glitchygames . examples . joystick_demo . ShapesSprite . __init__ ( * args , ** kwargs ) Initialize a ShapesSprite. Parameters: *args \u2013 Arguments to pass to the parent class. **kwargs \u2013 Keyword arguments to pass to the parent class. Returns: None \u2013 Self glitchygames . examples . joystick_demo . ShapesSprite . move ( pos ) Move the sprite to a new position. Parameters: pos ( tuple ) \u2013 The new position. Returns: None \u2013 None glitchygames . examples . joystick_demo . ShapesSprite . update () Update the sprite. Returns: None \u2013 None glitchygames.examples.joystick_demo.JoystickScene Bases: Scene A scene for testing joysticks. Attributes glitchygames . examples . joystick_demo . JoystickScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . joystick_demo . JoystickScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . joystick_demo . JoystickScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . JoystickScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . update () Update the active scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . play () Play the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . joystick_demo . JoystickScene . __init__ ( groups = None ) Initialize the JoystickScene. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . load_resources () Load the resources. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . render ( screen ) Render the scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_up ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_left_mouse_button_down ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_pew_pew_event ( event ) Handle pew pew events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_recharge_event ( event ) Handle recharge events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . JoystickScene . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames.examples.joystick_demo.Game Bases: Scene The main game class. This is where the magic happens. Attributes glitchygames . examples . joystick_demo . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . joystick_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . joystick_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . joystick_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . update () Update the active scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . setup () Setup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . joystick_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . __init__ ( options ) Initialize the game. Parameters: options ( dict ) \u2013 The options passed to the game. Returns: None \u2013 None glitchygames . examples . joystick_demo . Game . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None Functions glitchygames . examples . joystick_demo . main () The main function. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;joystick_demo"},{"location":"#glitchygames.examples.paddleslap","text":"Paddle Slap. This is a simple game where you try to keep the ball from hitting your side of the screen. Classes glitchygames.examples.paddleslap.TextSprite Bases: Sprite A sprite class for displaying text. Attributes glitchygames . examples . paddleslap . TextSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . examples . paddleslap . TextSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . examples . paddleslap . TextSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . paddleslap . TextSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . __str__ () Returns a string representation of the sprite. glitchygames . examples . paddleslap . TextSprite . __init__ ( background_color = BLACKLUCENT , alpha = 0 , x = 0 , y = 0 , groups = None ) Initialize the text sprite. Parameters: background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text. x ( int , default: 0 ) \u2013 The x position of the text. y ( int , default: 0 ) \u2013 The y position of the text. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . paddleslap . TextSprite . update () Update the text sprite. Returns: None \u2013 None glitchygames.examples.paddleslap.Game Bases: Scene The main game class. This is where the magic happens. Attributes glitchygames . examples . paddleslap . Game . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . examples . paddleslap . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . paddleslap . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . paddleslap . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . paddleslap . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . args ( parser ) classmethod Add arguments to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . setup () Set up the game. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . dt_tick ( dt ) Update the game. Parameters: dt ( float ) \u2013 The delta time. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . update () Update the game. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_controller_axis_motion_event ( event ) Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . paddleslap . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . paddleslap . main () The main function. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;paddleslap"},{"location":"#glitchygames.examples.text_input_demo","text":"Text Input Demo. Classes glitchygames.examples.text_input_demo.Game Bases: Scene The main game class. Attributes glitchygames . examples . text_input_demo . Game . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . examples . text_input_demo . Game . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . examples . text_input_demo . Game . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . play () Play the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . pause () Pause the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . examples . text_input_demo . Game . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . __init__ ( options , groups = None ) Initialize the Game. Parameters: options ( dict ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . setup () classmethod Set up the game. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . update () Update the game. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_input_box_submit_event ( control ) Handle input box submit events. Parameters: control ( object ) \u2013 The control that submitted the event. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_mouse_button_up_event ( event ) Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . examples . text_input_demo . Game . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None Functions glitchygames . examples . text_input_demo . main () The main entry point for the game.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;text_input_demo"},{"location":"#glitchygames.fonts","text":"Fonts. This is a simple font manager that can be used to load fonts.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;fonts"},{"location":"#glitchygames.fonts-classes","text":"","title":"Classes"},{"location":"#glitchygames.fonts.FontManager","text":"Bases: ResourceManager A font manager. Classes glitchygames.fonts.FontManager.FontProxy Bases: FontEvents , ResourceManager A font proxy. Functions glitchygames . fonts . FontManager . FontProxy . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . fonts . FontManager . FontProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . fonts . FontManager . FontProxy . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . fonts . FontManager . FontProxy . on_font_changed_event ( event ) abstractmethod Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . fonts . FontManager . FontProxy . __init__ ( game = None ) Initialize the font proxy. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None Functions glitchygames . fonts . FontManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . fonts . FontManager . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Raises: AttributeError \u2013 If the attribute is not found. glitchygames . fonts . FontManager . __init__ ( game = None ) Initialize the font manager. Parameters: game ( object , default: None ) \u2013 The game object. Returns: None \u2013 None glitchygames . fonts . FontManager . args ( parser ) classmethod Add font options to the argument parser. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: ArgumentParser \u2013 argparse.ArgumentParser glitchygames . fonts . FontManager . font ( font_config = None ) classmethod Return a font object. If the font requested can't be found then bitstream_vera will be loaded instead. Note that if you are trying to package your game with pyinstaller, you'll need to bundle your game's fonts with the pyinstaller invocation. Make sure you have distribution rights to the fonts you're including with your game. bitstream_vera is a permissively licensed font that can be used with your game. Parameters: font_config ( dict | None , default: None ) \u2013 The font configuration. Returns: Font | SysFont \u2013 pygame.freetype.Font | pygame.freetype.SysFont","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FontManager"},{"location":"#glitchygames.game_objects","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;game_objects"},{"location":"#glitchygames.game_objects-functions","text":"","title":"Functions"},{"location":"#glitchygames.game_objects.load_sound","text":"Load a sound file. Parameters: snd_file ( str ) \u2013 The sound file to load. volume ( float , default: 0.25 ) \u2013 The volume to set the sound to. Returns: Sound \u2013 pygame.mixer.Sound: The sound object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;load_sound"},{"location":"#glitchygames.game_objects-modules","text":"","title":"Modules"},{"location":"#glitchygames.game_objects.ball","text":"Ball. Classes glitchygames.game_objects.ball.BallSprite Bases: Sprite Ball Sprite. Attributes glitchygames . game_objects . ball . BallSprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . ball . BallSprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . game_objects . ball . BallSprite . color : tuple [ int , int , int ] property writable Get the color of the ball. Returns: tuple [ int , int , int ] \u2013 tuple[int, int, int]: The color of the ball. Functions glitchygames . game_objects . ball . BallSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . ball . BallSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . ball . BallSprite . __init__ ( x = 0 , y = 0 , width = 20 , height = 20 , groups = None , collision_sound = None ) Initialize the ball sprite. Parameters: x ( int , default: 0 ) \u2013 The x position of the ball. y ( int , default: 0 ) \u2013 The y position of the ball. width ( int , default: 20 ) \u2013 The width of the ball. height ( int , default: 20 ) \u2013 The height of the ball. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . reset () Reset the ball. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . bounce ( diff ) Bounce the ball. Parameters: diff ( int ) \u2013 The difference. Returns: None \u2013 None glitchygames . game_objects . ball . BallSprite . update () Update the ball. Returns: None \u2013 None Modules","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;ball"},{"location":"#glitchygames.game_objects.paddle","text":"Paddle. Classes glitchygames.game_objects.paddle.BasePaddle Bases: Sprite Base Paddle class. Attributes glitchygames . game_objects . paddle . BasePaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . BasePaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . BasePaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . update () Update the sprite. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . BasePaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . BasePaddle . __init__ ( axis , speed , name , color , x , y , width , height , groups = None , collision_sound = None ) Initialize the paddle. Parameters: axis ( Horizontal | Vertical ) \u2013 The axis to move on. speed ( int ) \u2013 The speed to move at. name ( str ) \u2013 The name of the paddle. color ( tuple ) \u2013 The color of the paddle. x ( int ) \u2013 The x position of the paddle. y ( int ) \u2013 The y position of the paddle. width ( int ) \u2013 The width of the paddle. height ( int ) \u2013 The height of the paddle. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . BasePaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . BasePaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames.game_objects.paddle.HorizontalPaddle Bases: BasePaddle Horizontal Paddle. Attributes glitchygames . game_objects . paddle . HorizontalPaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . HorizontalPaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . HorizontalPaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . HorizontalPaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames . game_objects . paddle . HorizontalPaddle . __init__ ( name , size , position , color , speed , groups = None , collision_sound = None ) Initialize the horizontal paddle. Parameters: name ( str ) \u2013 The name of the paddle. size ( tuple ) \u2013 The size of the paddle. position ( tuple ) \u2013 The position of the paddle. color ( tuple ) \u2013 The color of the paddle. speed ( int ) \u2013 The speed to move at. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . update () Update the paddle. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . left () Move left. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . right () Move right. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . stop () Stop moving. Returns: None \u2013 None glitchygames . game_objects . paddle . HorizontalPaddle . speed_up () Speed up. Returns: None \u2013 None glitchygames.game_objects.paddle.VerticalPaddle Bases: BasePaddle Vertical Paddle. Attributes glitchygames . game_objects . paddle . VerticalPaddle . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . game_objects . paddle . VerticalPaddle . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . game_objects . paddle . VerticalPaddle . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . __str__ () Returns a string representation of the sprite. glitchygames . game_objects . paddle . VerticalPaddle . move_horizontal () Move the paddle horizontally. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . move_vertical () Move the paddle vertically. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . is_at_bottom_of_screen () Check if the paddle is at the bottom of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the bottom of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_top_of_screen () Check if the paddle is at the top of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the top of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_left_of_screen () Check if the paddle is at the left of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the left of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . is_at_right_of_screen () Check if the paddle is at the right of the screen. Returns: bool ( bool ) \u2013 True if the paddle is at the right of the screen, False otherwise. glitchygames . game_objects . paddle . VerticalPaddle . __init__ ( name , size , position , color , speed , groups = None , collision_sound = None ) Initialize the vertical paddle. Parameters: name ( str ) \u2013 The name of the paddle. size ( tuple ) \u2013 The size of the paddle. position ( tuple ) \u2013 The position of the paddle. color ( tuple ) \u2013 The color of the paddle. speed ( int ) \u2013 The speed to move at. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. collision_sound ( str | None , default: None ) \u2013 The sound to play on collision. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . update () Update the paddle. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . up () Move up. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . down () Move down. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . stop () Stop moving. Returns: None \u2013 None glitchygames . game_objects . paddle . VerticalPaddle . speed_up () Speed up. Returns: None \u2013 None Functions","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;paddle"},{"location":"#glitchygames.game_objects.sounds","text":"Sounds. Classes glitchygames.game_objects.sounds.SFX Sound effects.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;sounds"},{"location":"#glitchygames.interfaces","text":"Interfaces for the game.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;interfaces"},{"location":"#glitchygames.interfaces-classes","text":"","title":"Classes"},{"location":"#glitchygames.interfaces.SpriteInterface","text":"Sprite interface. Functions glitchygames . interfaces . SpriteInterface . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . interfaces . SpriteInterface . update () Update the sprite. Returns: None \u2013 None glitchygames . interfaces . SpriteInterface . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SpriteInterface"},{"location":"#glitchygames.interfaces.SceneInterface","text":"Scene interface. Functions glitchygames . interfaces . SceneInterface . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . play () Play the scene. Returns: None \u2013 None glitchygames . interfaces . SceneInterface . pause () Pause the scene. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SceneInterface"},{"location":"#glitchygames.movement","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;movement"},{"location":"#glitchygames.movement-modules","text":"","title":"Modules"},{"location":"#glitchygames.movement.horizontal","text":"Horizontal Movement. This is a simple horizontal movement class that can be used to move sprites left and right. Classes glitchygames.movement.horizontal.Horizontal Horizontal movement. Functions glitchygames . movement . horizontal . Horizontal . __init__ ( speed ) Initialize the horizontal movement. Parameters: speed ( int ) \u2013 The speed to move at. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . left () Move left. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . right () Move right. Returns: None \u2013 None glitchygames . movement . horizontal . Horizontal . stop () Stop moving. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;horizontal"},{"location":"#glitchygames.movement.speed","text":"Speed. This is a simple speed class that can be used to speed up sprites. Classes glitchygames.movement.speed.Speed Speed. Functions glitchygames . movement . speed . Speed . __init__ ( x = 0 , y = 0 , increment = 0.2 ) Initialize the speed. Parameters: x ( int , default: 0 ) \u2013 The x speed. y ( int , default: 0 ) \u2013 The y speed. increment ( float , default: 0.2 ) \u2013 The amount to increment the speed by. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up () Speed up. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up_horizontal () Speed up horizontally. Returns: None \u2013 None glitchygames . movement . speed . Speed . speed_up_vertical () Speed up vertically. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;speed"},{"location":"#glitchygames.movement.vertical","text":"Vertical Movement. This is a simple vertical movement class that can be used to move sprites up and down. Classes glitchygames.movement.vertical.Vertical Vertical movement. Functions glitchygames . movement . vertical . Vertical . __init__ ( speed ) Initialize the vertical movement. Parameters: speed ( int ) \u2013 The speed to move at. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . up () Move up. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . down () Move down. Returns: None \u2013 None glitchygames . movement . vertical . Vertical . stop () Stop moving. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;vertical"},{"location":"#glitchygames.pixels","text":"Pixel data handling.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;pixels"},{"location":"#glitchygames.pixels-functions","text":"","title":"Functions"},{"location":"#glitchygames.pixels.indexed_rgb_triplet_generator","text":"Yield (R, G, B) pixel tuples from a buffer of pixel tuples.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;indexed_rgb_triplet_generator"},{"location":"#glitchygames.pixels.rgb_555_triplet_generator","text":"Yield (R, G, B) pixel tuples for 555 formated color data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_555_triplet_generator"},{"location":"#glitchygames.pixels.rgb_565_triplet_generator","text":"Yield (R, G, B) tuples for 565 formatted color data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_565_triplet_generator"},{"location":"#glitchygames.pixels.rgb_triplet_generator","text":"Yield (R, G, B) tuples for the provided pixel data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;rgb_triplet_generator"},{"location":"#glitchygames.pixels.image_from_pixels","text":"Produce a pygame.image object for the specified [(R, G, B), ...] pixel data.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;image_from_pixels"},{"location":"#glitchygames.pixels.pixels_from_data","text":"Expand raw pixel data into [(R, G, B), ...] triplets.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;pixels_from_data"},{"location":"#glitchygames.pixels.pixels_from_path","text":"Expand raw pixel data from file into [(R, G, B), ...] triplets.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;pixels_from_path"},{"location":"#glitchygames.scenes","text":"Glitchy Games Engine scenes module.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;scenes"},{"location":"#glitchygames.scenes-classes","text":"","title":"Classes"},{"location":"#glitchygames.scenes.SceneManager","text":"Bases: SceneInterface , EventManager Glitchy Games Scene Manager. The scene manager is responsible for managing the active scene, and for processing events. Attributes glitchygames . scenes . SceneManager . game_engine : object property writable Return the game engine. Returns: object ( object ) \u2013 The game engine. glitchygames . scenes . SceneManager . all_sprites : pygame . sprite . LayeredDirty | None property Return the active scene's sprite group. Returns: LayeredDirty | None \u2013 pygame.sprite.LayeredDirty | None: The active scene's sprite group. Classes glitchygames.scenes.SceneManager.EventProxy Proxy for events. Functions glitchygames . scenes . SceneManager . EventProxy . __init__ ( event_source ) Initialize the event proxy. Parameters: event_source ( object ) \u2013 The event source. Returns: None \u2013 None glitchygames . scenes . SceneManager . EventProxy . unhandled_event ( * args , ** kwargs ) Handle unhandled events. Parameters: *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: None \u2013 None glitchygames . scenes . SceneManager . EventProxy . __getattr__ ( attr ) Get an attribute. This method is called when an attribute is not found. Parameters: attr ( str ) \u2013 The attribute to get. Returns: Callable \u2013 The attribute. Functions glitchygames . scenes . SceneManager . __new__ ( * args , ** kwargs ) Create a new instance of the class. This method is called when a new instance of the class Parameters: cls ( Self ) \u2013 The class. *args \u2013 The positional arguments. **kwargs \u2013 The keyword arguments. Returns: object \u2013 The new instance of the class. Raises: AttributeError \u2013 If the event is not handled by any proxy. glitchygames . scenes . SceneManager . pause () Pause the scene. Returns: None \u2013 None glitchygames . scenes . SceneManager . __init__ () Initialize the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( Scene ) \u2013 The next scene to switch to. Returns: None \u2013 None glitchygames . scenes . SceneManager . start () Start the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . terminate () Terminate the scene manager. Returns: None \u2013 None glitchygames . scenes . SceneManager . quit () Quit the game. Returns: None \u2013 None glitchygames . scenes . SceneManager . quit_game () Quit the game. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . on_game_event ( event ) Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . SceneManager . register_game_event ( event_type , callback ) Register a game event. Parameters: event_type ( EventType ) \u2013 The event type to register. callback ( Callable ) \u2013 The callback to call when the event is triggered. Returns: None \u2013 None glitchygames . scenes . SceneManager . __getattr__ ( attr ) Proxy calls to the active scene. Parameters: attr ( str ) \u2013 The attribute to proxy. Returns: Callable ( Callable ) \u2013 The callable object.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SceneManager"},{"location":"#glitchygames.scenes.Scene","text":"Bases: SceneInterface , SpriteInterface , AllEventStubs Scene object base class. Subclass this to properly receive on_*_event() messages automatically. Attributes glitchygames . scenes . Scene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. glitchygames . scenes . Scene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. Functions glitchygames . scenes . Scene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . scenes . Scene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . scenes . Scene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . scenes . Scene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . scenes . Scene . play () Play the scene. Returns: None \u2013 None glitchygames . scenes . Scene . pause () Pause the scene. Returns: None \u2013 None glitchygames . scenes . Scene . __init__ ( options = None , groups = None ) Initialize the scene. Parameters: options ( dict | None , default: None ) \u2013 The options passed to the game. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . scenes . Scene . setup () Setup the scene. Returns: None \u2013 None glitchygames . scenes . Scene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . scenes . Scene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . scenes . Scene . update () Update the active scene. Returns: None \u2013 None glitchygames . scenes . Scene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . scenes . Scene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . scenes . Scene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . scenes . Scene . load_resources () Load the scene's resources. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Scene"},{"location":"#glitchygames.scenes-modules","text":"","title":"Modules"},{"location":"#glitchygames.sprites","text":"Glitchy Games Engine sprite module.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;sprites"},{"location":"#glitchygames.sprites-classes","text":"","title":"Classes"},{"location":"#glitchygames.sprites.RootSprite","text":"Bases: MouseEvents , SpriteInterface , DirtySprite A root sprite class. All Glitchy Games sprites inherit from this class. Functions glitchygames . sprites . RootSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . RootSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . RootSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . RootSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . RootSprite . on_mouse_motion_event ( event ) abstractmethod Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_drag_event ( event , trigger ) abstractmethod Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_drop_event ( event , trigger ) abstractmethod Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_drag_event ( event , trigger ) abstractmethod Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_drop_event ( event , trigger ) abstractmethod Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_drag_event ( event , trigger ) abstractmethod Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_drop_event ( event , trigger ) abstractmethod Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_drag_event ( event , trigger ) abstractmethod Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_drop_event ( event , trigger ) abstractmethod Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_focus_event ( event , entering_focus ) abstractmethod Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_unfocus_event ( event , leaving_focus ) abstractmethod Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_button_up_event ( event ) abstractmethod Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_button_up_event ( event ) abstractmethod Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_button_up_event ( event ) abstractmethod Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_button_up_event ( event ) abstractmethod Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_button_down_event ( event ) abstractmethod Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_left_mouse_button_down_event ( event ) abstractmethod Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_middle_mouse_button_down_event ( event ) abstractmethod Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_right_mouse_button_down_event ( event ) abstractmethod Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_scroll_down_event ( event ) abstractmethod Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_scroll_up_event ( event ) abstractmethod Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . on_mouse_wheel_event ( event ) abstractmethod Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . RootSprite . __init__ ( groups = None ) Initialize a RootSprite. Parameters: groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;RootSprite"},{"location":"#glitchygames.sprites.Sprite","text":"Bases: RootSprite A convenience class for handling all of the common sprite behaviors. Attributes glitchygames . sprites . Sprite . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . sprites . Sprite . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . sprites . Sprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . Sprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . Sprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . Sprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . Sprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a Sprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str | None , default: None ) \u2013 The name of the sprite. parent ( object | None , default: None ) \u2013 The parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . sprites . Sprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . Sprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . Sprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . Sprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . Sprite . __str__ () Returns a string representation of the sprite.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Sprite"},{"location":"#glitchygames.sprites.BitmappySprite","text":"Bases: Sprite A sprite that loads from a Bitmappy config file. Functions glitchygames . sprites . BitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . BitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . BitmappySprite . __init__ ( x , y , width , height , name = None , filename = None , focusable = False , parent = None , groups = None ) Subclass to load sprite files. Parameters: x ( int ) \u2013 the x coordinate of the sprite. y ( int ) \u2013 the y coordinate of the sprite. width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. name ( str | None , default: None ) \u2013 optional, the name of the sprite. filename ( str | None , default: None ) \u2013 optional, the BitmappySprite config to load. focusable ( bool , default: False ) \u2013 optional, whether or not the sprite can receive focus. parent ( object , default: None ) \u2013 optional, the parent of the sprite. groups ( LayeredDirty | None , default: None ) \u2013 optional, the sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . BitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . BitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . BitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . BitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;BitmappySprite"},{"location":"#glitchygames.sprites.Singleton","text":"A generic singleton class. Functions glitchygames . sprites . Singleton . __new__ ( * args , ** kwargs ) Create a new instance of the Singleton. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: Singleton ( Self ) \u2013 The instance of the Singleton.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;Singleton"},{"location":"#glitchygames.sprites.SingletonBitmappySprite","text":"Bases: BitmappySprite A singleton class for handling singleton sprites, like mouse pointers. Functions glitchygames . sprites . SingletonBitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . SingletonBitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . SingletonBitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . SingletonBitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . SingletonBitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . SingletonBitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . SingletonBitmappySprite . __new__ ( * args , ** kwargs ) Create a new instance of the SingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: SingletonBitmappySprite ( Self ) \u2013 The instance of the SingletonBitmappySprite. glitchygames . sprites . SingletonBitmappySprite . __init__ ( x , y , width , height , name = None , groups = None ) Initialize the SingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SingletonBitmappySprite"},{"location":"#glitchygames.sprites.FocusableSingletonBitmappySprite","text":"Bases: BitmappySprite A singleton class for handling all of the focusable sprite behaviors. Functions glitchygames . sprites . FocusableSingletonBitmappySprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . update () Update the sprite. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . __str__ () Returns a string representation of the sprite. glitchygames . sprites . FocusableSingletonBitmappySprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . sprites . FocusableSingletonBitmappySprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . sprites . FocusableSingletonBitmappySprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . sprites . FocusableSingletonBitmappySprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . sprites . FocusableSingletonBitmappySprite . __new__ ( * args , ** kwargs ) Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames . sprites . FocusableSingletonBitmappySprite . __init__ ( x , y , width , height , name = None , groups = None ) Initialize the FocusableSingletonBitmappySprite. Parameters: x ( int ) \u2013 The x coordinate of the sprite. y ( int ) \u2013 The y coordinate of the sprite. width ( int ) \u2013 The width of the sprite. height ( int ) \u2013 The height of the sprite. name ( str , default: None ) \u2013 The name of the sprite. groups ( LayeredDirty , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;FocusableSingletonBitmappySprite"},{"location":"#glitchygames.sprites-functions","text":"","title":"Functions"},{"location":"#glitchygames.templates","text":"This module helps build a project from templates. It's a wrapper around cookiecutter.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;templates"},{"location":"#glitchygames.templates-functions","text":"","title":"Functions"},{"location":"#glitchygames.templates.get_templates","text":"Returns a list of templates.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;get_templates"},{"location":"#glitchygames.templates.build","text":"Builds the project from the template, using cookiecutter.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-function\"></code>&nbsp;build"},{"location":"#glitchygames.tools","text":"","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;tools"},{"location":"#glitchygames.tools-modules","text":"","title":"Modules"},{"location":"#glitchygames.tools.bitmappy","text":"Glitchy Games Bitmap Editor. Classes glitchygames.tools.bitmappy.GGUnhandledMenuItemError Bases: Exception Glitchy Games Unhandled Menu Item Error. glitchygames.tools.bitmappy.InputConfirmationDialogScene Bases: Scene Input Confirmation Dialog Scene. Attributes glitchygames . tools . bitmappy . InputConfirmationDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . InputConfirmationDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . InputConfirmationDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . InputConfirmationDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Input Confirmation Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . InputConfirmationDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.tools.bitmappy.NewCanvasDialogScene Bases: InputConfirmationDialogScene New Canvas Dialog Scene. Attributes glitchygames . tools . bitmappy . NewCanvasDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . NewCanvasDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . NewCanvasDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . NewCanvasDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the New Canvas Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . NewCanvasDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.LoadDialogScene Bases: InputConfirmationDialogScene Load Dialog Scene. Attributes glitchygames . tools . bitmappy . LoadDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . LoadDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . LoadDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . LoadDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . LoadDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Load Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . LoadDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.SaveDialogScene Bases: InputConfirmationDialogScene Save Dialog Scene. Attributes glitchygames . tools . bitmappy . SaveDialogScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . SaveDialogScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . SaveDialogScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . SaveDialogScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_button_up_event ( event ) Handle the mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_button_up_event ( event ) Handle right mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_down_event ( event ) Handle the key down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_up_event ( event ) Handle the key up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_menu_item_event ( event ) cached Handle menu item events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . SaveDialogScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . dismiss () Dismiss the dialog. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_cancel_event ( event , trigger ) Handle the cancel event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_input_box_submit_event ( control ) Handle the input box submit event. Parameters: control ( object ) \u2013 The control object. Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . __init__ ( previous_scene , options = None , groups = None ) Initialize the Save Dialog Scene. Parameters: previous_scene ( Scene ) \u2013 The previous scene. options ( dict , default: None ) \u2013 Options for the scene. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . SaveDialogScene . on_confirm_event ( event , trigger ) Handle the confirm event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.BitmapPixelSprite Bases: BitmappySprite Bitmap Pixel Sprite. Attributes glitchygames . tools . bitmappy . BitmapPixelSprite . pixel_color : tuple [ int , int , int ] property writable Get the pixel color. Returns: tuple [ int , int , int ] \u2013 tuple[int, int, int]: The pixel color. Functions glitchygames . tools . bitmappy . BitmapPixelSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . BitmapPixelSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . BitmapPixelSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . BitmapPixelSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . BitmapPixelSprite . __init__ ( x = 0 , y = 0 , width = 1 , height = 1 , name = None , pixel_number = 0 , border_thickness = 1 , groups = None ) Initialize the Bitmap Pixel Sprite. Parameters: x ( int , default: 0 ) \u2013 The x coordinate. Defaults to 0. y ( int , default: 0 ) \u2013 The y coordinate. Defaults to 0. width ( int , default: 1 ) \u2013 The width. Defaults to 1. height ( int , default: 1 ) \u2013 The height. Defaults to 1. name ( str , default: None ) \u2013 The name. Defaults to None. pixel_number ( int , default: 0 ) \u2013 The pixel number. Defaults to 0. border_thickness ( int , default: 1 ) \u2013 The border thickness. Defaults to 1. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_pixel_update_event ( event ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapPixelSprite . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames.tools.bitmappy.Canvas Bases: BitmappySprite Canvas. Functions glitchygames . tools . bitmappy . Canvas . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . Canvas . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . Canvas . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . Canvas . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . Canvas . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . Canvas . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . Canvas . __init__ () Create a Canvas. glitchygames . tools . bitmappy . Canvas . update () Update the canvas. glitchygames.tools.bitmappy.CanvasSprite Bases: BitmappySprite Canvas Sprite. Functions glitchygames . tools . bitmappy . CanvasSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . CanvasSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . __str__ () Returns a string representation of the sprite. glitchygames . tools . bitmappy . CanvasSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . CanvasSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . CanvasSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . CanvasSprite . __init__ ( x , y , width , height , name , has_mini_view = True , groups = None ) Initialize the Canvas Sprite. Parameters: x ( int ) \u2013 The x coordinate. y ( int ) \u2013 The y coordinate. width ( int ) \u2013 The width. height ( int ) \u2013 The height. name ( str ) \u2013 The name. has_mini_view ( bool , default: True ) \u2013 Whether or not to have a mini view. Defaults to True. groups ( None , default: None ) \u2013 Sprite groups. Defaults to None. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_pixel_update_event ( event , trigger ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_new_file_event ( event , trigger ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_save_file_event ( event , trigger ) Handle the save file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . CanvasSprite . on_load_file_event ( event , trigger ) Handle the load file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames.tools.bitmappy.MiniView Bases: CanvasSprite Mini View. Functions glitchygames . tools . bitmappy . MiniView . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . MiniView . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . tools . bitmappy . MiniView . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . tools . bitmappy . MiniView . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . tools . bitmappy . MiniView . on_pixel_update_event ( event , trigger ) Handle the pixel update event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_new_file_event ( event , trigger ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_save_file_event ( event , trigger ) Handle the save file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_load_file_event ( event , trigger ) Handle the load file event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . pixels_per_pixel ( pixels_across , pixels_tall ) staticmethod Get the pixels per pixel. Parameters: pixels_across ( int ) \u2013 The pixels across. pixels_tall ( int ) \u2013 The pixels tall. Returns: tuple [ int , int ] \u2013 tuple[int, int]: The pixels per pixel. glitchygames . tools . bitmappy . MiniView . __init__ ( x = 0 , y = 0 , width = 0 , height = 0 , name = None , border_thickness = 0 , pixels = None , groups = None ) Initialize the Mini View. Parameters: x ( int , default: 0 ) \u2013 The x coordinate. Defaults to 0. y ( int , default: 0 ) \u2013 The y coordinate. Defaults to 0. width ( int , default: 0 ) \u2013 The width. Defaults to 0. height ( int , default: 0 ) \u2013 The height. Defaults to 0. name ( str , default: None ) \u2013 The name. Defaults to None. border_thickness ( int , default: 0 ) \u2013 The border thickness. Defaults to 0. pixels ( list , default: None ) \u2013 The pixels. Defaults to None. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . update () Update the sprite. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . MiniView . __str__ () Get the string representation of the Mini View. Returns: str ( str ) \u2013 The string representation of the Mini View. glitchygames.tools.bitmappy.BitmapEditorScene Bases: Scene Bitmap Editor Scene. Attributes glitchygames . tools . bitmappy . BitmapEditorScene . background_color : pygame . Color property writable Return the background color. Returns: Color \u2013 pygame.Color: The background color. glitchygames . tools . bitmappy . BitmapEditorScene . screenshot : pygame . Surface property Return a screenshot of the scene. Returns: Surface \u2013 pygame.Surface: The scene screenshot. Functions glitchygames . tools . bitmappy . BitmapEditorScene . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . tools . bitmappy . BitmapEditorScene . on_window_close_event ( event ) Handle window close events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_enter_event ( event ) Handle window enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_exposed_event ( event ) Handle window exposed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_focus_gained_event ( event ) Handle window focus gained events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_focus_lost_event ( event ) Handle window focus lost events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_hidden_event ( event ) Handle window hidden events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_hit_test_event ( event ) Handle window hit test events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_leave_event ( event ) Handle window leave events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_maximized_event ( event ) Handle window maximized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_minimized_event ( event ) Handle window minimized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_moved_event ( event ) Handle window moved events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_resized_event ( event ) Handle window resized events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_restored_event ( event ) Handle window restored events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_shown_event ( event ) Handle window shown events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_size_changed_event ( event ) Handle window size changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_window_take_focus_event ( event ) Handle window take focus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_text_editing_event ( event ) Handle text editing events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_text_input_event ( event ) Handle text input events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_motion_event ( event ) cached Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_drop_event ( event , trigger ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_drag_event ( event , trigger ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_drop_event ( event , trigger ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_drag_event ( event , trigger ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_drop_event ( event , trigger ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The event trigger. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_focus_event ( event , entering_focus ) cached Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. entering_focus ( object ) \u2013 The object that is entering focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_unfocus_event ( event , leaving_focus ) cached Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. leaving_focus ( object ) \u2013 The object that is leaving focus. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_button_up_event ( event ) cached Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_button_up_event ( event ) Handle middle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_button_down_event ( event ) cached Handle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_middle_mouse_button_down_event ( event ) Handle middle mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_button_down_event ( event ) Handle right mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_scroll_down_event ( event ) cached Handle mouse scroll down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_scroll_up_event ( event ) cached Handle mouse scroll up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_mouse_wheel_event ( event ) cached Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_down_event ( event ) cached Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_chord_up_event ( event , keys ) cached Handle key chord up events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_key_chord_down_event ( event , keys ) cached Handle key chord down events. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys in the chord. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_axis_motion_event ( event ) cached Handle joystick axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_button_down_event ( event ) Handle joy button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_button_up_event ( event ) Handle joy button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_hat_motion_event ( event ) cached Handle joystick hat motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_ball_motion_event ( event ) cached Handle joystick ball motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_device_added_event ( event ) cached Handle joystick device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_joy_device_removed_event ( event ) cached Handle joystick device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_active_event ( event ) cached Handle active events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_fps_event ( event ) Handle FPS events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_game_event ( event ) cached Handle game events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_sys_wm_event ( event ) Handle sys wm events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_user_event ( event ) Handle user events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_video_expose_event ( event ) Handle video expose events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_video_resize_event ( event ) Handle video resize events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_quit_event ( event ) Handle quit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_font_changed_event ( event ) cached Handle font changed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_down_event ( event ) Handle touch down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_motion_event ( event ) Handle touch motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_touch_up_event ( event ) Handle touch up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_down_event ( event ) cached Handle multi finger down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_motion_event ( event ) cached Handle multi finger motion event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_multi_touch_up_event ( event ) cached Handle multi finger up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_begin_event ( event ) cached Handle drop begin event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_file_event ( event ) cached Handle drop file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_text_event ( event ) cached Handle drop text event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_drop_complete_event ( event ) cached Handle drop complete event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_axis_motion_event ( event ) cached Handle controller axis motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_button_down_event ( event ) Handle controller button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_button_up_event ( event ) Handle controller button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_added_event ( event ) cached Handle controller device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_remapped_event ( event ) cached Handle controller device remapped events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_device_removed_event ( event ) cached Handle controller device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_down_event ( event ) cached Handle controller touchpad down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_motion_event ( event ) cached Handle controller touchpad motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_controller_touchpad_up_event ( event ) cached Handle controller touchpad up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_audio_device_added_event ( event ) cached Handle audio device added events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_audio_device_removed_event ( event ) cached Handle audio device removed events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . update () Update the active scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . render ( screen ) Render the active scene. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . switch_to_scene ( next_scene ) Switch to the next scene. Parameters: next_scene ( SceneInterface ) \u2013 The next scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . terminate () Terminate the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . play () Play the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . pause () Pause the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . setup () Setup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . cleanup () Cleanup the scene. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . dt_tick ( dt ) Update the scene's delta time. Parameters: dt ( float ) \u2013 The delta time to update. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . sprites_at_position ( pos ) Return the sprites at a given position. Parameters: pos ( tuple ) \u2013 The position to check. Returns: list [ Sprite ] | None \u2013 list[pygame.sprite.Sprite] | None: The sprites at the given position. glitchygames . tools . bitmappy . BitmapEditorScene . load_resources () Load the scene's resources. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . __init__ ( options , groups = None ) Initialize the Bitmap Editor Scene. Parameters: options ( dict ) \u2013 The options. groups ( LayeredDirty , default: None ) \u2013 Sprite groups. Defaults to pygame.sprite.LayeredDirty(). Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_menu_item_event ( event ) Handle the menu item event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_new_file_event ( event ) Handle the new file event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_new_canvas_dialog_event ( event ) Handle the new canvas dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_load_dialog_event ( event ) Handle the load dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_save_dialog_event ( event ) Handle the save dialog event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_color_well_event ( event , trigger ) Handle the color well event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_slider_event ( event , trigger ) Handle the slider event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_right_mouse_button_up_event ( event ) Handle the right mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_button_down_event ( event ) Handle the left mouse button down event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_button_up_event ( event ) Handle the left mouse button up event. Parameters: event ( Event ) \u2013 The pygame event. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . on_left_mouse_drag_event ( event , trigger ) Handle the left mouse drag event. Parameters: event ( Event ) \u2013 The pygame event. trigger ( object ) \u2013 The trigger object. Returns: None \u2013 None glitchygames . tools . bitmappy . BitmapEditorScene . args ( parser ) classmethod Add command line arguments. Parameters: parser ( ArgumentParser ) \u2013 The argument parser. Returns: None \u2013 None Functions glitchygames . tools . bitmappy . main () Main function. Returns: None \u2013 None Modules","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;bitmappy"},{"location":"#glitchygames.ui","text":"GlitchyGames UI classes.","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-module\"></code>&nbsp;ui"},{"location":"#glitchygames.ui-classes","text":"","title":"Classes"},{"location":"#glitchygames.ui.MenuBar","text":"Bases: FocusableSingletonBitmappySprite A menu bar class. Functions glitchygames . ui . MenuBar . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . MenuBar . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . MenuBar . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . MenuBar . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . MenuBar . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuBar . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . __str__ () Returns a string representation of the sprite. glitchygames . ui . MenuBar . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . MenuBar . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . MenuBar . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . MenuBar . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . MenuBar . __new__ ( * args , ** kwargs ) Create a new instance of the FocusableSingletonBitmappySprite. Parameters: *args \u2013 The arguments to pass to the constructor. **kwargs \u2013 The keyword arguments to pass to the constructor. Returns: FocusableSingletonBitmappySprite ( Self ) \u2013 The instance of the FocusableSingletonBitmappySprite. glitchygames . ui . MenuBar . __init__ ( x , y , width , height , name = None , groups = None ) Initialize a MenuBar. Parameters: x ( int ) \u2013 The x coordinate of the menu bar. y ( int ) \u2013 The y coordinate of the menu bar. width ( int ) \u2013 The width of the menu bar. height ( int ) \u2013 The height of the menu bar. name ( str | None , default: None ) \u2013 The name of the menu bar. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuBar . add_menu ( menu ) Add a menu to the menu bar. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames . ui . MenuBar . add_menu_item ( menu_item , menu = None ) Add a menu item to the menu bar. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar | None , default: None ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames . ui . MenuBar . update () Update the menu bar. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_drop_event ( event ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drag_event ( event ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_middle_mouse_drop_event ( event ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drag_event ( event , trigger ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_drop_event ( event , trigger ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_enter_event ( event ) Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_exit_event ( event ) Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drag_event ( event ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_right_mouse_drop_event ( event ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuBar . on_mouse_wheel_event ( event ) Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MenuBar"},{"location":"#glitchygames.ui.MenuItem","text":"Bases: BitmappySprite A menu item class. This class represents a menu item. It can be a root level menu item or a sub menu item. Parameters: BitmappySprite ( BitmappySprite ) \u2013 The base sprite class. Returns: \u2013 None Functions glitchygames . ui . MenuItem . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . MenuItem . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . MenuItem . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . MenuItem . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . MenuItem . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . MenuItem . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . __str__ () Returns a string representation of the sprite. glitchygames . ui . MenuItem . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . MenuItem . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . MenuItem . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . MenuItem . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . MenuItem . __init__ ( x = 0 , y = 0 , width = 1 , height = 1 , name = None , filename = None , parent = None , groups = None ) Initialize a MenuItem. Parameters: x ( int , default: 0 ) \u2013 The x coordinate of the menu item. y ( int , default: 0 ) \u2013 The y coordinate of the menu item. width ( int , default: 1 ) \u2013 The width of the menu item. height ( int , default: 1 ) \u2013 The height of the menu item. name ( str | None , default: None ) \u2013 The name of the menu item. filename ( str | None , default: None ) \u2013 The filename of the menu item. parent ( object | None , default: None ) \u2013 The parent of the menu item. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuItem . add ( * groups ) Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . MenuItem . add_menu ( menu ) Add a menu to the menu item. Parameters: menu ( MenuItem ) \u2013 The menu to add. Returns: None \u2013 None glitchygames . ui . MenuItem . add_menu_item ( menu_item , menu ) Add a menu item to the menu item. Parameters: menu_item ( MenuItem ) \u2013 The menu item to add. menu ( MenuBar ) \u2013 The menu to add the menu item to. Returns: None \u2013 None glitchygames . ui . MenuItem . update () Update the menu item. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drag_event ( event ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_drop_event ( event ) Handle left mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drag_event ( event ) Handle middle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_middle_mouse_drop_event ( event ) Handle middle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drag_event ( event ) Handle mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_drop_event ( event ) Handle mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_motion_event ( event ) Handle mouse motion events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_enter_event ( event ) Handle mouse enter events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_exit_event ( event ) Handle mouse exit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drag_event ( event ) Handle right mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_right_mouse_drop_event ( event ) Handle right mouse drop events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . MenuItem . on_mouse_wheel_event ( event ) Handle mouse wheel events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;MenuItem"},{"location":"#glitchygames.ui.TextSprite","text":"Bases: BitmappySprite A text sprite class. Attributes glitchygames . ui . TextSprite . x : int property writable Get the x coordinate of the text sprite. Returns: int ( int ) \u2013 The x coordinate of the text sprite. glitchygames . ui . TextSprite . y : int property writable Get the y coordinate of the text sprite. Returns: int ( int ) \u2013 The y coordinate of the text sprite. Classes glitchygames.ui.TextSprite.TextBox Bases: Sprite A text box class. Attributes glitchygames . ui . TextSprite . TextBox . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . ui . TextSprite . TextBox . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. glitchygames . ui . TextSprite . TextBox . x : int property writable Get the x coordinate of the text box. Returns: int ( int ) \u2013 The x coordinate of the text box. glitchygames . ui . TextSprite . TextBox . y : int property writable Get the y coordinate of the text box. Returns: int ( int ) \u2013 The y coordinate of the text box. Functions glitchygames . ui . TextSprite . TextBox . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextSprite . TextBox . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextSprite . TextBox . __init__ ( font , x , y , line_height = 15 , text = 'Text' , text_color = WHITE , parent = None , groups = None ) Initialize a TextBox. Parameters: font ( str ) \u2013 The font to use. x ( int ) \u2013 The x coordinate of the text box. y ( int ) \u2013 The y coordinate of the text box. line_height ( int , default: 15 ) \u2013 The line height of the text box. text ( str , default: 'Text' ) \u2013 The text to display in the text box. text_color ( tuple , default: WHITE ) \u2013 The color of the text. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . print_text ( surface , string ) Print text to the text box. Parameters: surface ( Surface ) \u2013 The surface to print the text to. string ( str ) \u2013 The text to print. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . reset () Reset the text box. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . indent () Indent the text box. Returns: None \u2013 None glitchygames . ui . TextSprite . TextBox . unindent () Unindent the text box. Returns: None \u2013 None Functions glitchygames . ui . TextSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . TextSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . TextSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . TextSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . TextSprite . __init__ ( x , y , width , height , name = None , background_color = BLACKLUCENT , text_color = WHITE , alpha = 0 , text = 'Text' , parent = None , groups = None ) Initialize a TextSprite. Parameters: x ( int ) \u2013 The x coordinate of the text sprite. y ( int ) \u2013 The y coordinate of the text sprite. width ( int ) \u2013 The width of the text sprite. height ( int ) \u2013 The height of the text sprite. name ( str , default: None ) \u2013 The name of the text sprite. background_color ( tuple , default: BLACKLUCENT ) \u2013 The background color of the text sprite. text_color ( tuple , default: WHITE ) \u2013 The color of the text. alpha ( int , default: 0 ) \u2013 The alpha value of the text sprite. text ( str , default: 'Text' ) \u2013 The text to display in the text sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextSprite . update () Update the text sprite. Returns: None \u2013 None glitchygames . ui . TextSprite . add ( * groups ) Add the sprite to a group. Parameters: *groups ( LayeredDirty , default: () ) \u2013 The groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_focus_event ( event , focus ) Handle mouse focus events. Parameters: event ( Event ) \u2013 The event to handle. focus ( object ) \u2013 The object that has focus. Returns: None \u2013 None glitchygames . ui . TextSprite . on_mouse_unfocus_event ( event ) Handle mouse unfocus events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextSprite"},{"location":"#glitchygames.ui.ButtonSprite","text":"Bases: BitmappySprite A button sprite class. Attributes glitchygames . ui . ButtonSprite . x : int property writable Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames . ui . ButtonSprite . y : int property writable Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. Functions glitchygames . ui . ButtonSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . ButtonSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . ButtonSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . ButtonSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . ButtonSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . ButtonSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . ButtonSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . ButtonSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . ButtonSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . ButtonSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a ButtonSprite. Parameters: x ( int ) \u2013 The x coordinate of the button sprite. y ( int ) \u2013 The y coordinate of the button sprite. width ( int ) \u2013 The width of the button sprite. height ( int ) \u2013 The height of the button sprite. name ( str , default: None ) \u2013 The name of the button sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . ButtonSprite . update_nested_sprites () Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ButtonSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ButtonSprite"},{"location":"#glitchygames.ui.CheckboxSprite","text":"Bases: ButtonSprite A checkbox sprite class. Attributes glitchygames . ui . CheckboxSprite . x : int property writable Get the x coordinate of the button sprite. Returns: int ( int ) \u2013 The x coordinate of the button sprite. glitchygames . ui . CheckboxSprite . y : int property writable Get the y coordinate of the button sprite. Returns: int ( int ) \u2013 The y coordinate of the button sprite. Functions glitchygames . ui . CheckboxSprite . update_nested_sprites () Update the nested sprites. Sets the dirty flag on the nested sprites. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . CheckboxSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . CheckboxSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . CheckboxSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . CheckboxSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . CheckboxSprite . __init__ ( x , y , width , height , name = None , callbacks = None , groups = None ) Initialize a CheckboxSprite. Parameters: x ( int ) \u2013 The x coordinate of the checkbox sprite. y ( int ) \u2013 The y coordinate of the checkbox sprite. width ( int ) \u2013 The width of the checkbox sprite. height ( int ) \u2013 The height of the checkbox sprite. name ( str , default: None ) \u2013 The name of the checkbox sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . update () Update the checkbox sprite. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . CheckboxSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;CheckboxSprite"},{"location":"#glitchygames.ui.InputBox","text":"Bases: Sprite An input box class. Attributes glitchygames . ui . InputBox . width : int property writable Return the width of the sprite. Returns: int ( int ) \u2013 The width of the sprite. glitchygames . ui . InputBox . height : int property writable Return the height of the sprite. Returns: int ( int ) \u2013 The height of the sprite. Functions glitchygames . ui . InputBox . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . InputBox . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . InputBox . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . InputBox . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_chord_up_event ( event ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_chord_down_event ( event ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputBox . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . __str__ () Returns a string representation of the sprite. glitchygames . ui . InputBox . __init__ ( x , y , width , height , color = ( 233 , 248 , 215 ), text = '' , name = None , parent = None , groups = None ) Initialize an InputBox. Parameters: x ( int ) \u2013 The x coordinate of the input box. y ( int ) \u2013 The y coordinate of the input box. width ( int ) \u2013 The width of the input box. height ( int ) \u2013 The height of the input box. color ( tuple , default: (233, 248, 215) ) \u2013 The color of the input box. text ( str , default: '' ) \u2013 The text to display in the input box. name ( str , default: None ) \u2013 The name of the input box. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . InputBox . activate () Activate the input box. Returns: None \u2013 None glitchygames . ui . InputBox . deactivate () Deactivate the input box. Returns: None \u2013 None glitchygames . ui . InputBox . on_input_box_submit_event ( event ) Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . update () Update the input box. Returns: None \u2013 None glitchygames . ui . InputBox . render () Render the input box. Returns: None \u2013 None glitchygames . ui . InputBox . on_mouse_up_event ( event ) Handle mouse up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputBox . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;InputBox"},{"location":"#glitchygames.ui.TextBoxSprite","text":"Bases: BitmappySprite A text box sprite class. Functions glitchygames . ui . TextBoxSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . TextBoxSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . TextBoxSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . TextBoxSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . TextBoxSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . TextBoxSprite . __init__ ( x , y , width , height , name = None , callbacks = None , parent = None , groups = None ) Initialize a TextBoxSprite. Parameters: x ( int ) \u2013 The x coordinate of the text box sprite. y ( int ) \u2013 The y coordinate of the text box sprite. width ( int ) \u2013 The width of the text box sprite. height ( int ) \u2013 The height of the text box sprite. name ( str , default: None ) \u2013 The name of the text box sprite. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . update () Update the text box sprite. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . TextBoxSprite . on_left_mouse_button_up_event ( event ) Handle left mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;TextBoxSprite"},{"location":"#glitchygames.ui.SliderSprite","text":"Bases: BitmappySprite A slider sprite class. Attributes glitchygames . ui . SliderSprite . value : int property writable Get the value of the slider sprite. Returns: int ( int ) \u2013 The value of the slider sprite. glitchygames . ui . SliderSprite . x : int property writable Get the x coordinate of the slider sprite. Returns: int ( int ) \u2013 The x coordinate of the slider sprite. glitchygames . ui . SliderSprite . y : int property writable Get the y coordinate of the slider sprite. Returns: int ( int ) \u2013 The y coordinate of the slider sprite. Classes glitchygames.ui.SliderSprite.SliderKnobSprite Bases: BitmappySprite A slider knob sprite class. Functions glitchygames . ui . SliderSprite . SliderKnobSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . update () Update the sprite. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . SliderSprite . SliderKnobSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . SliderSprite . SliderKnobSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . SliderSprite . SliderKnobSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . SliderSprite . SliderKnobSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a SliderKnobSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider knob sprite. y ( int ) \u2013 The y coordinate of the slider knob sprite. width ( int ) \u2013 The width of the slider knob sprite. height ( int ) \u2013 The height of the slider knob sprite. name ( str , default: None ) \u2013 The name of the slider knob sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . SliderKnobSprite . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None Functions glitchygames . ui . SliderSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . SliderSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . SliderSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . SliderSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . SliderSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . SliderSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . SliderSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . SliderSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . SliderSprite . __init__ ( x , y , width , height , name = None , parent = None , groups = None ) Initialize a SliderSprite. Parameters: x ( int ) \u2013 The x coordinate of the slider sprite. y ( int ) \u2013 The y coordinate of the slider sprite. width ( int ) \u2013 The width of the slider sprite. height ( int ) \u2013 The height of the slider sprite. name ( str , default: None ) \u2013 The name of the slider sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . SliderSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . SliderSprite . update () Update the slider sprite. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_button_down_event ( event ) Handle left mouse button down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . SliderSprite . on_left_mouse_drag_event ( event , trigger ) Handle left mouse drag events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;SliderSprite"},{"location":"#glitchygames.ui.ColorWellSprite","text":"Bases: BitmappySprite A color well sprite class. Attributes glitchygames . ui . ColorWellSprite . active_color : tuple [ int , int , int ] property writable Get the active color. Returns: tuple [ int , int , int ] \u2013 tuple[R: int, G: int, B: int]: The active color. glitchygames . ui . ColorWellSprite . hex_color : str property Get the hex color. Returns: str ( str ) \u2013 The hex color in #RRGGBB format. Functions glitchygames . ui . ColorWellSprite . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . ColorWellSprite . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_button_up_event ( event ) Handle a mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_down_event ( event ) Handle a key down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_up_event ( event ) Handle a key up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . __str__ () Returns a string representation of the sprite. glitchygames . ui . ColorWellSprite . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . ColorWellSprite . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . ColorWellSprite . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . ColorWellSprite . __init__ ( x , y , width , height , name , parent = None , groups = None ) Initialize a ColorWellSprite. Parameters: x ( int ) \u2013 The x coordinate of the color well sprite. y ( int ) \u2013 The y coordinate of the color well sprite. width ( int ) \u2013 The width of the color well sprite. height ( int ) \u2013 The height of the color well sprite. name ( str ) \u2013 The name of the color well sprite. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . ColorWellSprite . update () Update the color well sprite. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;ColorWellSprite"},{"location":"#glitchygames.ui.InputDialog","text":"Bases: BitmappySprite An input dialog class. Functions glitchygames . ui . InputDialog . render ( screen ) Render the sprite. Parameters: screen ( Surface ) \u2013 The screen to render to. Returns: None \u2013 None glitchygames . ui . InputDialog . __subclasshook__ ( subclass ) classmethod Override the default subclasshook to create an interface. glitchygames . ui . InputDialog . on_mouse_motion_event ( event ) Handle a mouse motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_event ( event , trigger ) Handle a mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drop_event ( event , trigger ) Handle a mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_event ( event , trigger ) Handle a left mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drop_event ( event , trigger ) Handle a left mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_event ( event , trigger ) Handle a middle mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drop_event ( event , trigger ) Handle a middle mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_event ( event , trigger ) Handle a right mouse drag event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drop_event ( event , trigger ) Handle a right mouse drop event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_focus_event ( event , old_focus ) Handle a mouse focus event. Parameters: event ( Event ) \u2013 The event to handle. old_focus ( object ) \u2013 The old focus. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_unfocus_event ( event ) Handle a mouse unfocus event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_button_up_event ( event ) Handle a left mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_button_up_event ( event ) Handle a middle mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_button_up_event ( event ) Handle a right mouse button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_button_down_event ( event ) Handle a mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_button_down_event ( event ) Handle a left mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_button_down_event ( event ) Handle a middle mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_button_down_event ( event ) Handle a right mouse button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_scroll_down_event ( event ) Handle a mouse scroll down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_scroll_up_event ( event ) Handle a mouse scroll up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_wheel_event ( event , trigger ) Handle a mouse wheel event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . break_when ( sprite_type = None ) classmethod Register a breakpoint for a sprite type. Parameters: sprite_type ( object | None , default: None ) \u2013 The sprite type to break on. Returns: None \u2013 None glitchygames . ui . InputDialog . dt_tick ( dt ) Update the sprite's delta time. Parameters: dt ( float ) \u2013 The new delta time. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_axis_motion_event ( event ) Handle a joystick axis motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_button_down_event ( event ) Handle a joystick button down event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_button_up_event ( event ) Handle a joystick button up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_hat_motion_event ( event ) Handle a joystick hat motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_joy_ball_motion_event ( event ) Handle a joystick ball motion event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_enter_event ( event ) Handle a mouse enter event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_exit_event ( event ) Handle a mouse exit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_down_event ( event , trigger ) Handle a mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_down_event ( event , trigger ) Handle a left mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_left_mouse_drag_up_event ( event , trigger ) Handle a left mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_down_event ( event , trigger ) Handle a middle mouse drag down event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_middle_mouse_drag_up_event ( event , trigger ) Handle a middle mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_down_event ( event , trigger ) Handle a right mouse drag down event. Args: event (pygame.event.Event): The event to handle. trigger (object | None): The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_right_mouse_drag_up_event ( event , trigger ) Handle a right mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object | None ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_drag_up_event ( event ) Handle a mouse drag up event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_chord_up_event ( event , keys ) Handle a mouse chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_chord_down_event ( event , keys ) Handle a mouse chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_chord_down_event ( event , keys ) Handle a key chord down event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_chord_up_event ( event , keys ) Handle a key chord up event. Parameters: event ( Event ) \u2013 The event to handle. keys ( list ) \u2013 The keys that were pressed. Returns: None \u2013 None glitchygames . ui . InputDialog . on_quit_event ( event ) Handle a quit event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_active_event ( event ) Handle an active event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_video_resize_event ( event ) Handle a video resize event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_video_expose_event ( event ) Handle a video expose event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_sys_wm_event ( event ) Handle a sys wm event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_user_event ( event ) Handle a user event. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . __str__ () Returns a string representation of the sprite. glitchygames . ui . InputDialog . load ( filename ) Load a sprite from a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: tuple [ Surface , Rect , str ] \u2013 A tuple containing the sprite's image, rect, and name. Raises: NoSectionError \u2013 if the config file is missing a section. NoOptionError \u2013 if the config file is missing an option. glitchygames . ui . InputDialog . inflate ( width , height , pixels , color_map ) classmethod Inflate a sprite from a list of pixels. Parameters: width ( int ) \u2013 the width of the sprite. height ( int ) \u2013 the height of the sprite. pixels ( list ) \u2013 the list of pixels. color_map ( dict ) \u2013 the color map. Returns: tuple [ Surface , Rect ] \u2013 A tuple containing the sprite's image and rect. glitchygames . ui . InputDialog . save ( filename ) Save a sprite to a Bitmappy config file. Parameters: filename ( str ) \u2013 the filename of the Bitmappy config file. Returns: None \u2013 None glitchygames . ui . InputDialog . deflate () Deflate a sprite to a Bitmappy config file. Returns: dict \u2013 A dict containing the sprite's config. glitchygames . ui . InputDialog . __init__ ( x , y , width , height , name = None , dialog_text = 'Would you like to do a thing?' , confirm_text = 'Confirm' , cancel_text = 'Cancel' , callbacks = None , parent = None , groups = None ) Initialize an InputDialog. Parameters: x ( int ) \u2013 The x coordinate of the input dialog. y ( int ) \u2013 The y coordinate of the input dialog. width ( int ) \u2013 The width of the input dialog. height ( int ) \u2013 The height of the input dialog. name ( str , default: None ) \u2013 The name of the input dialog. dialog_text ( str , default: 'Would you like to do a thing?' ) \u2013 The text to display in the dialog. confirm_text ( str , default: 'Confirm' ) \u2013 The text to display on the confirm button. cancel_text ( str , default: 'Cancel' ) \u2013 The text to display on the cancel button. callbacks ( Callable , default: None ) \u2013 The callbacks to call when events occur. parent ( object , default: None ) \u2013 The parent object. groups ( LayeredDirty | None , default: None ) \u2013 The sprite groups to add the sprite to. Returns: None \u2013 None glitchygames . ui . InputDialog . update_nested_sprites () Update the nested sprites. Returns: None \u2013 None glitchygames . ui . InputDialog . update () Update the input dialog. Returns: None \u2013 None glitchygames . ui . InputDialog . on_confirm_event ( event , trigger ) Handle confirm events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_cancel_event ( event , trigger ) Handle cancel events. Parameters: event ( Event ) \u2013 The event to handle. trigger ( object ) \u2013 The object that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_input_box_cancel_event ( control ) Handle input box cancel events. Parameters: control ( object ) \u2013 The control that triggered the event. Returns: None \u2013 None glitchygames . ui . InputDialog . on_input_box_submit_event ( event ) Handle input box submit events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_mouse_button_up_event ( event ) Handle mouse button up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_up_event ( event ) Handle key up events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None glitchygames . ui . InputDialog . on_key_down_event ( event ) Handle key down events. Parameters: event ( Event ) \u2013 The event to handle. Returns: None \u2013 None","title":"<code class=\"doc-symbol doc-symbol-toc doc-symbol-class\"></code>&nbsp;InputDialog"},{"location":"#glitchygames.ui-modules","text":"","title":"Modules"},{"location":"about/","text":"Vulnus orbem ante cum facti tantae Amantis nervo iactatis Lorem markdownum vivitur idem, requirit solidaque imagine parentum, belli. Commissus quia. Ille texerat: subiit coniuge ramus; Agenorides qui tantis Alcidae fila splendidior lecti Athin eveniunt delicuit tempore. Presserat greges Cytherea Antandro tela nam superis inde. Mitescere nec ad mea ponto mergis caelataeque Quae sonumque illis capellas agit Aram mihi concepit esse esse expalluit Typhoea Miserum niveae ingratus in bis erit quia somnus. Ubi fata fatalia, ligamina Cytherea! Ac deorum nisi, non locum, et plectrumque haut, et Acrota reddant aliisque. Ne petiit, patrio, omnem facto somnia. Par aquas nudorum Summa tertia est melius flebat locus relinquunt Montis quoque vides primusque per sparsum videbar Conplexibus frustraque hunc Ita tepidi quam lumina pennis Veretur et veniet Lumina Demoleonta procubuit Circe Est forte vixque, dixit eris vidi corpore posset usque, contractus replet. Ima patrios pendat vitiantes ignes. Haerebat sceleri. Famulus altior amante esse sontem cadunt mella, terrasque tetigere miserisque forma Philyreia vestras. Iacta quidem illa dum; capiti, clam serpit sorores, rectoque Palladaque aurata. Educta flectitque maior: quercus canae laedor agrestibus bella fingant. Fortibus umoribus factis vimque, mihi est aut limite cetera perfida. Enim nebula magni haud parvo frons, maris exanimi; tribuisse principiis. Manat insequitur , positis quid piasque, qui tantum, quisquis vana Cephalus velamina. Fert dictaque dolor, ira vel; ut densa si servor viscera bracchia, linquit est servat ictus anguipedum. Modo telae sic extemplo Venulus nomen vires dubitare, mollirique, aetas? Iter attolle omnia ripae vivaci plurima, media labique lacrimis Siculis ut litora sospite. Disiecta obruor meritum in aequore precor pedibusque pendentis.","title":"About"},{"location":"about/#vulnus-orbem-ante-cum-facti-tantae","text":"","title":"Vulnus orbem ante cum facti tantae"},{"location":"about/#amantis-nervo-iactatis","text":"Lorem markdownum vivitur idem, requirit solidaque imagine parentum, belli. Commissus quia. Ille texerat: subiit coniuge ramus; Agenorides qui tantis Alcidae fila splendidior lecti Athin eveniunt delicuit tempore. Presserat greges Cytherea Antandro tela nam superis inde. Mitescere nec ad mea ponto mergis caelataeque Quae sonumque illis capellas agit Aram mihi concepit esse esse expalluit Typhoea Miserum niveae ingratus in bis erit quia somnus. Ubi fata fatalia, ligamina Cytherea! Ac deorum nisi, non locum, et plectrumque haut, et Acrota reddant aliisque. Ne petiit, patrio, omnem facto somnia. Par aquas nudorum Summa tertia est melius flebat locus relinquunt Montis quoque vides primusque per sparsum videbar Conplexibus frustraque hunc Ita tepidi quam lumina pennis Veretur et veniet","title":"Amantis nervo iactatis"},{"location":"about/#lumina-demoleonta-procubuit-circe","text":"Est forte vixque, dixit eris vidi corpore posset usque, contractus replet. Ima patrios pendat vitiantes ignes. Haerebat sceleri. Famulus altior amante esse sontem cadunt mella, terrasque tetigere miserisque forma Philyreia vestras. Iacta quidem illa dum; capiti, clam serpit sorores, rectoque Palladaque aurata. Educta flectitque maior: quercus canae laedor agrestibus bella fingant. Fortibus umoribus factis vimque, mihi est aut limite cetera perfida. Enim nebula magni haud parvo frons, maris exanimi; tribuisse principiis. Manat insequitur , positis quid piasque, qui tantum, quisquis vana Cephalus velamina. Fert dictaque dolor, ira vel; ut densa si servor viscera bracchia, linquit est servat ictus anguipedum. Modo telae sic extemplo Venulus nomen vires dubitare, mollirique, aetas? Iter attolle omnia ripae vivaci plurima, media labique lacrimis Siculis ut litora sospite. Disiecta obruor meritum in aequore precor pedibusque pendentis.","title":"Lumina Demoleonta procubuit Circe"}]}